<?xml version="1.0" encoding="UTF-8"?>
<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id: //ariba/cxml/modules/Common.mod#6 $
-->

<!--
    A few character entities the XML recommendation says should be defined
    "for interoperability" with existing SGML parsers.  By default, these
    are not included to avoid warnings (about entity redefinition) from
    many XML parsers.
-->
<!ENTITY % SGML-help "IGNORE">
<![%SGML-help;[
<!ENTITY lt     "&#38;#60;">
<!ENTITY gt     "&#62;">
<!ENTITY amp    "&#38;#38;">
<!ENTITY apos   "&#39;">
<!ENTITY quot   "&#34;">
]]>

<!--
    Common types used throughout the cXML definition.

    The types try to follow the XML DATA definition submitted to the W3C. See
    the following for more information,

        http://msdn.microsoft.com/xml/reference/schema/datatypes.asp
        http://www.w3c.org/TR/1998/NOTE-XML-data-0105/

-->

<!-- Atomic-level Types -->
<!ENTITY % bin.base64 "CDATA">
<!ENTITY % bin.hex "CDATA">
<!ENTITY % boolean "(0 | 1)">    <!-- 0 is false, 1 is true -->
<!ENTITY % char "CDATA">
<!ENTITY % date "CDATA">
<!ENTITY % datetime.tz "CDATA">  <!-- Time zone is required -->
<!ENTITY % fixed.14.4 "CDATA">
<!ENTITY % i8 "CDATA">
<!ENTITY % int "%i8;">
<!ENTITY % r8 "CDATA">
<!ENTITY % number "CDATA">       <!-- No limit on number of digits, unlike
                                      %r8; -->
<!ENTITY % string "CDATA">
<!ENTITY % time.tz "CDATA">      <!-- Time zone is required -->
<!ENTITY % duration "CDATA">      <!--ISO8601 duration http://www.w3.org/TR/xmlschema-2/#duration  -->
<!ENTITY % ui8 "CDATA">
<!ENTITY % uint "%ui8;">         <!-- Unique to this specification -->
<!ENTITY % uri "CDATA">
<!ENTITY % uuid "CDATA">

<!-- Higher-level Types -->
<!--
    NOTE: The following is a temporary *hack* to allow empty values for
    some attributes with these types.  The nmtoken entity should resolve to
    NMTOKEN.
-->
<!ENTITY % nmtoken "CDATA">      <!-- Any combination of XML name chars. -->
<!ENTITY % isoLangCode "%nmtoken;">         <!-- ISO 639 Language Code -->
<!ENTITY % isoCountryCode "%nmtoken;">      <!-- ISO 3166 Country Code -->
<!ENTITY % isoStateCode "%nmtoken;">      <!-- ISO 3166-2:2013 Country Subdivision (State) Code -->
<!ENTITY % isoCurrencyCode "%nmtoken;">     <!-- ISO 4217 Currency Code -->
<!ENTITY % xmlLangCode "%nmtoken;"> <!-- Language code as defined by XML
                                         recommendation: Language and
					 country. -->
<!ENTITY % URL "%uri;">
<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id: //ariba/cxml/release/schema/1.2.29.1+/Modules/Base.mod#5 $
-->

<!--
    This file defines the basic elements used to build higher level
    constructs in cXML.
-->

<!-- Basic Name/Data Elements -->
<!--
    Name is used to provide an identifier for other elements.

    xml:lang
        The language in which the name is written.
-->
<!ELEMENT Name (#PCDATA)> <!-- string -->
<!ATTLIST Name
    xml:lang  %xmlLangCode;  #REQUIRED
>

<!--
    An Extrinsic is an element which can be used to extend the data
    associated with known elements.

    Since this Element is of type ANY, it could contain any arbitrary XML
    document within itself, or a binary ![CDATA[]] document.

    name
        Name used to identify this extrinsic.
-->
<!ELEMENT Extrinsic ANY>
<!ATTLIST Extrinsic
    name  %string;  #REQUIRED
>

<!--
    Description is a string which describes something.
    Though text may be interspersed with ShortName elements in this content
    model, placing the ShortName at the beginning or end of the element is
    much preferred.  At most one ShortName element is allowed per
    Description.  The intended content model would be more like
    (( ShortName, #PCDATA ) | ( #PCDATA | ShortName? )) if DTD syntax
    supported it.

    xml:lang
        The language in which the description is written.
    type
        The qualifier of the description.
-->
<!ELEMENT Description ( #PCDATA | ShortName )* > <!-- mixed: string and
                                                      ShortName -->
<!ATTLIST Description
    xml:lang  %xmlLangCode;  #REQUIRED
    type  %string;   #IMPLIED
>

<!--
    A short string which describes something in fewer characters than the
    entire Description.  This should be used when limited space is available.
    For example, a table of elements might show the ShortName's of each.  A
    linked "details" view would show the entire Description (including the
    ShortName).  Without a ShortName, the user interface must default to a
    truncation of the Description.
    This element does not require an xml:lang attribute since it appears only
    within a Description element.  The language of the ShortName must match
    that of the surrounding Description.
-->
<!ELEMENT ShortName (#PCDATA)> <!-- string -->

<!-- Telephone Number Elements -->
<!--
    International ITU dial code for the country code in question.  This
    code would be entered after any escape code necessary to begin
    International dialing.  That is, the escape code does not appear in the
    content of this element.

    isoCountryCode
        The ISO 3166 2-letter country code for the dial code in question.
-->
<!ELEMENT CountryCode (#PCDATA)> <!-- uint -->
<!ATTLIST CountryCode
    isoCountryCode  %isoCountryCode;  #REQUIRED
>

<!--
    The areacode or city code within a CountryCode.
-->
<!ELEMENT AreaOrCityCode (#PCDATA)> <!-- uint -->

<!--
    The local number part of a telephone number.
-->
<!ELEMENT Number (#PCDATA)> <!-- string -->

<!--
    An extension within relative to the Number element. This element has no
    meaning without an associated Number element.
-->
<!ELEMENT Extension (#PCDATA)> <!-- uint -->

<!--
    TelephoneNumber represents international telephone numbers.
-->
<!ELEMENT TelephoneNumber (CountryCode, AreaOrCityCode, Number, Extension?)>

<!--
     Phone is a "named" TelephoneNumber.

     name
          specifies an identifier which indicates the type of phone number.
          US examples would include "work","home", etc.
-->
<!ELEMENT Phone (TelephoneNumber)>
<!ATTLIST Phone
    name  %string;  #IMPLIED
>

<!--
    Fax number.
-->
<!ELEMENT Fax (TelephoneNumber | URL | Email)>
<!ATTLIST Fax
    name  %string;  #IMPLIED
>

<!-- Addressing Elements -->
<!--
    URL. A string which represents a URL
-->
<!ELEMENT URL (#PCDATA)> <!-- URL -->
<!ATTLIST URL
    name  %string;  #IMPLIED
>

<!--
    An email address. Address must conform to RFC 821 (SMTP Standard).

    preferredLang
        optional language that the email owner prefers to receive
        emails in. Refer to the definition of xmlLangCode entity.

-->
<!ELEMENT Email (#PCDATA)> <!-- string -->
<!ATTLIST Email
    name          %string;       #IMPLIED
    preferredLang %xmlLangCode;  #IMPLIED
>

<!--
    Contact represents an entity at a location. The nature of this
    element is that it represents a communication "end point" for a
    location.


   IdReference
       ID reference is Within the application context (for example,
a certain pair of buyer and supplier),
       the (identifier, domain) pair
 should be unique.
    role
        Position this person or group plays in the procurement process.
        Likely values include endUser, administrator, purchasingAgent,
        technicalSupport, customerService, sales,
        supplierCorporate, supplierMasterAccount, supplierAccount,
        buyerCorporate, buyerMasterAccount, buyerAccount, buyer,
        subsequentBuyer. Other values may be allowed in some cases.

        from and to roles are reserved for future use.

    addressID
        An id for the address. Needed to support address codes for
        relationships that require id references. Example: plantID

     addressIDDomain
	It is the qualifier for the addressId to specify the agency or organization. Examples are DUNS, ILN and buyerLocationID.

-->
<!ELEMENT Contact (Name, PostalAddress*, Email*, Phone*, Fax*, URL*, IdReference*, Extrinsic*)>
<!ATTLIST Contact
    role             NMTOKEN           #IMPLIED
    addressID        %string;          #IMPLIED
    addressIDDomain   %string;   #IMPLIED
>

<!--
    The DeliverTo part of an Address. This would be internal to the actual
    address know to the outside world. Similar to what an extension is to a
    TelephoneNumber.
-->
<!ELEMENT DeliverTo (#PCDATA)> <!-- string -->

<!--
    Street is a single line of an Address' location.
-->
<!ELEMENT Street (#PCDATA)> <!-- string -->

<!--
    City is the name of the city in an Address' location.

    cityCode
        Optional code assigned by local/government agencies identifying a city region
-->
<!ELEMENT City (#PCDATA)> <!-- string -->
<!ATTLIST City
    cityCode  %string;  #IMPLIED
>

<!--
    State is an optional state identifier in an Address' location.

    isoStateCode
        The ISO 3166-2:2013 country subdivision (state) code for this country.
        Universally applicable code for the representation of the names of
        principal administrative divisions of countries and territories included
        in ISO 3166-1. It is intended to be used in conjunction with ISO 3166-1.
-->
<!ELEMENT State (#PCDATA)> <!-- string -->
<!ATTLIST State
    isoStateCode  %isoStateCode;  #IMPLIED
>

<!--
    PostalCode (I have no idea how to describe it)
-->
<!ELEMENT PostalCode (#PCDATA)> <!-- string -->

<!--
    Country is the name of the country in an Address' location.  The
    content of this element is a string which may (for example) be printed
    directly to a shipping label.  The content is the human-readable
    equivalent of the isoCountryCode used by applications.

    isoCountryCode
        The ISO 3166 2-letter country code for this country.
-->
<!ELEMENT Country (#PCDATA)> <!-- string -->
<!ATTLIST Country
    isoCountryCode  %isoCountryCode;  #REQUIRED
>

<!--
    Municipality specifies the name of the municipality in an Address’ location.

    municipalityCode
        Optional code assigned by local/government agencies identifying a municipality region
-->
<!ELEMENT Municipality (#PCDATA)> <!-- string -->
<!ATTLIST Municipality
    municipalityCode  %string;  #IMPLIED
>


<!--
    PostalAddress is a real-world location for a business or person.
-->
<!ELEMENT PostalAddress (DeliverTo*, Street+, City, Municipality?, State?,
                         PostalCode?, Country, Extrinsic*)>
<!ATTLIST PostalAddress
    name  %string;  #IMPLIED
>

<!--
    Address is the association of a Contact and an Location.

    isoCountryCode
        The ISO 3166 2-letter country code for the country containing this
        location.

    addressID
        An id for the address.  Needed to support address codes for
        relationships that require id references.  An example would be a
        shipping code.

     addressIDDomain
	It is the qualifier for the addressId to specify the agency or organization. Examples are DUNS and ILN.
-->
<!ELEMENT Address (Name, PostalAddress?, Email?, Phone?, Fax?, URL?)>
<!ATTLIST Address
    isoCountryCode  %isoCountryCode;  #IMPLIED
    addressID       %string;          #IMPLIED
    addressIDDomain   %string;   #IMPLIED
>

<!--
    Defines the parties involved in a document (e.g. service entry sheet),
    including fieldContractor, fieldEngineer and requester.

    Contact
        Contact information for the document (e.g. service entry sheet) partners.
        Allowed contact roles include fieldContractor, fieldEngineer and requester.

    IdReference
        Partner reference ID, including party ID, supplier tax ID, etc.
-->
<!ELEMENT PartnerContact (Contact, IdReference*)>

<!--
    Defines the information of the issuer who is associated to the customs info document.

    Address
        Defines the real world location of the issuer
-->
<!ELEMENT Issuer ( Address )>

<!-- Financial Elements -->
<!--
    Money is the representation of the object used to pay for items.

    currency
        specifies the currency in which amount is stated, must conform to ISO
        4217 currency codes.

    alternateAmount
        the amount of money in the alternateCurrency. Optional and used to
        support dual-currency requirements such as the Euro.

    alternateCurrency
        specifies the currency in which the alternateAmount is stated, must
        conform to ISO 4217 currency codes.
-->
<!ELEMENT Money (#PCDATA)> <!-- number -->
<!ATTLIST Money
    currency           %isoCurrencyCode;  #REQUIRED
    alternateAmount    %number;           #IMPLIED
    alternateCurrency  %isoCurrencyCode;  #IMPLIED
>

<!--
    Optional textual child for communicating arbitrary comments or
    description along with the parent.
    Though text may be interspersed with Attachment elements in this content
    model, grouping the Attachment list at the begging or end of the element
    is much preferred.  The intended content model would be more like
    (( Attachment+, #PCDATA ) | ( #PCDATA | Attachment* )) if the DTD syntax
    supported it.

    xml:lang
        The language in which the Comments are written.  This attribute
    will be required in a future version of cXML.  (Leaving it out is
    deprecated.)

    type
        An optional type of the comments. Type can be used to make the comments
        structured with respect to what they describe.
-->
<!ELEMENT Comments ( #PCDATA | Attachment )* > <!-- mixed: string and
                                                    opt. Attachment list -->
<!ATTLIST Comments
    xml:lang  %xmlLangCode;  #IMPLIED
    type      %string;       #IMPLIED
>

<!--
    Optional child of Comments element referencing a part in a multipart MIME
    transmission.

    The contained URL must use the scheme "cid:".  This is the identifier for
    the referenced attachment within the larger transmission.  Must match the
    Content-ID header of one (and only one) part of the MIME transmission
    containing this cXML document.  May also be used to retrieve the
    attachment file separately.
-->
<!ELEMENT Attachment (URL)>

<!---
    Reference to a remote attachment.

    AttachmentReference is used inside Extrinsic elements that have a
    predefined name of "Attachments".

    In the context of AttachmentReference, the domain attribute of
    InternalID is currently optional. However, as a way to prevent
    circular request paths, the sending application may use a
    predefined value of "local" to indicate that the attachment
    requested is local to the other application.

    length
        length of the attachment in bytes.
-->
<!ELEMENT AttachmentReference (Name, Description, InternalID)>
<!ATTLIST AttachmentReference
    length  %uint;  #IMPLIED
>

<!--
    Price per unit of item.  Optional Modifications
    (changes due to discounts or fixed amount) may be provided.
    The Money element indicates the final amount after applying the
    Modifications.
-->
<!ELEMENT UnitPrice (Money, Modifications?)>

<!--
    Reference to an earlier document (for example, OrderRequest).  In a
    StatusUpdateRequest, this element identifies the purchase order to be
    updated.

    payloadID
        A unique identifier for the document.  Copied directly from the
        cXML element of the original document.
-->
<!ELEMENT DocumentReference EMPTY>
<!ATTLIST DocumentReference
    payloadID       %string;      #REQUIRED
>

<!ELEMENT InternalID (#PCDATA)> <!-- string -->
<!ATTLIST InternalID
    domain   %string;  #IMPLIED
>

<!-- ====
    Common to most variants of the PunchOut transaction set.  Defined here
    to be easily shared between multiple DTD files without requiring
    inclusion of Transaction.mod in all of them.

    All of the PunchOut transaction sets include an originating Request
    (ProviderSetupRequest for example), relatively simple Response
    (PunchOutSetupResponse for example) and final Message
    (ProviderDoneMessage or PunchOutOrderMessage).  The Request and
    Response comprise a back-end transaction between two cooperating
    applications that wish to extend an interactive session from one to the
    other.  The Request provides the destination application with
    authentication, identification and other setup information.  The
    Response provides the originating application with a unique starting
    location for the interactive (HTML) session at the destination system.

    After receiving a Response of this type, the originating application
    redirects the user's browser to the provided location.  (For some
    non-HTML applications, opening a new browser window at that location
    may be more appropriate.)  The destination system eventually provides
    an HTML form to the user's browser.  This form submits the final
    Message to close the remote session, return that user to the
    originating application and carry any required information back to the
    originating application.
==== -->

<!--
    OriginatorCookie - Identification of a specific PunchOut session.  Used
    in both originating Request and later Message that returns user to
    originating application.

    Note: The BuyerCookie element used in a 'regular' PunchOut transaction
    (defined in Transaction.mod) is of type ANY.  That does not seem
    useful.  The string required below better matches the needs for this
    element.  Future transactions similar to the PunchOut transaction will
    use this element.
-->
<!ELEMENT OriginatorCookie (#PCDATA)>

<!--
    BrowserFormPost - Location to which the user's browser must submit the
    final Message.  This location (carried in the originating Request) does
    not need to be specific to a PunchOut session since the
    OriginatorCookie is returned in the Message.
-->
<!ELEMENT BrowserFormPost (URL)>

<!--
    SelectedService - Identification of a service offered by this provider
    and requested in this transaction.  Used only in the originating
    Request.
-->
<!ELEMENT SelectedService (#PCDATA)>

<!--
    StartPage - Location to which the user's browser must be redirected to
    begin the interactive portion of the session at the remote site.  The
    destination system returns this information in the Response document.
    This location must be specific to a particular session.  It is
    effectively a one time key, providing authenticated entry into the
    destination system.
-->
<!ELEMENT StartPage (URL)>

<!--
    ReturnData - Any information the originator must know about the
    completed operation at the provider site.  The ReturnValue is for
    applications; the Name is for human consumption (direct presentation in
    the User Interface of the application).  Where appropriate for the
    possible services, this element may appear in the final Message for a
    PunchOut session.

    name
        An identifier for the data returned.  Provides a meaning for the
        contents of a ReturnData element.
-->
<!ELEMENT ReturnData (ReturnValue, Name)>
<!ATTLIST ReturnData
    name  %string;  #IMPLIED
>

<!ELEMENT ReturnValue (#PCDATA)>

<!--
    Defines a time range. The start and end can be unbounded
    startDate
        The starting date of the time range
    endDate
        The ending date of the range
-->
<!ELEMENT TimeRange EMPTY>
<!ATTLIST TimeRange
    startDate      %datetime.tz;         #IMPLIED
    endDate        %datetime.tz;         #IMPLIED
>

<!--
    Defines a period in time.

    startDate
        The starting date of the period

    endDate
        The ending date of the period
-->
<!ELEMENT Period EMPTY>
<!ATTLIST Period
    startDate      %datetime.tz;         #REQUIRED
    endDate        %datetime.tz;         #REQUIRED
>

<!--
    Must be a UN/CEFACT (Recommendation 20) unit of measure code.
-->
<!ELEMENT UnitOfMeasure (#PCDATA)> <!-- nmtoken -->


<!--
    Define the quantity as quoted in the UnitPrice

    UnitOfMeasure
	The unit of measure for the quote
    Description
	The textual description of the quote
    quantity
	the quantity basis for the quote
    conversionFactor
	the conversion ratio from the unit of measure of the order to the unit of measure of the PriceBasisQuantity
-->
<!ELEMENT PriceBasisQuantity (UnitOfMeasure, Description?)>
<!ATTLIST PriceBasisQuantity
    quantity         %r8;    #REQUIRED
    conversionFactor %r8;    #REQUIRED
>



<!--
    Defines a reference to a term which is defined
    in another document.

    termName
        The name of the ID attribute containing the term.

    term
        The value of that attribute (i.e., the term itself).

-->
<!ELEMENT TermReference EMPTY>
<!ATTLIST TermReference
	termName %string; #REQUIRED
	term %string; #REQUIRED
>

<!--
    Defines an optionally named monetary rate at which goods or services are
    charged or paid.

    Money
        The amount of Money per UnitOfMeasure to be charged or paid.

    UnitOfMeasure
        Unit of measure.

    PriceBasisQuantity
	the quantity the price is quoted on

    TermReference
        Identifies the definition of this UnitRate
        (found, for example,  in contracts, master agreements, and other documents
        which may or may not be cXML documents).
-->
<!ELEMENT UnitRate (
    Money,
    UnitOfMeasure,
    PriceBasisQuantity?,
    TermReference?
)>

<!--
    The rate information used to define the rate of a purchase.  For
    example, this could be the total room rate for 4 nights of stay
    at a hotel.

    Total
        The total amount for the rate.  The total amount must equal
        to quantity x UnitRate.

    UnitRate
        The single unit rate.

    Description
        Textual description for the rate.  For example, hotel nightly rate.

    Quantity
        The quantity.  For example, a 4 nights stay at a hotel will
        have quantity set to 4 with UnitofMesure in UnitRate set to Day.
-->
<!ELEMENT Rate (Total, UnitRate, Description?)>
<!ATTLIST Rate
    quantity    %r8;    #REQUIRED
>

<!--
    The total for something.
-->
<!ELEMENT Total (Money, Modifications?)>

<!--
    Tolerances for price, quantity, delivery date.
-->
<!ELEMENT Tolerances (QuantityTolerance?, PriceTolerance?, TimeTolerance?)>

<!ELEMENT QuantityTolerance (Percentage | Value)>

<!ELEMENT PriceTolerance (Percentage | Money)>

<!--
    Defines a certain amount of days which is used to check if a concrete
    delivery date is within the tolerance regarding the requested
    delivery date.

    limit
        Amount of time in 'type' relative to the requested delivery date is it allowed to deliver?
    type
        Specifies how the limit should be interpreted.
-->
<!ELEMENT TimeTolerance EMPTY>
<!ATTLIST TimeTolerance
    limit %int; #REQUIRED
    type  (minutes | hours | days | weeks) "days"
>

<!-- Upper tolerances defines an upper limit -->
<!ELEMENT Upper (Tolerances)>
<!-- Lower tolerances defines a lower limit -->
<!ELEMENT Lower (Tolerances)>

<!ELEMENT TaxAmount (Money)>

<!ELEMENT TaxableAmount (Money)>

<!--
    One language-specific string for the location of tax,
    e.g. London, Canada, California, etc.

    xml:lang
        The language or locale in which the location of tax is written.
-->
<!ELEMENT TaxLocation (#PCDATA)>              <!-- string -->
<!ATTLIST TaxLocation
   xml:lang              %xmlLangCode;         #REQUIRED
>

<!--

    TriangularTransactionLawReference indicates the relevant law as
    titled for the local jurisdiction in the scenario of a triangular
    transaction.  ex: Triangulation, article 28c,E paragraph 3 of the
    6th EU VAT Directive

    xml:lang
        the language in which the law reference is written.
-->
<!ELEMENT TriangularTransactionLawReference (#PCDATA)>
<!ATTLIST TriangularTransactionLawReference
    xml:lang   %xmlLangCode;    #REQUIRED
>

<!--
    Defines details of one type of tax.

    TaxableAmount
       The taxable amount.

    TaxAmount
       The tax amount.

    TaxLocation
       The tax location.

    Description
       The textual description of the current type of tax.

    TriangularTransactionLawReference
       The law reference for transactions where isTriangularTransaction is True

    purpose
       The purpose of the tax, e.g., tax (tax), custom duty, shippingTax,
       specialHandlingTax, etc.

    category
       The tax category, Sales tax (sales), Use tax (usage), VAT (vat),
       GST (gst) are defined categories. Other values are permitted.

    percentageRate
       The tax rate in number of percentage.

    isVatRecoverable
       True if the VAT is recoverable.  Default is false.

    taxPointDate
       refers to the date on which VAT becomes due.

    paymentDate
       indicate the date when payment must be made.

    isTriangularTransaction
       True if the transaction is triangular.  Default is false.

    exemptDetail
       If the TaxAmount is zero, VAT or other regulations may require
       a reason why.  zeroRated means the tax rate is zero.  exempt
       means the item or items are exempt from taxation.

-->
<!ELEMENT TaxDetail (TaxableAmount?, TaxAmount, TaxLocation?, Description?,
                     TriangularTransactionLawReference?, TaxRegime?, Extrinsic*)>
<!ATTLIST TaxDetail
    taxedElement            IDREF          #IMPLIED
	purpose                 %string;       #IMPLIED
    category                %string;       #REQUIRED
    percentageRate          %r8;           #IMPLIED
    isVatRecoverable        (yes)          #IMPLIED
    taxPointDate            %datetime.tz;  #IMPLIED
    paymentDate             %datetime.tz;  #IMPLIED
    isTriangularTransaction (yes)          #IMPLIED
    exemptDetail            (zeroRated | exempt)  #IMPLIED
>

<!--   TaxRegime is related to the type of supplier activities and the
	commodities in the invoice. Companies pay taxes based on the tax regime
	they are enrolled.   Sample tax regimes: Assimilated Regime wages, Regime
	of Small Taxpayers (REPECO), Regimen of business and professional activities,
	etc. Multiple tax regimes can be associated with a single invoice.
-->

<!ELEMENT TaxRegime (#PCDATA)>


<!--
    Definition of a cXML Tax item. This represents what a Tax element should
    be in the classic notion of a line on a PO or Invoice. It can also
    represent a per-lineitem tax element depending on where it appears
    (inside of a item ELEMENT or inside of a something like a supplierOrder
    ELEMENT).

    Represents a tax item in the shopping basket. There could be one of these
    for the entire order, or one per lineitem.

    The total amount of taxes for the line item or order should be reflected
    in the Money element. The breakdown of taxes, for example, tax on shipping
    or tax on goods should be represented in separate TaxDetail elements.
-->
<!ELEMENT Tax (Money, Description, TaxDetail*, Extrinsic*)>

<!--
    Defines a Modifications element which provides the original unit
    price or shipping price and then describes a set of 1 or more
    modifications to that price.  There can one per Shipping element.
    The optional method attribute defines how multiple Modification elements
    are combined.
-->
<!ELEMENT Modifications (Modification+)>

<!--
    Defines the original price or shipping price and optionally provides a type.
    Example type values might be MSRP, ListPrice, Actual, AverageSellingPrice,
    CalculationGross, BaseCharge, AverageWholesalePrice, ExportPrice, AlternatePrice,
    ContractPrice, etc.
-->
<!ELEMENT OriginalPrice (Money)>
<!ATTLIST OriginalPrice
    type            %string;  #IMPLIED
>

<!--
    Defines a Modification element and optionally provide a level: AdditionalDeduction: used only when allownces are involved
     AdditionalCost: used when additional charges are involved
     OriginalPrice represents the price on which the discount or charges apply.
     Tax represents the Tax on the Modification

	 Optional attribute level represent level of modification(using in cascading modifications).
	 Example:
	 Charge 1 (Level 1): Original Price 10$ Charge: 1$
	 Charge 2 (Level 1): Original Price 10$ Charge: 1$
	 Charge 3 (Level 2): Original Price 8$ Charge: 1$
	 Charge 4 (Level 3): Original Price 7$ Charge: 1$ ...
-->
<!ELEMENT Modification (OriginalPrice?, (AdditionalDeduction | AdditionalCost), Tax?, ModificationDetail?)>

<!ATTLIST Modification
level            %uint;  #IMPLIED
>

<!--
The type attribute can specify the type of deduction.
Eg. discount -->
<!ELEMENT AdditionalDeduction (DeductionAmount | DeductionPercent | DeductedPrice)>
<!ATTLIST AdditionalDeduction
    type            %string;  #IMPLIED
>

<!ELEMENT ModificationDetail (Description?, Extrinsic*)>
<!ATTLIST ModificationDetail
    name             %string;  #REQUIRED
	code             %string;  #IMPLIED
    startDate        %datetime.tz;  #IMPLIED
    endDate          %datetime.tz;  #IMPLIED
 >

 <!ELEMENT Value EMPTY>
 <!ATTLIST Value
	value            %number;       #REQUIRED
 >

 <!ELEMENT Percentage EMPTY>
 <!ATTLIST Percentage
 	percent          %r8;           #REQUIRED
 >

 <!--
	The Money element is the final cost amount for this Additional Cost or Charge
 	DO NOT USE THIS ELEMENT FOR SHIPPING, SPECIAL HANDLING, FREIGHT, etc
 -->
 <!ELEMENT AdditionalCost (Money|Percentage)>

<!--
    Defines discount applied.

    DiscountAmount
        	The discount expressed as a flat amount with currency.

    DiscountPercent
        	The discount rate expressed as a percentage.
-->
<!ELEMENT Discount (DiscountPercent | DiscountAmount)>

<!--
    Defines the discount rate

    percent
        The discount rate expressed as a percentage.  A negative discount percent
        represents a penalty.
-->
<!ELEMENT DiscountPercent EMPTY>
<!ATTLIST DiscountPercent
	percent          %r8;           #REQUIRED
>

<!--
    Defines the deduction rate

    percent
        The deduction rate expressed as a percentage.
-->
<!ELEMENT DeductionPercent EMPTY>
<!ATTLIST DeductionPercent
	percent          %r8;           #REQUIRED
>

<!--
    The ProductMovementItemIDInfo element provides a clear reference to the line item
    in a Consignment Movement.

    movementLineNumber
        The line number of current line item, copied from movement document.

    movementID
       The id of a consignment movement entry known to the buyer system.

    movementDate
        The date and time the product was moved from consignment inventory to the buyer inventory.
-->
<!ELEMENT ProductMovementItemIDInfo (IdReference*)>
<!ATTLIST ProductMovementItemIDInfo
    movementLineNumber        %uint;              #REQUIRED
    movementID                %string;            #REQUIRED
    movementDate              %datetime.tz;       #REQUIRED
>


<!-- The InvoiceItemIDInfo element provides a clear reference to the line item  in a InvoiceDetailRequest document.

    invoiceLineNumber
        The line number of a line item, copied from InvoiceDetailRequest.

    invoiceID
        The id of an invoice known to the supplier system.

    invoiceDate
        The invoice date.
-->
<!ELEMENT InvoiceItemIDInfo (IdReference*)>
<!ATTLIST InvoiceItemIDInfo
    invoiceLineNumber        %uint;              #REQUIRED
    invoiceID                %string;            #REQUIRED
    invoiceDate              %datetime.tz;       #IMPLIED
><!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id: //ariba/cxml/modules/Version.mod#4 $
-->

<!--
     Another top-level entity used in Transport.mod.  Defined here to allow
     easy updates to the release version of cXML without opening
     Transport.mod.  This should also provide an easy file to search for
     the current release version string.
-->

<!-- cxml.version
    Current default string for the cXML@version attribute.  Corresponds to
    the final directory of the SYSTEM identifier used in all up-to-date
    cXML documents.
    For easy parsing of this file, do not remove whitespace surrounding the
    actual version string.
-->
<!ENTITY cxml.version "1.2.029" >
<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

	$Id: //ariba/cxml/schema/Modules/Industry.mod#1$
-->

<!-- ====
    Allow this module to be built separately from any other DTD file.
==== -->

<!--
    Characteristic contains detailed information about an item that can be used across different industries. 

	Domain - Type of Characteristic
		Examples: size, sizeCode, color, colorCode , quality, qualityCode, grade, gradeCode 
	Value  - Value for the domain.
	code - For information such as currency code and unit of measure
-->
<!ELEMENT Characteristic EMPTY>
<!ATTLIST Characteristic
	domain	%string;   #REQUIRED
	value  	%string;   #REQUIRED
	code 	%string;   #IMPLIED >
	
<!-- Usage of EANID is deprecated! Use IdReference and proper domain within ItemID instead.

    Number assigned to a manufacturer's product according to the International Article Numbering Association or UPC(Universal Product Code) for an article.-->
<!ELEMENT EANID (#PCDATA)> <!-- string -->

<!-- European Waste Catalogue is a unique ID for articles listed in the EU Waste Catalogue (EWC). It requires special handling -->
<!ELEMENT EuropeanWasteCatalogID (#PCDATA)>

<!-- Number assigned by a supplier to a special promotion activity. Promotions affect the forward planning/ordering process (and the related pricing) -->
<!ELEMENT PromotionDealID (#PCDATA)> <!-- string -->

<!-- The item number is a promotional variant number. Used when only one or some variants of an article are promoted-->
<!ELEMENT PromotionVariantID (#PCDATA)> <!-- string -->


<!-- Total retail value of all products -->
<!ELEMENT TotalRetailAmount (Money)>

<!-- Information price, excluding allowances or charges, and taxes. The price stated is for information purposes only -->
<!ELEMENT InformationalAmount (Money)>

<!-- Gross monetary amount paid or to be paid at intervals -->
<!ELEMENT GrossProgressPaymentAmount (Money)>

<!-- Deposit amount charged for returnable items (boxes, containers, pallets…)-->
<!ELEMENT TotalReturnableItemsDepositAmount (Money)>

<!-- Total amount of goods and services excluding deposits for returnable goods -->
<!ELEMENT GoodsAndServiceAmount (Money)>

<!-- Specific exact amount -->
<!ELEMENT ExactAmount (Money)>

<!-- Groups all the additional amounts -->
<!ELEMENT AdditionalAmounts (TotalRetailAmount?, InformationalAmount?, GrossProgressPaymentAmount?, 
					TotalReturnableItemsDepositAmount?, GoodsAndServiceAmount?,  ExactAmount? )>

<!--Price value per unit (gross price) -->
<!ELEMENT UnitGrossPrice (Money, PriceBasisQuantity?)>

<!--Information price, excluding allowances or charges, and taxes. The price stated is for information purposes only -->
<!ELEMENT InformationalPrice (Money, PriceBasisQuantity?)>

<!-- Information price, excluding  only taxes. The price stated is for information purposes only -->
<!ELEMENT InformationalPriceExclTax (Money, PriceBasisQuantity?)>

<!-- the Net value of a single unit that has to be corrected (new price). -->
<!ELEMENT UnitNetPriceCorrection (Money, PriceBasisQuantity?)>


<!-- Defines all the item related additional prices -->
<!ELEMENT AdditionalPrices (UnitGrossPrice?, InformationalPrice?,  InformationalPriceExclTax?, UnitNetPriceCorrection?)>


<!-- Defines product/item related indicators 
	domain
		Specifies the type of the Indicator. Suggested values are:       
		InvoiceUnitIndicator - Indicator specifies the unit as basis for invoicing ("price per unit")
		ConsumerUnitIndicator - Indicator will be set if the specified unit is used from the consumer/consumption process (for instance "gallons" or "liters")
		ReturnableContainerIndicator - Indicator will be set if the packaging/container shall be returned to the sender and will be re-used.
		TradeUnitIndicator - Indicator will be set if the specified unit is used to describe the trading unit (for instance "barrel" for oil)
		DutyIndicator - specifies that the current line item has a special fee
		CommisionIndicator - Marks the actual position/line item has a provision
	value
		Value of the Indicator
-->
<!ELEMENT ItemIndicator EMPTY>
<!ATTLIST ItemIndicator
    domain  %string;   #REQUIRED
    value  %string;    #REQUIRED
>


<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id: //ariba/cxml/release/schema/1.2.29.1+/Modules/Supplier.mod#1 $
-->

<!--
    Supplier of goods and services. Includes a list of SupplierIDs which
    identify the Supplier.

    corporateURL
        URL to web site about the supplier

    storeFrontURL
        URL to web site where a user can shop or browse
-->
<!ELEMENT Supplier (Name, Comments?, SupplierID+, SupplierLocation*)>
<!ATTLIST Supplier
    corporateURL   %URL;  #IMPLIED
    storeFrontURL  %URL;  #IMPLIED
>

<!--
    One of the locations for a supplier. Supplier location is
    generally a physical location.
-->
<!ELEMENT SupplierLocation (Address, OrderMethods)>

<!--
    OrderMethods is the list of methods by which one can order
    from a supplier. The contact element is the technical contact
    who should be able to assist with order processing issues.
    The list is to be ordered by supplier preference, the first
    element having the highest degree of preference.
-->
<!ELEMENT OrderMethods (OrderMethod+, Contact?)>

<!--
    OrderMethod is a method for ordering. It is comprised of a
    target address for the order and the protocol expected by
    the address.
-->
<!ELEMENT OrderMethod (OrderTarget, OrderProtocol?)>

<!--
    OrderTarget represents an address to which orders can be
    sent.
-->
<!ELEMENT OrderTarget (Phone | Email | Fax | URL | OtherOrderTarget)>

<!--
    OrderProtocol is the communication method to be used when
    communicating an order to a supplier. An example would be "cXML".
-->
<!ELEMENT OrderProtocol (#PCDATA)> <!-- string -->

<!--
    OtherOrderTarget represents an address which is not enumerated by
    default in the OrderTarget Element. This may contain address targets
    beyond the ability of this document to describe.

    name
        Optional name for target.
-->
<!ELEMENT OtherOrderTarget ANY>
<!ATTLIST OtherOrderTarget
    name  %string;  #IMPLIED
>

<!--
    Definition of a supplier id.  A supplier id is a (domain, value)
    pair so that suppliers have the flexibility to define their id's
    according to an arbitrary convention (e.g., (DUNS, 12345),
    (TaxID, 88888888)).

    domain
        the domain of the id
-->

<!ELEMENT SupplierID (#PCDATA)> <!-- string -->
<!ATTLIST SupplierID
    domain  %string;  #REQUIRED
>
<!--
   Defines a List of Suppliers that might be associated with a quote Item. Used in
   ItemOut. 
-->
<!ELEMENT SupplierList (Supplier+)>
<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id: //ariba/cxml/modules/Item.mod#19 $
-->

<!--
    Type of a line item. 
-->
<!ENTITY % lineItemType '(composite | item)'>

<!--
    Type of a coposite line item. 
-->
<!ENTITY % compositeItemType '(groupLevel | itemLevel)'>

<!--
    Type of a service line item.
-->
<!ENTITY % serviceItemType '(material | service)'>

<!--
    ID with which the item's manufacturer identifies the item.
-->
<!ELEMENT ManufacturerPartID (#PCDATA)> <!-- string -->

<!--
    Name of the item's manufacturer.

    xml:lang
        The language in which the ManufacturerName is written.  This
    attribute will be required in a future version of cXML.  (Leaving it
    out is deprecated.)
-->
<!ELEMENT ManufacturerName (#PCDATA)> <!-- string -->
<!ATTLIST ManufacturerName
    xml:lang %xmlLangCode; #IMPLIED
>

<!--
    Classification is used to group items into similar categories.

    domain
        "name" of classification, ie., SPSC
		Domain can be "MaterialGroup" and "MaterialGroup" refers to a grouping of materials and services according to their characteristics in SAP.
				
	code
        identification for a classification

-->
<!ELEMENT Classification (#PCDATA)> <!-- string -->
<!ATTLIST Classification
    domain  %string;  #REQUIRED
	code 	%string;  #IMPLIED
>

<!--
     LeadTime specifies, in days, the amount of time required to
     receive the item.
-->
<!ELEMENT LeadTime (#PCDATA)>   <!-- uint -->

<!--
    SupplierBatch is the batch ID provided by the supplier at the line item quantity level
    to identify  the batch in which the item or the product was produced. The batch id is helpful in tracebility.

    Batch numbers (also call "lot number", "variant") are used in several industries to uniquely identify  items produced together.
-->
<!ELEMENT SupplierBatchID (#PCDATA)>


<!--
    How the supplier identifies an item they sell.

    If SupplierPartID does not provide a unique key to identify the item,
    then the supplier should generate a key which identifies the part
    uniquely when combined with the SupplierID and SupplierPartID. The
    key is called SupplierPartAuxiliaryID.


    An example is where a Supplier would use the same PartID for an
    item but have a different price for units of "EA" versus "BOX".
    In this case, the ItemIDs should be:
    <ItemID>
        <SupplierPartID>pn12345</SupplierPartID>
        <SupplierPartAuxiliaryID>EA</SupplierPartAuxiliaryID>
    </ItemID>
    <ItemID>
        <SupplierPartID>pn12345</SupplierPartID>
        <SupplierPartAuxiliaryID>
           <foo>well formed XML here</foo>
        </SupplierPartAuxiliaryID>
    </ItemID>
    In this case, the "foo" element must be defined in an internal subset
    sent with the cXML document.  Otherwise, parsers will not be able to
    validate that document.

    In a preferred approach, the sending application may escape the contained
    XML using CDATA sections.  This would appear as:
       ...
       <SupplierPartAuxiliaryID>
           <![CDATA[<foo>well formed XML here</foo>]]>
       </SupplierPartAuxiliaryID>
       ...

    Finally, the angle brackets could be escaped using XML character
    entities.  This might be a bit harder for humans to read.  For example:
       ...
       <SupplierPartAuxiliaryID>
           &lt;foo&gt;well formed XML here&lt;/foo&gt;
       </SupplierPartAuxiliaryID>
       ...

    revisionID     
       Also known as Material Revision Level. "Revision" is the most widely-used
       term for referring to that attribute which distinguishes one closely-
       related design iteration from another. A revision represents a change to
       an object, or a modification to a part such that the part remains
       interchangeable with its previous iteration.
       As part of engineering change management the supplier uses the revision
       level to uniquely identify the version of a product, of an article or of
       a part.
     
-->
<!ELEMENT SupplierPartID (#PCDATA)> <!-- string -->
<!ATTLIST SupplierPartID
	revisionID	%string;	#IMPLIED
>
<!ELEMENT SupplierPartAuxiliaryID ANY>

<!--
   BuyerPartID represents an item in buyer system. This identifier is specified by the buyer
-->
<!ELEMENT BuyerPartID (#PCDATA)>


<!--
    A unique identification of an item. SupplierID is not required since
    ItemIDs never travel alone.

    ItemIDs used to define a Supplier/Commodity level Blanket Order Item should
    use Empty SupplierPartID tag. These type of items do not have specific part numbers
    at the time of placing the Blanket Order. There will be subsequent release orders
    or invoices that will define the SupplierID.

    IdReference
    Defines an ID reference.  Within the application context (for example,
    certain pair of buyer and supplier), the (identifier, domain) pair should be unique.
-->
<!ELEMENT ItemID (SupplierPartID, SupplierPartAuxiliaryID?, BuyerPartID?, IdReference*)>

<!--
    ItemDetail contains detailed information about an item. All the data that
    a user would want to see about an item instead of the bare essentials
    that are represented in the ItemID.
  
    LeadTime
        time in days to receive the item
.
    
Dimension
    
	Item dimensions.
    
  
ItemDetailIndustry
    
	Industry  specfic item detail information.
-->
<!ELEMENT ItemDetail (UnitPrice, Description+, UnitOfMeasure, PriceBasisQuantity?, Classification+, ManufacturerPartID?,ManufacturerName?, URL?, LeadTime?, Dimension*, ItemDetailIndustry?, Extrinsic*)>
<!--
	Item details specific for items that describe blanket purchase order items. 
	This element should only be used for items in a purchase order of 
	type "blanket"	or "regular".
-->
<!ELEMENT BlanketItemDetail (Description+, MaxAmount?, MinAmount?, 
                             MaxQuantity?, MinQuantity?,
			     UnitPrice?, UnitOfMeasure?, PriceBasisQuantity?,
			     Classification*, Extrinsic*)>

<!--
    ItemDetailIndustry contains detailed information about an item for a specific industry. 
-->
<!ELEMENT ItemDetailIndustry (ItemDetailRetail? )>

<!--
    ItemDetailIndustry contains detailed information about an item for a retail industry. 
    
    EANID
        Deprecated, use '<IdReference domain="EAN-13">' within 'ItemID' instead.
-->
<!ELEMENT ItemDetailRetail (EANID?, EuropeanWasteCatalogID?, Characteristic* )>

<!--
    An identifier for a subcontracting component within the procurement process.
-->
<!ELEMENT ComponentID (#PCDATA)>

<!--
    An element contains product information of subcontracting component (such as buyer product id, supplier product id, standard product id, internal product idetc.).

    SupplierPartID
        It represents a product in supplier system. This identifier is specified by the supplier.

    SupplierPartAuxiliaryID
        If SupplierPartID does not provide a unique key to identify the item, then the supplier should generate a key which identifies the product uniquely when combined with the SupplierID and SupplierPartID. The key is called SupplierPartAuxiliaryID.

    BuyerPartID
        It represents a product in buyer system. This identifier is specified by the buyer.

    IdReference
        ID reference is within the application context (for example, standard id for a product), the (identifier, domain) pair should be unique.
-->
<!ELEMENT Product (SupplierPartID?, SupplierPartAuxiliaryID?, BuyerPartID?, IdReference*)>

<!--
    A sequential number that is assigned when changes are made to component.
-->
<!ELEMENT ProductRevisionID (#PCDATA)>

<!--
    An element carrying batch information for material or goods  produced in a single manufacturing run.

    BuyerBatchID
        An identifier from buyer to identify the material/goods produced in a single manufacturing run

    SupplierBatchID
        An identifier from supplier to identify the material/goods produced in a single manufacturing run

    PropertyValuation
        It consists of the property to be valuated and the associated values

    productionDate
        Date on which when a batch of material or goods is produced

    expirationDate
        Date on which when a batch of material/goods becomes expired

    originCountryCode
        Country of origin for a batch of material or goods
-->
<!ELEMENT Batch (BuyerBatchID?, SupplierBatchID?, PropertyValuation*)>
<!ATTLIST Batch
productionDate      %datetime.tz;    	#IMPLIED
expirationDate   	%datetime.tz;      	#IMPLIED
originCountryCode 	%isoCountryCode; 	#IMPLIED
>

<!--
    An identifier from buyer to identify the material/goods produced in a single manufacturing run.
-->
<!ELEMENT BuyerBatchID (#PCDATA)>

<!--
    PropertyValuation consists of the property to be valuated and the associated values

    PropertyReference:
        The property being valuated

    ValueGroup:
        Contains a group of values pertaining to a property
-->
<!ELEMENT PropertyValuation (PropertyReference?, ValueGroup*)>

<!--
    PropertyReference is a reference to the property being valuated

    IdReference
        ID reference is within the application context (for example, id for a property), the (identifier, domain) pair should be unique.
-->
<!ELEMENT PropertyReference (IdReference*)>

<!--
    ValueGroup contains a group of values pertaining to a property.

    IdReference
        ID reference is within the application context (for example, id of value group), the (identifier, domain) pair should be unique.

    ParentID
        For Structured property, ParentID is an identifier of its parent

    PropertyValue
        Values for valuating property
-->
<!ELEMENT ValueGroup (IdReference?,  ParentID?, PropertyValue*)>

<!--
For Structured property, ParentID is an identifier of its parent
-->
<!ELEMENT ParentID (#PCDATA)>

<!--
    PropertyValue consists of values for valuating a property.
        Example: 	QuantitySpecification: valuating properties whose data types are in units, for example, 5 pieces, 7 kg
        IntegerSpecification: valuating non-dimensional, integer properties, for example, codes, indexes, and sequential numbers
        DateTimeSpecification: valuating date time properties, for example requirement date, production date, and expiration date

    PropertyCharacteristic
        It has the detailed information about a value that can be used for valuation of property

    Name
        Name of PropertyValue
-->
<!ELEMENT PropertyValue (Characteristic*)>
<!ATTLIST PropertyValue
name          %string;       #IMPLIED>

<!--
	ControlKeys
		Are used to override default business rules as configured in Ariba Network.
-->
<!ELEMENT ControlKeys (OCInstruction?, ASNInstruction?, InvoiceInstruction?)>

<!--
	May be used to specify more precisly how to deal with OrderConfirmation creation.

	value works as follows:
		allowed            - allows to send OrderConfirmation for this line item, regardless of current rule settings.
		notAllowed         - does not allow to send OrderConfirmation for this line item.
		requiredBeforeASN  - requires OrderConfirmation before ASN could be created.
-->
<!ELEMENT OCInstruction (Lower?, Upper?)>
<!ATTLIST OCInstruction
    value       (allowed | notAllowed | requiredBeforeASN)  #REQUIRED>


<!ELEMENT ASNInstruction (Lower?, Upper?)>
<!ATTLIST ASNInstruction
    value       (allowed | notAllowed)  #REQUIRED>

<!ELEMENT InvoiceInstruction EMPTY>
<!ATTLIST InvoiceInstruction
    value       (isERS | isNotERS)  #REQUIRED>
<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id$
-->

<!--
    This element captures travel information.  It could be one of four
    types: air, car rental, hotel or rail.

    AirDetail
        Air travel detail.

    CarRentalDetail
        Car rental detail.

    HotelDetail
        Hotel detail.

    RailDetail
        Rail detail.

    PolicyViolation
        List of policy violations (if any) associated with this
        travel line item.

    Comments
        Top level comments for this travel line item (if any).  This
        is not the policy violation comment but a top level comment
        given by the user for this travel line item while in Travel
        Booking Provider's web site.

    TermsAndConditions
        List of Terms and conditions (if any) associated with this
        travel line item.

    confirmationNumber
        A unique confirmation number that is useful to both the
        traveler and the vendor who is providing the service for this
        travel line item.  For example, hotel reservation number or
        e-ticket number from the airline.

    pnrLocator
        Passenger Name Record (PNR) Locator that is useful to the
        Travel Booking Provider.

    quoteExpirationTime
        Date and time that this quote will expire.  This value is
        normally supplied in the PunchoutOrderMessage.  If no value is
        supplied, it is assumed that there is no expiration time or
        date for this quote.
-->
<!ELEMENT  TravelDetail ((AirDetail | CarRentalDetail | HotelDetail | RailDetail),
                          PolicyViolation*,
                          Comments?,
                          TermsAndConditions?)>
<!ATTLIST TravelDetail
    confirmationNumber  %string;        #REQUIRED
    pnrLocator          %string;        #IMPLIED
    quoteExpirationTime %datetime.tz;   #IMPLIED
>

<!-- Air -->

<!--
    Air detail information for the air trip.

    TripType
        Round Trip, One Way, or Multi Leg

    AirLeg
        Different air leg that makes up this air detail.
        For example a round trip from SFO -> TPE with no stops
        will have two air legs.  One air leg from SFO -> TPE
        and another from TPE -> SFO.

    AvailablePrice
        Other available airfare prices that the user did not pick.

    Penalty
        Penalty amount (if any).  This is normally due to changes or
        cancelation of the ticket.
-->
<!ELEMENT AirDetail (TripType,
                     AirLeg+,
                     AvailablePrice*,
                     Penalty?)>

<!--
    Define a single leg in the air travel.

    Vendor
        Airline vendor name and information.

    AirLegOrigin
        Originating airport for this air leg.

    AirLegDestination
        Destination airport for this air leg.

    BookingClassCode
        Airline booking class code.  This is the de-facto
        airline standard.  For example,

        F, FN, P, R, A      - first class
        C, CN, D, J, I, Z   - business class.
        Y, YN, B, BN, M, H, V, VN, O, Q, QN, S, 
            K, KN, L, U, T, W - coach class.

    Rate
        Rate for this particular air leg.  If specify, the total
        of all the rate for the different air legs must add up
        to the total the line item level.

    Meal
        Meal information for this air leg (if any)

    travelSegment
        Textual information to identify this travel segment.
        This information is specific to the Travel Booking Provider.

    departureTime
        Departure date and time for this air leg

    arrivalTime
        Arrival date and time for this air leg

    flightNumber
        Flight number for this air leg

    seatNumber
        Seat number for this air leg

    seatType
	    Seat type
	        aisle       - Aisle
	        window      - Window
	        middle      - Middle

    upgrade
        Is this ticket an upgrade?

    stops
        The number of stop for this air leg.
        0 if it is a direct flight.  If no information is supplied
        it is defaulted to 0.

    equipment
        The plane equipment information for this air leg
-->
<!ELEMENT AirLeg (Vendor,
                  AirLegOrigin,
                  AirLegDestination,
                  BookingClassCode?,
                  Rate?,
                  Meal*)>
<!ATTLIST AirLeg
    travelSegment   %string;        #REQUIRED
    departureTime   %datetime.tz;   #REQUIRED
    arrivalTime     %datetime.tz;   #REQUIRED
    flightNumber    %string;        #REQUIRED
    seatNumber      %string;        #IMPLIED
    seatType        (window | aisle | middle) #IMPLIED
    upgrade         (yes)           #IMPLIED
    stops           %r8;            #IMPLIED
    equipment       %string;        #IMPLIED
>

<!--
    Originating airport for this Air Leg.

    Airport
        Originating airport
-->
<!ELEMENT AirLegOrigin (Airport)>

<!--
    Destination airport for this Air Leg.

    Airport
        Destination airport
-->
<!ELEMENT AirLegDestination (Airport)>

<!--
    Airport information that includes the iso airport code

    Address
        Physical adress of the airport.

    airportCode
        The 3 letter IATA airport code.
-->
<!ELEMENT Airport (Address?)>
<!ATTLIST Airport airportCode %string; #REQUIRED>

<!---
    Meal information used by air, hotel and rail.

    BookingClassCode
        Code for the meal.  For example, airlines use
		B     - Breakfast
            C     - Complimentary liquor
            D     - Dinner
            F     - Food for purchase
            G     - Food and beverage for purchase
            H     - Hot meal
            K     - Continental breakfast
            L     - Lunch
            M     - Meal
            N     - No meal service 
            O     - Cold meal
            P     - Liquor for purchase
            R     - Refreshments
            S     - Snack or brunch
            V     - Refreshments for purchase

    Description
        Textual description of the meal, including any special needs
        such as vegetarian or dairy-free.
-->
<!ELEMENT Meal (BookingClassCode?, Description?)>

<!-- Car Rental -->

<!--
    Car rental information.

    Vendor
        Car rental vendor information.

    CarRentalPickup
        Pickup location for the rental car.

    CarRentalDropoff
        Drop off location for the rental car.

    BookingClassCode
        4 letter code for car.

        1st Letter - M (Mini), E (Economy), C (Compact), S (Standard),
                     I (Intermediate), F (Full size), P (Premium), L (Luxury)
                     V (MiniVan), X (Special)
        2nd Letter - B (2 door), C (2/4 door), D (4 door), T (Convertible),
                     F (Four wheel drive), V (Van), W (Wagon), S (Sport)
                     X (Special)
        3rd Letter - A (Automatic), M (Manual)
        4th Letter - R (A/c), N (No A/C)

    CarRentalFee
        Mutliple car rental fee can be specified to capture the
        break down of different fees.  The total of these fees must
        add up to the total at the line item level.

    LimitedMileage
        Mileage limit information

    AvailablePrice
        Other available prices for car rental that the user did not pick.

    travelSegment
        Textual information to identify this travel segment.
        This information is specific to the Travel Booking Provider.

    pickupTime
        The intended pickup date and time

    dropoffTime
        The intended dropoff date and time
-->
<!ELEMENT CarRentalDetail (Vendor,
                           CarRentalPickup,
                           CarRentalDropoff,
                           BookingClassCode?,
                           CarRentalFee+,
                           LimitedMileage?,
                           AvailablePrice*)>
<!ATTLIST CarRentalDetail
    travelSegment %string;          #REQUIRED
    pickupTime    %datetime.tz; 	#REQUIRED
    dropoffTime   %datetime.tz; 	#REQUIRED
>

<!--
    Physical location where the rental car should be picked up.  This
    is either an Airport or off airport car rental location.

    Airport
        An airport location.

    Address
        Physical address of the car rental location
-->
<!ELEMENT CarRentalPickup (Airport | Address)>

<!--
    Physical location where the rental car should be dropped off.
    This is either an Airport or off-airport car rental location.

    Airport
        An airport location.

    Address
        Physical address of the car rental location
-->
<!ELEMENT CarRentalDropoff (Airport | Address)>

<!--
    This specifies the quantity and the unit of measure of the mileage
    limit.

    UnitOfMeasure
        Unit of measure either miles or kilometers.

    quantity
        The mileage limit amount.
-->
<!ELEMENT LimitedMileage (UnitOfMeasure)>
<!ATTLIST LimitedMileage
    quantity   %r8;      #REQUIRED
>

<!--
    Car rental fee information.  CarRentalFee captures the actual
    charges and fee that applies to this rental.  Conditional charges
    such as extra mileages that are over the mileage limit should not
    be specified here but rather in the TermsAndConditions text.

    Total
        Total amount for this car rental fee.  All the total for the rates
        must add up to this amount.

    Rate
        The individual broken-down fee information.

    type
        Type of rate
            baseRate            - Base rental rate
            additionalDriver    - Additional driver fee
            airportAccessFee    - Airport Access fee
            dropOffCharge       - Drop off charge
            vehicleLicensingFee - Vehicle lincensing fee
            touristTax          - Tourist tax
            prepaidGasoline     - Prepaid gasoline charge
            navigationSystem    - Navigation system
            childSeat           - Child seat charge
            luggageRack         - Luggage rack charge
            collisionDamageInsurance    - Collision damage insurance
            liabilityInsurance          - Liability insurance
            mobilePhone         - Mobile phone base charge
            other               - Other charges.
-->
<!ELEMENT CarRentalFee (Total, Rate*)>
<!ATTLIST CarRentalFee
    type (baseRate | additionalDriver | airportAccessFee | dropOffCharge |
          vehicleLicensingFee | touristTax | prepaidGasoline |
          navigationSystem | childSeat | luggageRack | collisionDamageInsurance |
          liabilityInsurance | mobilePhone | other) "baseRate"
>

<!-- Hotel -->

<!--
    Hotel detail information.

    Vendor
        Hotel vendor information.

    Address
        Physical address of the hotel.  This is might be different
        from the address specified in the Vendor field as the vendor
        address might be the head quarter address.

    RoomType
        The type of room reserved.

    BookingClassCode
        Hotel booking class code.

    Meal
        Any complementary meals that are included with the room.  For
        example, complementary continental breakfast.

    Rate
        Hotel rate information.  Multiple rates can be specified.  For
        example, the night rate, valet parking rate, and other rates.

    AvailablePrice
        Other available prices that user did not pick.  Available
        prices can be from the same vendor or different vendor.

    travelSegment
        Textual information to identify this travel segment.  This
        information is specific to the Travel Booking Provider.

    arrivalTime
        Date and time of arrival at the hotel.  This is used as an
        advisory to the hotel vendor for the arrival time.

    departureTime
        Date and time of departure from the hotel.  This is used as an
        advisory to the hotel vendor for the departure time.

    checkinTime
        The official checkin time.  For example, most hotel checkin
        time is 3:00 PM.

    checkoutTime
        The official checkout time.  For example, most hotel checkout
        time is 12:00 PM (noon).

    earlyCheckinAllowed
        Does the hotel allow early checkin?

    lateCheckoutAllowed
        Does the hotel allow late checkout?
-->
<!ELEMENT HotelDetail (Vendor,
                       Address,
                       RoomType,
                       BookingClassCode?,
                       Meal*,
                       Rate*,
                       AvailablePrice*)>
<!ATTLIST HotelDetail
    travelSegment   %string;         #REQUIRED
    arrivalTime     %datetime.tz;    #REQUIRED
    departureTime   %datetime.tz;    #REQUIRED
    checkinTime     %time.tz;        #REQUIRED
    checkoutTime    %time.tz;        #REQUIRED
    earlyCheckinAllowed (yes)        #IMPLIED
    lateCheckoutAllowed (yes)        #IMPLIED
>

<!--
    Information about a hotel room.

    Description
        Textual description of the hotel room.

    Amenities
        List of amenities for this hotel room.

    smoking
        Is the room a smoking or non-smoking room

    numberOfBed
        The number of beds in this room

    bedType
        The bed type in this room.
-->
<!ELEMENT RoomType (Description?, Amenities*)>
<!ATTLIST RoomType
    smoking        (yes | no)   #REQUIRED
    numberOfBed    %r8;         #IMPLIED
    bedType        (king | queen | full | double | single | other)    #IMPLIED
>

<!--
    Textual description of the amenities for the hotel room.

    Description
        Text description of this amenities.  For example,
        DSL connection, two telephone lines, and other information
        about a hotel room.
-->
<!ELEMENT Amenities (Description)>

<!-- Rail -->

<!--
    Rail detail information.  A rail detail can have multiple legs.

    TripType
        Trip type for this rail.

    Rail leg
        The different rail legs that make up this rail detail.

    AvailablePrice
        Other available prices that the user did not pick for for this
        rail trip.

    Penalty
        Penalty (if any) associated with this rail trip.
-->
<!ELEMENT RailDetail (TripType,
                      RailLeg+,
                      AvailablePrice*,
                      Penalty?)>

<!--
    Rail leg is used to express information regarding a single leg for
    a rail travel.

    Vendor
        Rail vendor information.

    RailLegOrigin
        Rail originating location.

    RailLegDestination
        Rail Destination location.

    BookingClassCode
        Rail booking class code.

    Rate
        Rate information (if any) for this rail leg.  If specified,
        all the rates in all rail legs must add up to the total at the
        travel line item level.

    Meal
        Meal served for this leg (if any).

    travelSegment
        Textual information to identify this travel segment.  This
        information is specific to the Travel Booking Provider.

    departureTime
        Date and time of departure at the originating location.

    arrivalTime
         Date and time of arrival at the destination location.

    trainNumber
        Train number for this rail leg.

    seatNumber
        Seat number.

    carType
        Type of the rail car.
-->
<!ELEMENT RailLeg (Vendor,
                   RailLegOrigin,
                   RailLegDestination,
                   BookingClassCode?,
                   Rate?,
                   Meal*)>
<!ATTLIST RailLeg
    travelSegment   %string;        #REQUIRED
    departureTime   %datetime.tz;   #REQUIRED
    arrivalTime     %datetime.tz;   #REQUIRED
    trainNumber     %string;        #REQUIRED
    seatNumber      %string;        #IMPLIED
    carType        (sleeper | seat) #IMPLIED
>

<!--
    The origin of a particular rail leg.  This can be an airport or a
    physical address of a rail station.

    Airport
        An airport location

    Address
        A physical address of a rail station
-->
<!ELEMENT RailLegOrigin (Airport | Address)>

<!--
    The destination of a particular rail leg.  This can be an airport
    or a physical address of a rail station.

    Airport
        An airport location

    Address
        A physical address of a rail station
-->
<!ELEMENT RailLegDestination (Airport | Address)>

<!-- Travel/Expense common definitions -->

<!--
    The type of the trip. This is used by Air and Rail to indicate
    round trip, one way or multi-leg trip.

    type
        Type of the trip
	    round       - a round trip
	    oneWay      - a one way trip
	    multiLeg    - a multi leg or open jaw trip
-->
<!ELEMENT TripType EMPTY>
<!ATTLIST TripType
    type    (round | oneWay | multiLeg) #REQUIRED
>

<!--
    Information about a vendor that is providing this service.

    Address
        The physical address of the vendor.  This address normally is
        the business or head quarter address of the vendor.

    SupplierID
        Supplier id for this vendor.  This is just a (domain, value)
        pair so that Travel Booking Providers have the flexibility to
        define their id's according to an arbitrary convention (e.g.,
        (DUNS, 12345), (TaxID, 88888888)).

        Note that multiple supplier id can be specified.  This is so
        that Travel Booking Provider can have a single implementation
        that works with different Buyer implementations that use
        different supplier id domain.

    preferred
        Is this vendor a preferred vendor?
-->
<!ELEMENT Vendor (Address, SupplierID*)>
<!ATTLIST Vendor
    preferred (yes | no) #REQUIRED
>

<!--
    Textual terms and conditions associated with an air fare, car
    rental, hotel, or rail.  For example, a car rental terms and
    conditions normally include boundary limit, additional mileage
    charges, gasoline charge and other restriction information.

    Multiple terms and conditions can be attached to a single travel
    line item.

    Description
        Textual terms and conditions.
-->
<!ELEMENT TermsAndConditions (Description+)>

<!--
    Policy violation (if any) that results from the user picking this
    particular travel.  Policy violations are associated with an
    individual line item of travel and not associated at the header
    level.  This allows for clear identification of the violation with
    the individual line item.

    Description
        Textual description of this violation.

    PolicyViolationJustification
        Justification for this violation given by user normally picked
	from a standard list of justifications at the Travel Booking
	Provider web site.

    Comments
        Additional comments to further clarify the justification given
        by user.

    level
        Violation level.
            warning     - a non serious violation.
            violation   - a serious violation of company policy.
-->
<!ELEMENT PolicyViolation (Description,
                           PolicyViolationJustification,
                           Comments?)>
<!ATTLIST PolicyViolation
	level (warning | violation) #REQUIRED
>

<!--
    Justification given by the user why they violate the company
    travel policy.  This justification value is normally picked from a
    pick list at the Travel Booking Provider web site.

    Description
        The justification of the violation picked from a standard list
        at the Travel Booking Provider web site.
-->
<!ELEMENT PolicyViolationJustification (Description)>

<!--
    Penalty (if any) for this travel segment

    Money
        The penalty amount

    Description
        Textual description of the cause of the penalty.  For example,
        change fee associated with air ticket.
-->
<!ELEMENT Penalty (Money, Description)>

<!--
    Other avaible price.  AvailablePrice is used to express what other
    prices are available that the traveler did not pick.
    AvailablePrice is can be used to capture the lowest price, the
    highest price, the lowest compliant price, and the hight compliant
    price.

    Money
        The amount of the other available price.

    Description
        Textual description of the available price.  It explain
        how this price was derived at.  For example, a non direct flight
        exists with the flight number can be put here.

    Type
        Type of available price.  Currently we capture four
        different type.
            lowest              - The lowest price possible regardless of the
                                  traveling policies
            lowestCompliant     - The lowest price that still complies with
                                  the travel policies
            highestCompliant    - The highest price that still complies with
                                  the travel policies
            highest             - The highest price possible regardless of the travel
                                  policies
            other               - Other, specify in the description
-->
<!ELEMENT AvailablePrice (Money, Description?)>
<!ATTLIST AvailablePrice
    type (lowest | lowestCompliant | highestCompliant | highest | other) #REQUIRED
>

<!--
    Booking class code used by airfare, car rental, hotel, and rail to
    indicate the class.

    Description
        Textual description of the code

    code
        code
-->
<!ELEMENT BookingClassCode (Description?)>
<!ATTLIST BookingClassCode
    domain  %string;    #REQUIRED
    code    %string;    #REQUIRED
>

<!--
    Define a physical location and its address.  This can be used to 
    describe places such as airport, bus station, ferry dock, railway
    station and so on.

    Address
        Indicates the address of the place

    code
        Indicates the code the may represent the place.  For example,
        airport can have an airport code.

    domain
        Qualifier or domain for the code.  For example, airport code
        is IATA standard, the domain value would be "IATA"; however
        bus station code may be local specific.
-->
<!ELEMENT Place (Address?)>
<!ATTLIST Place
    code           %string;     #IMPLIED
    domain         %string;     #IMPLIED
>

<!--
    Defines places such as city, airport or railway where trip or leg originated.
-->
<!ELEMENT LegOrigin (Place)>

<!--
    Defines places such as city, airport or railway code where trip or leg ended.
-->
<!ELEMENT LegDestination (Place)>
<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id: //ariba/cxml/release/schema/1.2.29.1+/Modules/Transaction.mod#8 $
-->

<!--
    For better definitions of these Elements/Entities, refer to the cXML
    Transaction Specification documents.
-->
<!-- 
     Detailed per-unit asset information for a line item.

     Extrinsic
         Additional per-unit asset information

     serialNumber
         Manufacturer's serial number for the unit

     tagNumber
         Asset tag number for the unit

     location
         location of the unit
-->
<!ELEMENT AssetInfo (Extrinsic*)>
<!ATTLIST AssetInfo
	tagNumber %string; #IMPLIED
	serialNumber %string; #IMPLIED
	location %string; #IMPLIED
>

<!-- Basic transactional elements used throughout -->

<!--
    Defines gross amount in posted currency.
-->
<!ELEMENT TotalAmountInPostedCurrency (Money)>

<!--
    Defines gross amount in billing currency. If specified, customer
    needs to pay this amount.
-->
<!ELEMENT TotalAmountInBillingCurrency (Money)>

<!--
    The bill to for an item.

   IdReference
       ID reference is Within the application context (for example, a certain pair of buyer and supplier), the (identifier, domain) pair should be unique.
-->
<!ELEMENT BillTo (Address, IdReference*)>

<!--
    The ship to for a item.

   IdReference
       ID reference is Within the application context (for example, a certain pair of buyer and supplier), the (identifier, domain) pair should be unique.
   
   Address
       To provide a plant location description, the domain attribute of the element IdReference should be set to "buyerLocationID", the identifier to the plantID.
       The addressIDDomain should be set to "buyerLocationID" and the addressID to the plantID. Use the name for the description.

-->
<!ELEMENT ShipTo (Address, CarrierIdentifier*, TransportInformation*, IdReference*)>

<!--
    Definition of a cXML Shipping item. Represents a shipping cost in the
    shopping basket (PunchOutOrderMessage) or an order to the supplier
    (OrderRequest). There could be one of these for the entire order, or one
    per lineitem.
    The Modifications element (if present) represents any changes to
    the shipping cost.

    trackingDomain
        represents the logistics supplier, I.E., "FedEx", "UPS", etc.

    trackingId
        an optional element value that represents the logistics supplier
        tracking number

    tracking
        Deprecated - Do Not Use
-->
<!ELEMENT Shipping (Money, Description, Modifications?)>
<!ATTLIST Shipping
    trackingDomain  %string;  #IMPLIED
    trackingId      %string;  #IMPLIED
    tracking        %string;  #IMPLIED
>

<!--
    Defines a payment term in an invoice or order.  This deprecates the
		InvoiceDetailPaymentTerm previously defined.  Payment term can be the 
		net term (without discount) or discount term (with discount).

    payInNumberOfDays
        The number of days after invoice effective date for the invoice to be paid.

    Discount
	 	The percentage or amount of the discount term.  This element should be omitted
	 	if the payment term is a net term.
    Extrinsic
	Additional information related to this payment term.
-->
<!ELEMENT PaymentTerm (Discount?, Extrinsic*)>
<!ATTLIST PaymentTerm
    payInNumberOfDays        %uint;         #REQUIRED
>

<!--
    The list of valid payment types.
-->
<!ENTITY % cxml.payment  "PCard">
<!ELEMENT Payment (%cxml.payment;)>

<!--
    Defines an accounting segment.  Segment is an older, deprecated way to
    transport this information.

    type
        The accounting type of this segment.

    id
        The unique key of this Segment against the type.

    description
        Textual description of the Segment. For human readability.
-->
<!ELEMENT Segment EMPTY>
<!ATTLIST Segment
    type         %string;  #REQUIRED
    id           %string;  #REQUIRED
    description  %string;  #REQUIRED
>

<!--
    Defines an accounting segment.  AccountingSegment is the newer, better
    way to transport this information.  Name corresponds to the type
    attribute of Segment; Description corresponds to description.  Both add
    required locale attributes to the strings.

    id
        The unique key of this Segment against the type.
-->
<!ELEMENT AccountingSegment ( Name, Description )>
<!ATTLIST AccountingSegment
    id           %string;  #REQUIRED
>

<!--
    An accounting object.  Use of the Segment element here is deprecated.

    name
        The name of the object containing the specified accounting segments.
-->
<!ENTITY % cxml.accounting  "( Segment+ | AccountingSegment+ )">
<!ELEMENT Accounting (%cxml.accounting;)>
<!ATTLIST Accounting
    name  %string;  #REQUIRED
>

<!--
    A charge against an Accounting element.
-->
<!ELEMENT Charge (Money)>

<!--
    The combination of a Charge against an Accounting Element. A distribution
    represents the breakdown of one overall amount into sub-amounts.
-->
<!ELEMENT Distribution (Accounting, Charge)>



<!-- Item Elements -->
<!--
    The representation of a line item as it needs to be for sending to a
    supplier. The item can refer to a MasterAgreement in itself.


    quantity
        How many items are desired. Supplier and Commodity level items in an order of type
	"blanket" will use a default value of "1". The quantity in this case will not be
	used to compute the sub total. The MaxAmount in the BlanketItemDetail will be 
	used to indicate any line level amounts.
    lineNumber
        Position (counting from 1) of this item in an order.  Used to
        maintain a reference between items in create and update OrderRequest
        documents.
    requisitionID
        The buyers system requisition id for this line item. It might be the
        same as orderID, and it might not be included at all.  Must not be
        included if requisitionID is specified in the OrderRequestHeader.
    requestedDeliveryDate
        The date this item was requested for delivery.
    agreementItemNumber 
        The corresponding Item Number of the Item in the Master Agreement if this is 
	a 'release' order item.
    parentLineNumber
	    lineNumber of the parent line item in the order.
    itemType 
	    specify whether the line item contains child line items or acts as a child item
   requiresServiceEntry
		This is a flag to indicate if a service entry request is required
		for this item
  confirmationDueDate
    specifies the date by which the supplier has to respond with a Confirmation to the Purchase Order

    ScheduleLine
	Schedule Line(s) listed for the specific line item.
    
    ItemOutIndustry
	Industry specific item information
	
    Packaging
	Specify the packaging information for a line item. 
	
	compositeItemType
	specify type of parent line item(lot/box)

    Batch
    Batch information of goods or material produced in a single manufacturing run. The information includes id, characteristic, date…ect.

    itemCategory
    It is for defining how a component or material is procured.  Item category, subcontract or consignment,� is supported.
        subcontract refers to process of procuring a material by providing component information that makes the finished product
        consignment refers to process of managing a material through a special process where the payment to supplier is withheld until the materail or service is consumed by the buyer.
		thirdParty refers to vendor from which a material is ordered.
		
	requestedShipmentDate
		The ship date requested by the buyer for the item

-->
<!ELEMENT ItemOut (ItemID, Path?, (ItemDetail|BlanketItemDetail)?, (SupplierID | SupplierList)?, ShipTo?, Shipping?,
                   Tax?, SpendDetail?, Distribution*, Contact*, TermsOfDelivery?, Comments?, Tolerances?, ControlKeys?,
				   ScheduleLine*,(MasterAgreementReference | MasterAgreementIDInfo)?,  ItemOutIndustry?, Packaging*, ReleaseInfo?,  Batch?)>
<!ATTLIST ItemOut
    quantity               %r8;           #REQUIRED
    lineNumber             %uint;         #IMPLIED
    requisitionID          %string;       #IMPLIED
    agreementItemNumber	   %string;       #IMPLIED
    requestedDeliveryDate  %date;         #IMPLIED
    isAdHoc                (yes)          #IMPLIED
    parentLineNumber       %uint;         #IMPLIED
    itemType               %lineItemType; #IMPLIED
    requiresServiceEntry    (yes)          #IMPLIED
    confirmationDueDate    %date;         #IMPLIED
    compositeItemType      %compositeItemType;	#IMPLIED
    itemCategory           (subcontract | consignment | thirdParty)       #IMPLIED
	requestedShipmentDate  %datetime.tz;  #IMPLIED
>


<!--
    The representation of the release information of a line item

    releaseType
        a string value to identify the type of release.  The value will be either jit or forecast
    cumulativeReceivedQuantity
        a number value to identify the cumulative quantity of all goods receipts against the scheduling agreement over a period up to a certain date
    materialGoAheadEndDate
        Date denoting the end of the material go-ahead period (go-ahead for purchase of input materials)
    productionGoAheadEndDate
        Date denoting the end of the production go-ahead period
-->
<!ELEMENT ReleaseInfo (UnitOfMeasure, ShipNoticeReleaseInfo?, Extrinsic*)>
<!ATTLIST ReleaseInfo
    releaseType                 (forecast | jit)  #REQUIRED
    cumulativeReceivedQuantity  %r8;              #REQUIRED
    productionGoAheadEndDate    %datetime.tz;     #IMPLIED
    materialGoAheadEndDate      %datetime.tz;     #IMPLIED
>

<!--
    The ShipNoticeReleaseInfo will be used to reference a ship notice created from a scheduling agreement release. 

    receivedQuantity 
        Quantity received by the buyer for the referenced ship notice
-->
<!ELEMENT ShipNoticeReleaseInfo ((ShipNoticeReference|ShipNoticeIDInfo), UnitOfMeasure)>
<!ATTLIST ShipNoticeReleaseInfo
    receivedQuantity            %r8;              #REQUIRED
>


<!--
    The representation of a line item as it needs to be for sending to a
    buyer.

    quantity
        How many items are desired.
    lineNumber
        Position (counting from 1) of this item in an order.  Used to
        maintain a reference between items in create and update OrderRequest
        documents.
    parentLineNumber
	    Position of the parent line item. Used to create a nesting structure for line items.
    itemType 
    	specify whether the line item contains child line items or acts as a child item
	compositeItemType
		specify type of parent line item(lot/box)
	itemClassification
        Specifies whether the current line item is material or service.
	    Valid values are material and service.
-->
<!ELEMENT ItemIn (ItemID, Path?, ItemDetail, (SupplierID | SupplierList)?, ShipTo?, Shipping?, Tax?, SpendDetail?,
                   Distribution*, Contact*, Comments?, BillTo?)>
<!ATTLIST ItemIn
    quantity         %r8;           #REQUIRED
    lineNumber       %uint;         #IMPLIED
    parentLineNumber %uint;         #IMPLIED
    itemType         %lineItemType; #IMPLIED
    compositeItemType      %compositeItemType;	#IMPLIED
    itemClassification     %serviceItemType;	#IMPLIED
>

<!--
Defines SubcontractingComponent  information.

ComponentID
An identifier for a subcontracting component within the procurement process

Description
Description of subcontracting component

Product
It contains product information of subcontracting component (such as buyer product id, supplier product id, standard product id, internal product id…etc.)

ProductRevisionID
An identifier that is assigned when changes are made to component

Batch
An element carrying a batch information for material or goods  produced in a single manufacturing run (such as buyer/supplier batch id, production date, property valuation…etc.)

UnitOfMeasure
Unit of measure code

quantity
Quantity of the subcontracting component required to produce the finished goods in a unit of measurement

requirementDate
Specifies the date on which the requested quantity of subcontracting component is required
-->
<!ELEMENT SubcontractingComponent (ComponentID, UnitOfMeasure, Description?, Product?, ProductRevisionID?, Batch?)>
<!ATTLIST SubcontractingComponent
quantity          	%r8;           		#REQUIRED
requirementDate  	%datetime.tz;  		#IMPLIED
>

<!--
    Defines Schedule Line information.

    quantity
        Quantity of items to be shipped for this schedule line.         

    requestedDeliveryDate
        Date that the specified quantity is expected to be delivered. 
		
	lineNumber
        Line identifier for a specific schedule line.

    UnitOfMeasure
        Unit of Measure for specified quantity.
		
	deliveryWindow
		Duration of time in which the quantity is expected to be delivered.

    SubcontractingComponent
        Contains detailed information about a subcontracting component which is used to manufacture the finished goods

	requestedShipmentDate
		The ship date requested by the buyer for the schedule line
-->
<!ELEMENT ScheduleLine (UnitOfMeasure, ScheduleLineReleaseInfo?, SubcontractingComponent*, Extrinsic*)>
<!ATTLIST ScheduleLine
    quantity               %r8;           #REQUIRED
    requestedDeliveryDate  %datetime.tz;  #REQUIRED
	lineNumber  		   %uint;  		  #IMPLIED
	deliveryWindow         %duration;     #IMPLIED
	requestedShipmentDate  %datetime.tz;  #IMPLIED
>

<!--
    Defines release information on schedule line.

    commitmentCode
        String value to identify the type of the delivery. The value will be
	firm – go ahead for production. Vendor can ship against the schedule line and customer is 
		responsible for cost of production as well as cost of material procurement 
	tradeoff – go ahead for material procurement. Vendor can ship against the schedule 
		line if rule is enabled. Buyer is responsible for cost of material procurement
	forecast – informational. Customer can change the schedule line without incurring any
		liabilities  with the vendor

    cumulativeScheduledQuantity
        Total quantity to be shipped for a particular line item up through the schedule line
-->

<!ELEMENT ScheduleLineReleaseInfo (UnitOfMeasure)>
<!ATTLIST ScheduleLineReleaseInfo
    commitmentCode              (firm | tradeoff | forecast)  #REQUIRED
    cumulativeScheduledQuantity %r8;                          #REQUIRED
>




<!--
    StatusUpdate for Confirmation (type=RequestToPay) request.

    transactionTimestamp
        time when the XMLPay transaction was submitted

    transactionID
        an identifier assisgned to the transaction by the payment processing gateway

    authorizationID
        the authorization code for the transaction provided by the bank

    isFailed
        should have a status code greater than zero.  Zero implies a successful transaction.
-->
<!ELEMENT PaymentStatus (PCard, Total, Shipping?, Tax?, Extrinsic*)>
<!ATTLIST PaymentStatus
    orderID    %string;    #REQUIRED
    transactionTimestamp    %datetime.tz;    #REQUIRED
    type    (Authorization| Settlement| Sale| Credit)    #REQUIRED
    isFailed   (yes)    #IMPLIED
    transactionID    %string;    #IMPLIED
    authorizationID    %string;    #IMPLIED
>

<!--
	Partial amount paid against an InvoiceDetail request. Used in InvoiceStatus.
	If this element exists in an InvoiceStatus element, it should mean that the buyer
	does not pay the full amount as the InvoiceDetail request specified. 
-->
<!ELEMENT PartialAmount (Money)>

<!--
	StatusUpdate for InvoiceDetail request.

        InvoiceIDInfo
        	ID of an invoice known to the supplier system. This attribute is used to reference an invoice in StatusUpdateRequest when DocumentReference is omitted.

	PartialAmount
		The partial amount paid against the InvoiceDetail document.  This attribute is
		only relevant when the status type is "paid".

	Comments
		Comments associated with the status update.

	type
		Type of the invoice status. 
                    processing - The invoice is received and being processed.
                    canceled - The invoice has been canceled.
                    reconciled - The invoice is reconciled. 
                    rejected - The invoice is rejected.
                    paying - The invoice is being paid. 
                    paid - The InvoiceDetail request is paid.  
-->

<!ELEMENT InvoiceStatus (InvoiceIDInfo?, PartialAmount?, Comments*)>
<!ATTLIST InvoiceStatus
	type	(processing | canceled | reconciled | rejected | paying | paid) #REQUIRED
>
	
<!-- OrderRequest* Elements -->
<!--  
  Specifies the earliest date when either the supplier can deliver the goods or when the receiver is able to handle incoming shipments, 
  and  the latest date when either the supplier can deliver the goods OR until the receiver is able to handle incoming shipments. 
-->
<!ELEMENT DeliveryPeriod (Period)>

<!--
    Definition of an order.  This is the data that is sent to the supplier
    to have them place an order in their order management system. The new
    world order equivalent of a PO.
-->
<!ELEMENT OrderRequest (OrderRequestHeader, ItemOut+)>

<!--
    Header of an order.  This is the data that is sent to the supplier
    to have them place an order in their order management system. Money
    represents the total amount of this order.

    orderID
        The buyer system orderID for this request.  This is an internal
        Buyer unique number.

    orderVersion
        The buyer system order version number for this request. Relevant when
        the OrderRequest represents a change order request. The version number
        for the original document should be 1 and should be incremented by 1 for
        each subsequent version (2,3,4...).

    isInternalVersion
        A value of yes indicates that this OrderRequest is a version whose changes from
        the previous version are deemed internal to the buyer system. Relevant when the
        version being sent to the supplier is not the first version.

    orderDate
        The date and time the order request was created.

    type
        The type of the order request. Defaults to "new".

    requisitionID
        The buyers system requisition id for this entire order. It might be
        the same as orderID, and it might not be included at all.  Must not
        be included if requisitionID is specified in any ItemOut elements.

    shipComplete
        Optional preference for "hold until complete" processing.  Defaults
        to shipping when available if not specified.  Future versions of the
        protocol may extend the datatype of this attribute to include
        additional possible values (such as "unlessGreatlyBackOrdered"?).

    orderType
        "release", indicates that this is a Release Order from an existing
	Master Agreement/ Contract. Default is regular. Type "blanket" indicates
	that this order is a Blanket Order.
    releaseRequired
	"yes" if the blanket order allows released. Currently used only if 
	orderType is "blanket".
    effectiveDate
	Date the order is available for ordering. If orderType is "blanket", 
	effectiveDate is required. Otherwise it is optional. Currently only
	used with blanket orders.
    expirationDate
	Date the order is no longer available. If not defined, end date is open
	ended. Currently only used with blanket orders.
    agreementID
        Identifies associated agreement corresponding to the Release Order.
	At an implementation level it has to be validated that if the orderType
	is 'release' then the appropriate agreementID is also provided.
    agreementPayloadID
        Optional PayloadID for the corresponding Master Agreement.

    parentAgreementID
	Used only in the context of a Order of type "blanket". This identifies the
	parent blanket order if the current order is part of an hierarchy.

    parentAgreementPayloadID
        Optional PayloadID for the corresponding Master Agreement.
        
    pickUpDate
  	Specifies the date when the goods can be/will be provided for picking up and delivery

    requestedDeliveryDate
	The requested delivery date reflects the time when the buyer is willing to receive the goods.

    Total 
	If the Order is of type "blanket", the Total element is not used to compute
	the sum of the item level subtotals. The total is used to indicate the maximum
	commitment with the supplier. The total will not add upto the individual item
	level sub total or MaxAmounts. The item level MaxAmounts should not exceed the
	header level total. If the item level MaxAmount is not specified it is assumed
	that the Item level maximum amount is the same as the Total.
    
     DeliveryPeriod
     	Start and end date for the delivery.
     	
     IdReference
       ID reference is Within the application context (for example,
a certain pair of buyer and supplier), 
       the (identifier, domain) pair
 should be unique.
 
	OrderRequestHeaderIndustry
	Industry specific header information  

    The contained DocumentReference element would appear in a document only
    when the type is "update" or "delete".  In that case, the
    DocumentReference would reference the most recent OrderRequest document
    for the order.  For example when an order is created, updated and then
    deleted, the final document should contain a DocumentReference
    referring to the OrderRequest with type="update".  That document would,
    in turn, refer to the original (type="new") OrderRequest document.
-->
<!ELEMENT OrderRequestHeader (Total, ShipTo?, BillTo, Shipping?, Tax?,
                              Payment?, PaymentTerm*, Contact*, Comments?, Followup?, ControlKeys?,
                              DocumentReference?, SupplierOrderInfo?,  TermsOfDelivery?, DeliveryPeriod?, IdReference*, OrderRequestHeaderIndustry?, Extrinsic*)>
<!ATTLIST OrderRequestHeader
    orderID    %string;        #REQUIRED
    orderDate  %datetime.tz;   #REQUIRED
    orderType  (release| regular | blanket) "regular"
    releaseRequired (yes) #IMPLIED
    type       (new | update | delete)  "new"
    orderVersion %number;      #IMPLIED
    isInternalVersion  (yes)   #IMPLIED
    parentAgreementID %string;       #IMPLIED
    parentAgreementPayloadID %string; #IMPLIED
    effectiveDate  %datetime.tz;     #IMPLIED
    expirationDate %datetime.tz;    #IMPLIED
    agreementID %string;       #IMPLIED
    agreementPayloadID %string; #IMPLIED
    requisitionID   %string;   #IMPLIED
    shipComplete    (yes)      #IMPLIED
    pickUpDate    %datetime.tz;   #IMPLIED
    requestedDeliveryDate     %datetime.tz;   #IMPLIED
>
<!--
    Definition of a Master Agreement.  This is the electronic document representing the 
    Master Agreement that was created and agreed upon in the Buying organizations.
-->
<!ELEMENT MasterAgreementRequest (MasterAgreementRequestHeader, AgreementItemOut*)>

<!--
   Header of an Agreement.  This is the header level information in the Agreement.
   agreementID
	 The buyer system agreementID for this request.  the Master Agreement Number in Buyer.
   agreementDate
	 The date and time the agreement request was created. 
	 This is different from the effective and expiry date of the agreement.
   agreementType
	 Identifies if this is a Value based agreement or quantity based Agreement.
   requestType
	 The type of the agreement request. Defaults to "new".
   effectiveDate
         Date the Master Agreement is available for ordering/releases.
   expirationDate
         Date the Master Agreement is no longer available.
   parentAgreementPayloadID
	 PayloadID for the corresponding parent document that this agreement is derived from.
   operation: 
	"delete" operation will be used to cancel an existing Master Agreement, the
	 assumption here is that the delete request will be an exact replica of the 
	 original request.
	 "new" operation identifies a new MasterAgreement transaction.
	 "update" operation identified an update to an existing transaction. 
	 the DocumentReference attribute should be used to indicate the Orignal
	 Document information.
   Note: 
	 Use "Contact" element to supply any additional Address or Location information.
-->

<!ELEMENT  MasterAgreementRequestHeader (MaxAmount?, MinAmount?, 
					 MaxReleaseAmount?, MinReleaseAmount?, 
					 Contact*,Comments?, DocumentReference?,  Extrinsic*)> 
<!ATTLIST MasterAgreementRequestHeader
    agreementID    %string;		   #REQUIRED
    agreementDate  %datetime.tz;	   #REQUIRED
    type	   (value | quantity)	   "value"
    effectiveDate  %datetime.tz;	   #REQUIRED
    expirationDate %datetime.tz;	   #REQUIRED
    parentAgreementPayloadID %string;      #IMPLIED
    operation      (new | update | delete) "new"
>

<!--
    The representation of a  agreement line item as it needs to be for sending to a
    supplier.
    maxQuantity 
          maximum quantity for this particular lineItem
    minQuantity 
          minimum quantity for this particular lineItem
    maxReleaseQuantity 
          maximum quantity per release for this particular lineItem
    minReleaseQuantity 
          minimum quantity per release for this particular lineItem

    Note :
	  The #lineNumber attribute in the <ItemOut> will be used to specify the corresponding 
	  lineNumber on the Master Agreement in the Procurement Application.
	  At an implementation, level checks should be made to validate this.
    Note :
	  The quantity attribute in the ItemOut tag should be set to one and ignored at 
	  the Mater Agreement implementation processing stage. 
    Note :
	  The MaxReleaseAmount/Quantity and MinReleaseAmount/Quantity at an item level i
	  indicate the ItemLevel amounts and quantities per release.
-->
<!ELEMENT AgreementItemOut (MaxAmount?, MinAmount?, MaxReleaseAmount?, MinReleaseAmount?, ItemOut)>
<!ATTLIST AgreementItemOut
   maxQuantity		%r8;      #IMPLIED
   minQuantity		%r8;      #IMPLIED
   maxReleaseQuantity	%r8;      #IMPLIED
   minReleaseQuantity	%r8;      #IMPLIED
>

<!--
    The maximum amount  for something.
-->
<!ELEMENT MaxAmount (Money)>

<!--
    The minimum amount  for something.
-->
<!ELEMENT MinAmount (Money)>

<!--
    The contractual maximum amount per Release of this Master Agreement.
-->
<!ELEMENT MaxReleaseAmount (Money)>

<!--
 The contractual minimum amount per Release of this Master Agreement
-->
<!ELEMENT MinReleaseAmount (Money)>


<!--
    The maximum quantity  for something.
-->
<!ELEMENT MaxQuantity (#PCDATA)> <!-- number -->

<!--
    The minimum quantity  for something.
-->
<!ELEMENT MinQuantity (#PCDATA)> <!-- number -->

<!--
    The contractual maximum quantity per Release of a contract.
-->
<!ELEMENT MaxReleaseQuantity (#PCDATA)> <!-- number -->

<!--
    The contractual minimum quantity per Release of a contract.
-->
<!ELEMENT MinReleaseQuantity (#PCDATA)> <!-- number -->


<!-- Followup

     Location to which future StatusUpdateRequest documents should be
     posted.  In general, this is the input location for any later
     documents which reference the current OrderRequest document.
-->
<!ELEMENT Followup (URL)>

<!-- PunchOut* Elements -->
<!--
    Definition of a PunchOut Setup Request.  This is the data that is sent
    to the external system that the procurement application is going to
    extract catalog data from.

    The BrowserFormPost element contains the URL we would like the browser
    re-directed to when the PunchOut shopping experience is finished (where
    the PunchOutOrder message should be returned).
-->
<!-- PurchaseRequisitionRequest* Elements -->
<!--
    Definition of Purchase Requisition.  This is the data that is sent from the Buyer
    to another buyer system.
-->
<!ELEMENT PurchaseRequisitionRequest (PurchaseRequisition)>

<!ELEMENT PurchaseRequisition (PurchaseRequisitionHeader, ItemIn*)>

<!--
    Header of an Purchase Requisition.  

    requisitionID
        The buyer system requisitionID  for this request.  This is an internal
        Buyer unique number.

    requisitionVersion
        The buyer system requisition version number for this request. Relevant when
        the PurchaseRequisitionRequest represents a change Requisition request. The version 
        number for the original document should be 1 and should be incremented by 1 for
        each subsequent version (2,3,4...).

    requisitionDate
        The date and time the Requisition request was created.

    type
        The type of the Requisition request. Defaults to "new".

       
    The contained DocumentReference element would appear in a document only
    when the type is "update" or "delete".  In that case, the
    DocumentReference would reference the most recent PurchaseRequisitionRequest document
    for the order.  For example when an requisition is created, updated and then
    deleted, the final document should contain a DocumentReference
    referring to the PurchaseRequisitionRequest with type="update".  That document would,
    in turn, refer to the original (type="new") PurchaseRequisitionRequest document.
-->

<!ELEMENT PurchaseRequisitionHeader (Shipping?, Tax?, Total?, ShipTo?, BillTo?, Contact*, Comments?,
                                     DocumentReference?, Extrinsic*)>
<!ATTLIST PurchaseRequisitionHeader
   requisitionID %string;        #IMPLIED
   requisitionDate %datetime.tz;   #IMPLIED
   type       (new | update | delete)  "new"
   requisitionVersion %number;      #IMPLIED
>

<!ELEMENT PunchOutSetupRequest (BuyerCookie, Extrinsic*, BrowserFormPost?,
                                Contact*, SupplierSetup?, ShipTo?,
                                SelectedItem?, ItemOut*)>
<!ATTLIST PunchOutSetupRequest
    operation  (create | inspect | edit | source)  #REQUIRED
>

<!ELEMENT BuyerCookie ANY> <!-- any valid XML data -->

<!ELEMENT SelectedItem (ItemID)>
<!ELEMENT SupplierSetup (URL)>

<!ELEMENT PunchOutSetupResponse (StartPage)>

<!--
    Definition of a PunchOut Order Message.  This is the data that is sent
    back to the procurement application from the external system that the
    PunchOut Request was targeted at.
-->
<!ELEMENT PunchOutOrderMessage (BuyerCookie, PunchOutOrderMessageHeader,
                                ItemIn*)>

<!--
     Header of a PunchOut Order Request.  This is the data that is sent from
     the supplier to transfer the supplier acquired shopping basket back to
     the buyer system.

     operationAllowed
          Highest operation allowed on the PunchOut shopping basket.
          "create" allows only later OrderRequest operations on these items.
          "inspect" adds a PunchOutSetupRequest with operation="inspect".
          And, "edit" allows operation="edit" in that later Setup request.

     quoteStatus 
          "pending"  - Identifies that the transaction is still pending
	  "final" - Identifies that the transaction is complete
-->
<!ELEMENT PunchOutOrderMessageHeader (SourcingStatus?, Total, ShipTo?, Shipping?, Tax?, SupplierOrderInfo?)>
<!ATTLIST PunchOutOrderMessageHeader
    operationAllowed  (create | inspect | edit)  #REQUIRED
    quoteStatus (pending|final) "final"
>

<!-- ====
    Other small Request elements.
==== -->

<!--
    Request to update the status of an earlier transaction.

    DocumentReference 
        A reference by payloadID to a cXML document to be updated.  This 
        element can be omitted only when InvoiceStatus is specified and
        the InvoiceStatus contains InvoiceIDInfo.

-->
<!ENTITY % cxml.statuses  "(PaymentStatus |
			    SourcingStatus | InvoiceStatus | DocumentStatus)">
<!ELEMENT StatusUpdateRequest  (DocumentReference?, Status, (%cxml.statuses;)?, Extrinsic*)>

<!--
    Status Update for Document Status

        DocumentInfo
            ID of a document entry known to the system. This attribute is used to reference a document in StatusUpdateRequest when DocumentReference is omitted.

    Comments
        Comments associated with the status update.

    type
        Type of the document status.
-->

<!ELEMENT DocumentStatus (DocumentInfo?, ItemStatus*, Comments*)>
<!ATTLIST DocumentStatus
        type              %string;               #REQUIRED
        >

<!--
  When a StatusUpdateRequest is send with a DocumentStatus, then you could send more detailed information about the original item.

  type
        Specifies which kind of status that item should have. Possible values are:
        	rejected - that item was not accepted
        	accepted - original ConfirmationItem is accepted as it was send

  code
        optional code from the backend ERP system

  ReferenceDocumentInfo
        contains details of referenced document
		
  Comments
        may be used to have a more user readable description of the code
-->
<!ELEMENT ItemStatus (ReferenceDocumentInfo, Comments*)>
<!ATTLIST ItemStatus
	type        %string;  #REQUIRED
	code        %string;  #IMPLIED
>

<!--
    Defines the ID of a document known to the system.

    DocumentID
        The id of a document known to the system.

    DocumentType
        The document type.

    DocumentDate
        The document date.
-->
<!ELEMENT DocumentInfo EMPTY>
<!ATTLIST DocumentInfo
        documentID              %string;               #REQUIRED
        documentType            %string;               #REQUIRED
        documentDate            %datetime.tz;          #IMPLIED
        >

<!--
    A reference to an attachment containing cXML document. 

    Attachment
        A reference to the attachment containing a cXML document.  The 
        attachment must be either a single, complete cXML document or another 
        MIME envelope containing a single, complete cXML document with 
        attachments.
-->
<!ELEMENT cXMLAttachment (Attachment)>

<!--
    Request to forward a cXML document to another party.  This Request
    occurs in multiple DTD files and is used depending on where (in which
    DTD) the forwarded message resides.

    cXMLAttachment
        A reference to the attachment containing the cXML document being 
        forwarded.  Refer to cXMLAttachment for more details.

    cXML
        Deprecated - Do Not Use.
-->
<!ELEMENT CopyRequest (cXMLAttachment | cXML)>

<!--
    Attribute processingMode of CopyRequest element specifies whether the
    cXML document is meant for processing, information only or copy.

    info : The cxml document is for information only
    process : The recipient of the cxml document should process the document.
    copy : the cxml document is a copy as a result of Path element with copy type in the source document.
-->
<!ATTLIST CopyRequest
    processingMode (info | process | copy)  #IMPLIED>

<!--
    Status for a pre-existing sourcing transaction. The textual content indicates
    the display information. "action" attribute defines the context of this message
    based on the value.

    approve : Approve the pending transaction
    deny : deny pending transaction
    cancel : cancel any preexisting transaction.

-->
<!ELEMENT SourcingStatus (#PCDATA)>
<!ATTLIST SourcingStatus
action    (approve | cancel | deny )  #IMPLIED
xml:lang %xmlLangCode; #REQUIRED>

<!--
    How the shipment will travel on this segment.  Each carrier within a
    segment controlled by a third party logistics provider provides
    tracking information to that provider externally.  The
    ShipNoticeRequest includes tracking information at the ShipControl
    level only.

    One Route element may describe only a single mode of travel.  If
    described at all, each mode of a multi-modal route must be described by
    a separate Route element.  It is not necessary to describe every leg of
    the journey to the buyer's ShipTo location.

    The only Contact roles likely to be sensible in this element are
    "carrierCorporate" (details the contact information the supplier has
    about the carrier organization), "shipFrom" and "shipTo".  The
    "carrierCorporate" role would be relevant at this level only when a
    third party is providing tracking information across multiple carriers.
    A Contact element with role "shipFrom" must appear in all Route
    elements after the first.  Route elements are not required to describe
    the entire travel under a specific carrier's control.  They may
    describe a discontinuous stream of events, starting and ending at
    different times and locations.

    Elements in the Contact list may appear in any order.  A contact role
    (Contact@role attribute value) must not appear more than once within a
    Route element.

    method
        Qualifier identifying the transportation type code:
        air - transportation by flight
        motor - transportation by land motor craft (common carrier)
        rail - transportation by rail
        ship - transportation by boat (ocean)
    startDate
        The date and time this shipment started this part of the trip.
        Required in all Route elements after the first.
    endDate
        The date and time this shipment ended this part of the trip.  Must
        be after startDate.  If any Route elements follow, the startDate of
        that element must not precede this value.
-->
<!ELEMENT Route (Contact*)>
<!ATTLIST Route
    method         (air | motor | rail | ship) #REQUIRED
    startDate            %datetime.tz;         #IMPLIED
    endDate              %datetime.tz;         #IMPLIED
>

<!--
    Additional information for transportation of the shipment.
    
    Description
        Free text description of shipment instructions.
-->
<!ELEMENT ShippingInstructions (Description?)>

<!--
    The shipping contract number specified for the transportation of the shipment.
    
    #PCDATA
        The contract number specified by the buyer or seller for the transport. 
-->
<!ELEMENT ShippingContractNumber (#PCDATA)>

<!--
    The terms for transportation of the shipment. This specifies that to whom amongst the buyer and seller
    the title, risk and insurance cost will pass to.
    
    value
        The terms of transportation.
        Typically this may be Free-Carrier, CostAndFreight, DeliveredAtFrontier etc. or an option to specify a free text.
        If the value of this attribute is specified as other, specifying
        a description is mandatory.
    #PCDATA
        Free text description of means of transportation. The text desription must be
        provided if the value "Other" is specified.

-->
<!ELEMENT TransportTerms (#PCDATA)>
<!ATTLIST TransportTerms
    value %string; #REQUIRED
>

<!--
    The transport information for the shipment described by the order 
    and ship notice. This information comes from the order 
    specified by the buyer and have to be presented in the ship notice
    so that these can be edited by supplier, if required. This information
    and possible changes have to be carried back to the buyer.

    Route
        The method or type of transportation of the shipment.
    ShippingContractNumber
        Contract number for the transport specified by the buyer or seller.
    ShippingInstructions
        Optional instructions for the shipment.
-->
<!ELEMENT TransportInformation (Route?, ShippingContractNumber?, ShippingInstructions?)>

<!--
    The mode of payment for order items shipped. This element is mandatory for 
    specifying terms of delivery.

    value
        The shipping payment method used for the order. Possible values include the following -
        Account, AdvanceCollect, AdvancePrepaid, Other etc.
    #PCDATA
        Free text description of shipping payment method. The text desription must be
        provided if the value "Other" is specified.
-->
<!ELEMENT ShippingPaymentMethod (#PCDATA)>
<!ATTLIST ShippingPaymentMethod
    value %string; #REQUIRED
>

<!--
    This element specifies the terms of delivery code. The free text description is optional
    for an order or a ship notice except for the case when "Other" is specified for value.
    
    value
        The value of the code that specifies terms of delivery. 
        Indicates whether the terms relate to price conditions, delivery conditions, 
        transport conditions, or a combination of these, or any other.
        If the value of this attribute is specified as other, specifying
        a description is mandatory. Possible values include the following -
        PriceCondition, DespatchCondition, PriceandDespatchCondition, CollectedByCustomer, 
        TransportCondition, DeliveryCondition, Other etc.
    #PCDATA
        Free text description of terms of delivery code. The text desription must be
        provided if the value "Other" is specified.

-->
<!ELEMENT TermsOfDeliveryCode (#PCDATA)>
<!ATTLIST TermsOfDeliveryCode
    value %string; #REQUIRED
>
 
<!--
    The terms of delivery for the shipment described by the order 
    and ship notice. These terms come from the Purchase Order 
    specified by the buyer and have to be presented in the ship notice
    so that these can be edited by supplier, if required. These terms
    and possible changes have to be carried back to the buyer.

    TermsOfDeliveryCode
        The code that specifies terms of delivery. Indicates whether the terms relate to price conditions, 
        delivery conditions, transport conditions, or a combination of these, or any other.
        One must specify description for this if "Other" is specified as the value.
    ShippingPaymentMethod
        The mode of payment for order items shipped. Specifying a mode of payment is a must. Examples include:
        Account, AdvanceCollect, AdvancePrepaid etc.
    TransportTerms
        This specifies that to whom amongst the buyer and seller the title, risk and insurance cost will pass to.
    Address
        Location and city specified with the terms.
    Comments
        Optional structured comments can be specified here for multiple types:
        Type "Transport"
            Additonal description of the transport. Examples include:
            "Delivered To Site / Stores", "OVERNIGHT FIRST CLASS", "To Be Collected by Courier" etc.
        Type "TermsOfDelivery"
            Additonal delivery instructions can be provided along with
            the other terms.
-->
<!ELEMENT TermsOfDelivery (TermsOfDeliveryCode, ShippingPaymentMethod, TransportTerms?, Address?, Comments*)>

<!--
	SealID
		A seal is used to preserve integrity of a transport or cargo shipment. Seals come in different versions and technical approaches with one common characteristic: a unique ID given by the owner or the responsible party. The SealID is used to internationally track a container, truck, vessel or other cargo property along the route.
-->
<!ELEMENT SealID (#PCDATA)>
<!--
	SealingPartyCode
		Is the company code for the party that has given the seal in its ID (usually the owner of the goods or the freight forwarder that loaded the cargo.
-->
<!ELEMENT SealingPartyCode (#PCDATA)>
<!--
	EquipmentIdentificationCode
		Mainly for internal transport and storage purposes the packing equipment is or will be marked with unique codes in order to monitor and manage movement and storage location. Coding can be temporarily or permantent (with GUID-like codes or RFID coding, but unique within the local addressing scheme.
-->
<!ELEMENT EquipmentIdentificationCode (#PCDATA)>
<!--
    The terms for transportation of the shipment. 

	SealID
		A seal is used to preserve integrity of a transport or cargo shipment. Seals come in different versions and technical approaches with one common characteristic: a unique ID given by the owner or the responsible party. The SealID is used to internationally track a container, truck, vessel or other cargo property along the route.
	
	SealingPartyCode
		Is the company code for the party that has given the seal in its ID (usually the owner of the goods or the freight forwarder that loaded the cargo.
	
	EquipmentIdentificationCode
		Mainly for internal transport and storage purposes the packing equipment is or will be marked with unique codes in order to monitor and manage movement and storage location. Coding can be temporarily or permantent (with GUID-like codes or RFID coding, but unique within the local addressing scheme.
-->
<!ELEMENT TermsOfTransport (SealID?, SealingPartyCode?, EquipmentIdentificationCode?, TransportTerms?, Dimension*, Extrinsic*)>

<!--
	For information of referenced document.

	DocumentInfo
	The element provides info (such id, type and date) about a document. 
	Following are the possible document types:
	salesOrder refers to sales order triggering the PO.
	customerOrder refers to  the customer order maintained in sales order.
	freightOrder refers to order for transportation.
	productionOrder refers to order that specifies  which material is to be produced, where it is to be produced, which operations are 
					required to do this  and on which date production is to take place. It also defines how the order costs are to be settled.

	DocumentReference
	Reference to an earlier document (for example, OrderRequest).  

	DateInfo
	Information of date associated with the document/item.  Following are the possible dates:
	expectecDeliveryDate refers to the expected delivery date for the material to be received at the partner location
	expectedShipmentDate refers to the expected ship date for the material is used to determine when the supplier is expected to ship the material from their location.
	productionStartDate refers to the production start date
	productionFinishDate refers to the production finish date

	Contact
	It is used for contact information for the referenced document

	lineNumber
	Line number of an item in the referenced document

	status
	status used to refer to the referenced document.  Following are the possible values.
	created
	released
	open
	completed
	closed
	cancelled
-->
<!ELEMENT ReferenceDocumentInfo ((DocumentInfo | DocumentReference)?, DateInfo*, Contact*, Extrinsic*)>
<!ATTLIST ReferenceDocumentInfo
	lineNumber  %uint;                   #IMPLIED      
	status (created | released | open | completed | closed | cancelled )     #IMPLIED                       
>

<!--
	For information of date.

	type 
	Date type
	expectecDeliveryDate refers to the expected delivery date for the material to be received at the partner location
	expectedShipmentDate refers to the expected ship date for the material is used to determine when the supplier is expected to ship the material from their location.
	productionStartDate refers to the production start date
	productionFinishDate refers to the production finish date

	date
	Date value
-->
<!ELEMENT DateInfo (Extrinsic*)>
<!ATTLIST DateInfo
	type	(expectedDeliveryDate | expectedShipmentDate | productionStartDate | productionFinishDate )	#REQUIRED
	date	%datetime.tz;				#REQUIRED
>

<!--
	Priority
	Priority indicator, used to drive the priority of the orders for the suppliers.
	Example:
	Level 1 is Very High Priority
	Level 2 is High Priority 
	Level 3 is Medium Priority
	Level 4 is Medium Low Priority
	Level 5 is Low Priority

	Description
	Description for priority (such as very high, high, medium, medium low, low).

	level
	There are 5 levels (1, 2, 3, 4, 5).  Level 1 has the highest priority.  Level 5 has the lowest priority.
-->
<!ELEMENT Priority (Description?)>
<!ATTLIST Priority
	level     ( 1 | 2 | 3 | 4 | 5  )  #REQUIRED
>

<!--
	Industry specific header information  

	ReferenceDocumentInfo 
	Details of referenced document 

	Priority
	Priority indicator, it is used to drive the priority of the orders for the suppliers
-->
<!ELEMENT OrderRequestHeaderIndustry (ReferenceDocumentInfo*, Priority?)>

<!--   Industry specific item information 
	ReferenceDocumentInfo 
	It contains the details of referenced document

	Priority
	Priority Indicator used to drive the priority of the item ordered by the buyer.

	planningType
	To specify different production planning strategies. Following are possible strategies:
	MTO: Make to Order
	MTS: Make to Stock
-->
<!ELEMENT ItemOutIndustry (ItemOutRetail?, ReferenceDocumentInfo*, Priority?)>
<!ATTLIST ItemOutIndustry
    planningType	 ( MTO | MTS  )	#IMPLIED
>

<!--    Retails industry item information 
	PromotionVariantID
	Used when only one or some variants of an article are promoted

	PromotionDealID 
	Number assigned by a supplier to a special promotion activity. Promotions affect the forward planning/ordering process (and the related pricing)
-->
<!ELEMENT ItemOutRetail (PromotionVariantID?, PromotionDealID?)> 

<!--
    Details about the packaging of this line item.

    Zero or more PackagingCode elements may appear in the Packaging
    element.  Each PackagingCode must contain a single string corresponding
    to the packaging for this item.  When multiple PackagingCode elements
    appear, all must describe the same packaging in different languages or
    locales.  (No two PackagingCode elements may have the same xml:lang
    attribute.)  Elements in such a list may appear in any order.

    The dimensions mentioned in the Dimension element list may appear in
    any order.  A particular dimension (Dimension@type attribute value)
    must not appear more than once in a Packaging element.
    
    	Description
        	The Package description.

	PackagingLevelCode
	Describes the level (inner, outer, intermediate) for packages.
	
	PackageTypeCodeIdentifierCode 
	Unique ID of packaging material. This helps receiving side for unloading and storage.
	
	ShippingContainerSerialCode
	Serial number of a package that helps to identify package during transportation and inventory.
    
    ShippingContainerSerialCodeReference
    Reference from a package with shipping code to the shipping code of the next higher package level. It references the parent ShippingContainerSerialCode.
	
	PackageID
	Package related IDs.
	
	ShippingMark
	Information about packaging proposals and packaging hierarchy.
	
	OrderedQuantity
	The quantity ordered in purchase order.
	
	DispatchQuantity
	The dispatch quantity in package.
	
	FreeGoodsQuantity
	Quantities delivered but not charged. 
	
	QuantityVarianceNote
	Quantity Variance Note gives detailed information about partial delivery.
	
	BestBeforeDate
	Gives the best before date for all goods related to food, drugs, chemicals and others.

-->
<!ELEMENT Packaging (((PackagingCode+, Dimension*) | Dimension+), Description?, 
				PackagingLevelCode?, PackageTypeCodeIdentifierCode?, ShippingContainerSerialCode?, 
                ShippingContainerSerialCodeReference?,
				PackageID?, ShippingMark*, OrderedQuantity?, DispatchQuantity?, 
				FreeGoodsQuantity?, QuantityVarianceNote?, BestBeforeDate?, Extrinsic*)>

<!--
    One language-specific code for the packaging of this item.  Values such
    as "pallet", "skid" and "truck load" may be appropriate (for an
    English-based locale).

    xml:lang
        The language or locale in which the PackagingCode content (the
        value of the code) is written.
-->
<!ELEMENT PackagingCode (#PCDATA)>             <!-- string -->
<!ATTLIST PackagingCode
    xml:lang             %xmlLangCode;         #REQUIRED
>

<!--
    A single dimension for the packaging. It also can be used to define item dimensions.
    quantity
        Size in this dimension.  Expressed in the units given in the UnitOfMeasure element.
    type
        Type of dimension.  Supported values include:
        length - The length of the packaging or item.
        width - The width of the packaging or item.
        height - The height of the packaging or item.
        weight - The weight  or net weight of the packaging or item.
        volume - The volume or net volume of the packaging or item.
        stackHeight -The stack height of packaging. This indicates total height of the stacked packages. 
        grossWeight - The gross weight is the total weight including packaging.
        grossVolume -The gross volume is the total volume including packaging. 
        unitGrossWeight  - The unit gross weight of the item.
        unitNetWeight  -The unit net weight of the item.
-->
<!ELEMENT Dimension (UnitOfMeasure)>
<!ATTLIST Dimension
    quantity             %r8;                        #REQUIRED
    type (length | width | height | weight | volume | stackHeight | grossWeight | grossVolume | unitGrossWeight | unitNetWeight ) #REQUIRED
>


<!-- Describes the level (inner, outer, intermediate) for packages. It is used in logistics for loading and unloading information. This information qualifies the 
packing level within the packing hierarchy. -->

<!ELEMENT PackagingLevelCode (#PCDATA)>

<!-- This is a unique ID of packaging materials like box, container, pallet and rack. This helps receiving side for unloading and storage. This also defines the 
maximum load or weight of articles -->

<!ELEMENT PackageTypeCodeIdentifierCode (#PCDATA)>

<!--This identifies a package during transport and in inventory. Serial number of a packaging unit like container, box and rack -->
<!ELEMENT ShippingContainerSerialCode (#PCDATA)>

<!--
Reference from a package with shipping code to the shipping code of the next higher package level. It references the parent ShippingContainerSerialCode.
-->
<!ELEMENT ShippingContainerSerialCodeReference (#PCDATA)>


<!-- Unique ID for a package.  GIAI, numbering scheme of GS1 specifying the ownership of an asset.-->
<!ELEMENT GlobalIndividualAssetID (#PCDATA)>


<!-- The ID that helps supplier with handling of any returned package.-->
<!ELEMENT ReturnablePackageID (#PCDATA)>

<!-- The information to track packages based on an internal numbering scheme of the supplier. -->
<!ELEMENT PackageTrackingID (#PCDATA)>

<!-- Packaging related IDs.-->
<!ELEMENT PackageID (GlobalIndividualAssetID?,ReturnablePackageID?,PackageTrackingID?)>

<!-- This contains codes for packaging proposals and packaging hierarchy. Also can contain marking for containers/packages that need special signing or handling 
(hazardous goods, explosives and maximum stack size)-->

<!ELEMENT ShippingMark (#PCDATA)>


<!--This is the ordered quantity from purchase order. -->
<!ELEMENT OrderedQuantity (UnitOfMeasure?) >
<!ATTLIST OrderedQuantity
    quantity	%r8;	#IMPLIED>

<!-- The dispatch quantity in package.-->
<!ELEMENT DispatchQuantity (UnitOfMeasure?)  >
<!ATTLIST DispatchQuantity
    quantity        %r8;       #IMPLIED>

<!--  Quantities delivered but not charged. These can be samples or promotions or just "fill up" articles. These will not be on the commercial invoice (or marked with value 0.00)  -->
<!ELEMENT FreeGoodsQuantity (UnitOfMeasure?)  >
<!ATTLIST FreeGoodsQuantity
    quantity        %r8;       #IMPLIED>


<!-- Detailed information about partial delivery. Used for different measurements (1 lot = 500 pieces) -->
<!ELEMENT QuantityVarianceNote (#PCDATA)>

<!-- The best before date helps with in FDA-related deliveries for go/no-go criteria. This can be used to indicate best before date for all goods related to food, drugs, chemicals etc. -->
<!ELEMENT BestBeforeDate EMPTY>
<!ATTLIST BestBeforeDate
      date         %datetime.tz;    #REQUIRED>
      
<!-- The expiry date  can be used to indicate expiry date for all goods related to food, drugs, chemicals etc. -->
<!ELEMENT ExpiryDate EMPTY>
<!ATTLIST ExpiryDate
      date         %datetime.tz;    #REQUIRED>

    
<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id$
-->

<!--
    For better definitions of these Elements/Entities, refer to the cXML
    Transaction Specification documents.
-->

<!-- Basic financial elements used throughout -->

<!--
    The following defines a list of money amounts.

    DepositAmount
        The amount of deposit or prepayment.

    SubtotalAmount
        The subtotal amount.
        
    DiscountAmount
	Defines the discount amount

    FixedAmount
    Defines a new amount

    SpecialHandlingAmount
        The special handling amount.

    ShippingAmount
        The shipping amount.

    GrossAmount
        The gross amount.

    NetAmount
        The net amount.

    DueAmount
        The due amount.

    FeeAmount
        Defines gross amount of the fee associated with a purchase
        in original currency.
-->
<!ELEMENT DepositAmount (Money)>

<!ELEMENT SubtotalAmount (Money)>

<!ELEMENT SpecialHandlingAmount (Money, Description?)>

<!ELEMENT ShippingAmount (Money)>

<!ELEMENT GrossAmount (Money)>

<!ELEMENT NetAmount (Money)>

<!ELEMENT DueAmount (Money)>

<!ELEMENT DiscountAmount (Money)>

<!ELEMENT FixedAmount (Money)>

<!-- 
    Defines gross amount of the fee associated with a purchase in original currency.
    Money - the fee amount
    Fee
        different types of individual fees, for example, service provider fee 
-->
<!ELEMENT FeeAmount (Money, Fee*)>

<!-- 
    Different types of individual fees
    type - the type of fee
-->
<!ELEMENT Fee (Money)>
<!ATTLIST Fee
    type     %string;  #IMPLIED
>

<!ELEMENT DeductionAmount (Money)>

<!ELEMENT DeductedPrice (Money)>

<!--
    Defines a Purchasing Card element used for payment
-->
<!ELEMENT PCard (PostalAddress?)>
<!ATTLIST PCard
    number      %number;  #REQUIRED
    expiration  %date;    #REQUIRED
    name        %string;  #IMPLIED
>

<!--
    TotalCharges represents the total sum of all the charges  applied on the goods and 
    services. This can appear at the  line item and summary in an invoice.
-->
<!ELEMENT TotalCharges (Money)>

<!--
    TotalAllowances represents the total sum of all the allowances applied on the goods and 
    services. This can appear at the  line item and summary in an invoice.
-->
<!ELEMENT TotalAllowances (Money)>

<!--
    TotalAmountWithoutTax represents the sum of the SubTotal, Charges (including special handling 
    charges and shipping charges), Allowances (including discounts). This does not include taxes.
    This can appear at the  line item and summary in an invoice.
-->
<!ELEMENT TotalAmountWithoutTax (Money)>

<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id$
-->

<!--
    This element captures spend detail information.  SpendDetail can
    be used in the ItemIn and ItemOut and for the following types of
    messages:

        PunchOutSetupRequest
        PunchOutOrderMessage
        OrderRequest
        ConfirmationRequest

    But not for:

        MasterAgreementRequest

    TravelDetail
        Travel details for the current travel line item.

    LaborDetail
        Labor details for the current temporary labor line item.

    FeeDetail
        Fee details for the current fee line item.
        
    Extrinsic
    	Detail information for the any undefined spend category.  The name
    	attribute of the Extrinsic element should specify the type of the
    	spend category (e.g., (PrintDetail, ProjectLaborDetail))

-->
<!ELEMENT SpendDetail (TravelDetail | FeeDetail | LaborDetail | Extrinsic)>

<!--
    FeeDetail contains additional information about a line item for a fee, 
    which may or may not be recurring.

    UnitRate
        The amount(s) to be paid per unit (of time or other measure).
        In the case of multiple UnitRates (i.e., a "rate schedule"), it is
        customary and expected that each UnitRate will include a
        TermReference to distinguish them.

    Period
        The Period of time over which the fee is charged, if applicable.

    isRecurring 
        Indicates that the fee is recurring (charged more than once).
  -->
<!ELEMENT FeeDetail (UnitRate+, Period?) >
<!ATTLIST FeeDetail
	isRecurring (yes) #IMPLIED
>
<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id: $
-->

<!--
    LaborDetail contains information about an item for a temporary
    labor engagement. 

    UnitRate
        The amount(s) to be paid per unit (of time or other measure).
        In the case of multiple UnitRates (i.e., a "rate schedule"), it is
        customary and expected that each UnitRate will include a
        TermReference to distinguish them.

    Period
        The Period of time over which the service occurs.

    Contractor
        Identifies the contractor being engaged

    JobDescription
        Description of the job or work to be performed.

    Supervisor
        The person who is expected to supervise the contractor.

    WorkLocation
         Place where the work is expected to be performed.

    supplierReferenceCode
        The supplier's quote or proposal id, for cross-reference.
-->
<!ELEMENT LaborDetail (UnitRate+, Period, Contractor?, JobDescription?, Supervisor?, WorkLocation?, Extrinsic*)>
<!ATTLIST LaborDetail
	supplierReferenceCode %string; #IMPLIED
>
<!--    Text description of a job (service)-->
<!ELEMENT JobDescription (Description)>
<!--    Contact information for the person supervising a job (service)-->
<!ELEMENT Supervisor (Contact)>
<!--    Address of the location where a service is to be performed-->
<!ELEMENT WorkLocation (Address)>
<!--
    	Definition of a Contractor used in the context of temp labor. 
	The contractor is uniquely identified by a contractor identifier. 
	The piece of identification for a contractor is exchanged between 
	the buyer and the supplier prior to sending out order/timecards.
-->
<!--
    	Definition of a Contractor used in the context of temp labor. 
	The contractor is uniquely identified by a contractor identifier. 
	The piece of identification for a contractor is exchanged between 
	the buyer and the supplier prior to sending out order/timecards.
-->
<!ELEMENT Contractor (ContractorIdentifier, Contact)>

<!--
    	Definition of a ContractorIdentifier. uniquely identifies a contractor.
    
	domain
        	in what domain the identity is represented. This is for the
		end systems to know who assigned the id. buyerReferenceID 
		implies that it is something generated by the buyer system 
		and supplierReferenceID implies that it is something generated 
		by the supplier system/entered by the supplier.
-->
<!ELEMENT ContractorIdentifier (#PCDATA)>
<!ATTLIST ContractorIdentifier
        domain     	(supplierReferenceID|buyerReferenceID) #REQUIRED
>

<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id: //ariba/cxml/release/schema/1.2.29.1+/Modules/Reference.mod#4 $
-->

<!--
    For better definitions of these Elements/Entities, refer to the cXML
    User's Guide and related documents.
-->

<!--
    The OrderReference element provides a clear reference to a prior
    OrderRequest document.  While the contained DocumentReference provides
    an unambiguous reference, the additional attributes of the
    OrderReference may allow the ConfirmationRequest and ShipNoticeRequest
    to be viewed independently.

    orderID
        The buyer system orderID for this request. Basically, what the PO
        number is today.  If present, must be copied directly from the
        referenced OrderRequest document's OrderRequestHeader.
    orderDate
        The date and time the order request was created.  If present, must
        be copied directly from the referenced OrderRequest document's
        OrderRequestHeader.
-->
<!ELEMENT OrderReference (DocumentReference)>
<!ATTLIST OrderReference
    orderID              %string;              #IMPLIED
    orderDate            %datetime.tz;         #IMPLIED
>

<!--
    Defines the ID of an order known to the buyer system.

    orderID
        The id of an order known to the buyer system.  Basically,
        what the PO number is today.

    orderDate
        The date and time the order was created.
-->
<!ELEMENT OrderIDInfo (IdReference*)>
<!ATTLIST OrderIDInfo
    orderID              %string;               #REQUIRED
    orderDate            %datetime.tz;          #IMPLIED
>

<!--
    Defines information related to an order.

        OrderReference
        The reference to the order being paid.

        OrderIDInfo
        The buyer system order id of the order.
-->
<!ELEMENT OrderInfo (OrderReference | OrderIDInfo)>


<!--
    The InvoiceReference element provides a clear reference to a prior
    InvoiceDetailRequest document.

    invoiceID
        The suplier system invoiceID for this request. Basically, what
        the Invoice number is today.  If present, must be copied
        directly from the referenced InvoiceDetailRequest document's
        InvoiceDetailRequestHeader.

    invoiceDate
        The invoice date.
-->
<!ELEMENT InvoiceReference (DocumentReference)>
<!ATTLIST InvoiceReference
    invoiceID              %string;               #IMPLIED
    invoiceDate            %datetime.tz;          #IMPLIED
>

<!--
    Defines the ID of an invoice known to the supplier system.

    invoiceID
        The id of an invoice known to the supplier system.

    invoiceDate
        The invoice date.
-->
<!ELEMENT InvoiceIDInfo EMPTY>
<!ATTLIST InvoiceIDInfo
    invoiceID              %string;               #REQUIRED
    invoiceDate            %datetime.tz;          #IMPLIED
>

<!--
    Defines the ID of a master agreement known to the buyer system.
    In InvoiceDetailRequest, this element identifies the master agreement
    of the release order to be invoiced.


    IdReference
         Additional reference ID for MasterAgreement.

    agreementID
        The id of a master agreement known to the buyer system.  Basically,
        what the master agreement number is today.

    agreementDate
        The date and time the master agreement request was created.

    agreementType
        The type of the master agreement being referenced, for example: Scheduling Agreement

-->
<!ELEMENT MasterAgreementIDInfo (IdReference*)>
<!ATTLIST MasterAgreementIDInfo
    agreementID              %string;               #REQUIRED
    agreementDate            %datetime.tz;          #IMPLIED
    agreementType            (scheduling_agreement) #IMPLIED

>

<!--
    Defines a reference to an earlier MasterAgreementRequest document.
    In InvoiceDetailRequest, this element identifies the master agreement
    of the release order to be invoiced.

    DocumentReference
        The reference to an earlier MasterAgreementRequest document.

    agreementID
        The id of a master agreement known to the buyer system.  Basically,
        what the master agreement number is today.

    agreementDate
        The date and time the master agreement request was created.

    agreementType
	The type of the master agreement being referenced, for example: Scheduling Agreement
-->
<!ELEMENT MasterAgreementReference (DocumentReference)>
<!ATTLIST MasterAgreementReference
    agreementID              %string;               #IMPLIED
    agreementDate            %datetime.tz;          #IMPLIED
    agreementType            (scheduling_agreement) #IMPLIED
>

<!--
    Identifies the carrier who will transport a shipment.

    domain
        Domain in which this value has meaning.  Recognized domains
        include:
        companyName - The legal name for this company.  In some cases, this
            could also be provided in a Contact element with role
            "carrierCorporate".  That option should be reserved for cases
            in which additional detail about the carrier appears in this
            element.
        SCAC - Standard Carrier Alpha Code (see
            http://users.erols.com/nmfta/Codes.htm)
        IATA - International Air Transport Association (see
            http://www.iata.org)
        AAR  - Association of American Railroads (see http://www.aar.org/)
        UIC  - International Union of Railways (see
            http://www.uic.asso.fr/)
        EAN  - European Article Numbering (see http://www.ean-ucc.org/)
        DUNS - D&B's Data Universal Numbering System (see
            http://www.dnb.com/dnbhome.htm)
-->
<!ELEMENT CarrierIdentifier (#PCDATA)>         <!-- string -->
<!ATTLIST CarrierIdentifier
    domain               %string;              #REQUIRED
>

<!--
    Identifier that appears on a shipment and through which additional
    detail about the shipment may be retrieved.  Defined by the carrier.
    Has meaning in the domain described by the CarrierIdentifier values.
    Therefore, CarrierIdentifier and ShipmentIdentifier should normally
    be used together.

    Conceptually, this is a tracking number.  Different carriers have
    different names for shipment identifiers.  Some call it a way bill
    number, others call it a pro number, and still others call it a bill of
    lading.  They all represent tracking numbers.
    
    domain
        Specifies more precisely what kind of identifier this is.
        Likely values include trackingNumber, billOfLading. 
        
    trackingNumberDate
        The date when the logistics provider intimates the tracking number 
        for this shipment. This date is used to find out the efficiency of the
        supply chain process.

    trackingURL
        carrier URL that can be used to track the shipment in conjunction with the tracking number
-->
<!ELEMENT ShipmentIdentifier (#PCDATA)>        <!-- string -->
<!ATTLIST ShipmentIdentifier
    domain                %string;              #IMPLIED
    trackingNumberDate    %datetime.tz;         #IMPLIED
    trackingURL           %URL;                 #IMPLIED>


<!--
    One language-specific string for the creator of an IdReference,
    e.g. IRS, BofA, UPS, Cisco, etc.

    xml:lang
        The language or locale in which the name of the creator is written.
-->
<!ELEMENT Creator (#PCDATA)>              <!-- string -->
<!ATTLIST Creator
   xml:lang              %xmlLangCode;         #REQUIRED
>

<!--
    Defines an ID reference.  Within the application context (for example,
    a certain pair of buyer and supplier), the (identifier, domain) pair
    should be unique.

    Creator
        The creator of this IdReference, e.g. BofA, UPS, Cisco, etc.

    Description
        Textual description of the IdReference. For human readability.

    identifier
        The unique identifier of the IdReference within the domain.

    domain
        The domain of the IdReference.  It should be one of the
        following:
        accountID, bankRoutingID, accountPayableID,
        accountReceivableID, bankAccountID, ibanID, abaRoutingNumber,
        bankNationalID, isoBicID, swiftID, bankBranchID, federalTaxID,
        stateTaxID, provincialTaxID, vatID, gstID, and taxExemptionID.
        supplierTaxID is deprecated and will be treated as federalTaxID.
        Other possible values could be 1099ID, courtRegisterID, 
        supplierReference, governmentNumber, documentName, etc.
-->
<!ELEMENT IdReference (Creator?, Description?)>
<!ATTLIST IdReference
    identifier      %string;                         #REQUIRED
    domain          %string;                         #REQUIRED
>

<!--
    Defines supplier sales order information related to an order.

    This is also used in PunchOutOrderMessage to indicate that the 
    supplier has created an order associated with the punchout order message.  
    The buyer can later cancel the sales order by sending an OrderRequest 
    of type "delete" that refers to the sales order by including the 
    SupplierOrderInfo element in the OrderRequestHeader

    orderID
        Supplier sales order id of this order.
        
    orderDate
        The date and time the sales order was created.
-->
<!ELEMENT SupplierOrderInfo EMPTY>
<!ATTLIST SupplierOrderInfo
    orderID              %string;               #REQUIRED
    orderDate          %datetime.tz;      #IMPLIED
>


<!-- 
    The ShipNoticeReference element provides a clear reference to a prior
    ShipNoticeRequest document.  While the contained DocumentReference provides
    an unambiguous reference, the additional attributes of the
    ShipNoticeReference may allow the ReceiptRequest to be viewed independently.

    DocumentReference
        The reference to an earlier ShipNoticeRequest.
        	
    shipNoticeID
        Unique identifier of the referenced ShipNoticeRequest.

    shipNoticeDate
        Date and time of the referenced ShipNoticeRequest.
-->
<!ELEMENT ShipNoticeReference (DocumentReference)>
<!ATTLIST ShipNoticeReference
	shipNoticeID %string; #IMPLIED
	shipNoticeDate %datetime.tz; #IMPLIED
>

<!-- 
    Defines ID of a Ship Notice known to the Buyer system.
 
 
    IdReference
	Additional reference ID for shipment related IDs e.g. DispatchAdviceID, ReceivingAdviceID, DeliveryNoteId, ProofOfDeliveryID.

    shipNoticeID
        Unique identifier of the referenced ShipNoticeRequest.

    shipNoticeDate
        Date and time of the referenced ShipNoticeRequest.
-->
<!ELEMENT ShipNoticeIDInfo (IdReference*)>
<!ATTLIST ShipNoticeIDInfo
    shipNoticeID              %string;               #REQUIRED
    shipNoticeDate            %datetime.tz;          #IMPLIED
>

<!--
    The OrderStatusRequestReference element provides a clear reference to a prior
    OrderStatusRequest document.

    orderStatusRequestID
        The buyer system orderStatusRequestID for this request. If present, must be copied
        directly from the referenced OrderStatusRequest document's
        OrderStatusRequestHeader.

    orderStatusRequestDate
        The order status request date.
-->
<!ELEMENT OrderStatusRequestReference (DocumentReference)>
<!ATTLIST OrderStatusRequestReference
    orderStatusRequestID              %string;               #IMPLIED
    orderStatusRequestDate            %datetime.tz;          #IMPLIED
>

<!--
    Defines the ID of an order status request known to the buyer system.

    orderStatusRequestID
        The id of an order status request known to the buyer system.

    orderStatusRequestDate
        The order status request date.
-->
<!ELEMENT OrderStatusRequestIDInfo EMPTY>
<!ATTLIST OrderStatusRequestIDInfo
    orderStatusRequestID              %string;               #REQUIRED
    orderStatusRequestDate            %datetime.tz;          #IMPLIED
>

<!--
    The ReceiptReference element provides a clear reference to a prior
    ReceiptRequest document.

    receiptID
        The buyer system receiptID for this request.
        If present, must be copied directly from the
        referenced ReceiptRequest document's ReceiptRequestHeader.

    receiptDate
        The date and time the receipt request was created. If present, must
        be copied directly from the referenced ReceiptRequest document's
        RequestRequestHeader.
-->
<!ELEMENT ReceiptReference (DocumentReference) >
<!ATTLIST ReceiptReference
    receiptID              %string;              #IMPLIED
    receiptDate            %datetime.tz;         #IMPLIED
>

<!--
    Defines the ID of a receipt known to the buyer system.

    receiptID
        The id of an receipt known to the buyer system.

    receiptDate
        The date and time the order was created.
-->
<!ELEMENT ReceiptIDInfo (IdReference*)>
<!ATTLIST ReceiptIDInfo
    receiptID              %string;               #REQUIRED
    receiptDate            %datetime.tz;          #IMPLIED
>

<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp
    
    $Id: //ariba/cxml/release/schema/1.2.29.1+/Modules/Fulfill.mod#3 $
-->

<!-- ====
    Allow this module to be built separately from any other DTD file.
==== -->

<!ENTITY % cxml.requests "(ConfirmationRequest |
                           ShipNoticeRequest |
                           ServiceEntryRequest |
                           CopyRequest |
			   TimeCardInfoRequest |
			   ReceiptRequest |
               OrderStatusRequest |
                           TimeCardRequest |
                           ComponentConsumptionRequest)"
>

<!ENTITY % cxml.responses "">

<!ENTITY % cxml.messages ",(ProductReplenishmentMessage)">

<!-- ====
    Common to both of the documents listed below.
==== -->

<!--
    Either or both a textual description and codes about a hazard inherent
    in an item or for the overall order or shipment.  The overall hazards
    may be due either to identical hazards for all items or hazards
    inherent in shipping various products together.

    The contained Description element list (if provided) should include
    detailed handling requirements.  Elements in this list may appear in
    any order.  A description locale (Description@xml:lang attribute value)
    must not appear more than once in a Hazard element.  When more than one
    Description element is present, all must contain translations of a
    common description.

    Classification elements may appear in any order.  A classification
    domain (Classification@domain attribute value) must not appear more
    than once in a Hazard element.

    All listed Classification elements and the Description (if provided)
    must relate to a single hazard.  Additional hazards must use separate
    Hazard elements.

    The following Classification domains are expected in this context:
        UNDG - United Nations Dangerous Goods
        IMDG - International Marine Organization Dangerous Goods
        NAHG - North American Hazardous Goods
-->
<!ELEMENT Hazard ((Description+, Classification*) | Classification+)>

<!-- ====
    Confirmation* transaction forwards confirmation data in the Request.
    No specific Response document is required for this transaction.
    Servers must respond to a ConfirmationRequest with a generic Response
    document.
==== -->

<!-- OrderStatusRequest Elements -->
<!--
    Definition of an order status request.  This is the data that is sent to the supplier to ask 
    for information regarding a previously sent PO such as the status of the order, delivery date 
    or current location of a shipped product.
-->
<!ELEMENT OrderStatusRequest (OrderStatusRequestHeader, OrderStatusRequestItem*)>
    
<!-- OrderStatusRequestHeader Elements -->
<!--
    Header of an order status request. It contains the reference to the orderStatusRequest 
    (OrderStatusRequestID, OrderStatusRequestDate) from the buyer side.

    OrderStatusRequestID
        The buyer system ID for this status request. This is an internal buyer unique number.

    OrderStatusRequestDate
        date and time when the order status request was created.

-->
<!ELEMENT OrderStatusRequestHeader ((OrderReference | OrderIDInfo),Contact+, Comments?, Extrinsic*)>
<!ATTLIST OrderStatusRequestHeader
    orderStatusRequestID    %string;        #REQUIRED
    orderStatusRequestDate  %datetime.tz;   #REQUIRED
>

<!-- OrderStatusRequestItem* Elements -->
<!--
   Represent an item on the Order Status Request. 
-->
<!ELEMENT OrderStatusRequestItem (ItemReference, Comments?)>

<!--
    Request to add confirmation information to the data known about an
    order at the receiving server.

    While multiple confirmations may be sent for one order, each
    confirmation must mention a line item once.  And, a line item must not
    be mentioned in more than one confirmation.  Multiple confirmations are
    allowed (and sensible) only when each has type="allDetail" or
    type="detail".  Only one (original) confirmation per order of
    type="accept", type="except" or type="reject" is allowed.  When a
    confirmation with one of these types arrives, the receiving system must
    discard any and all previous confirmations for the order.

    OrderStatusRequestReference or OrderStatusRequestIDInfo can be optionally added to
    explicitly reference to the Order Status Request that originated the confirmation.

    ConfirmationItem elements may appear in any order within the
    ConfirmationRequest.  Of course, an easily-readable order such as by
    increasing lineNumber value is preferred.  Again, no line item
    (Confirmation@lineNumber attribute value) may appear more than once
    within a ConfirmationRequest element.
-->
<!ELEMENT ConfirmationRequest
    (ConfirmationHeader, OrderReference, (OrderStatusRequestReference | OrderStatusRequestIDInfo)*, ConfirmationItem*)>

<!--
    Information about this confirmation that's common to all contained
    items.

    The contained DocumentReference element may appear in a document only
    when the operation is "update".  In that case, the DocumentReference is
    required and it must reference the most recent ConfirmationRequest
    document for this particular confirmation (usually also indicated by a
    common confirmID).  For example when a confirmation is created, updated
    and then updated again, the final document must contain a
    DocumentReference referring to the previous ConfirmationRequest with
    operation="update".  That document must, in turn, refer to the original
    (operation="new") ConfirmationRequest document.

    Tax and Shipping amounts may be updated (included in the confirmation
    with new values) without corresponding line item information
    (additional information in the ConfirmationItem list).  Total should
    not be included with a different value from the OrderRequest document
    unless a ConfirmationItem describes a new UnitPrice or quantity.  It is
    not necessary to copy this information from the OrderRequest document:
    Total, Tax and Shipping should not be included if they match those
    amounts in the original order.

    Contact roles may usefully include: technicalSupport, customerService,
    sales, shipFrom (starting point for shipments related to this order),
    shipTo (echoing the ShipTo element from the OrderRequest document),
    payTo (where payment for this order should be sent), billTo (echoing
    the BillTo element from the OrderRequest document), buyerCorporate
    (details the supplier has about the buying organization) and
    supplierCorporate.  It is not necessary to copy this information from
    the OrderRequest document: The Contact element should be used primarily
    to add information to that known about an order or to describe the
    sender of this particular confirmation.

    Elements in the Contact list may appear in any order.  A contact role
    (Contact@role attribute value) must not appear more than once within a
    ConfirmationHeader element.

    Elements in the Hazard list may appear in any order.  The same hazard
    should not be listed more than once in a ConfirmationHeader.  Each
    hazard listed at this level (in a ConfirmationHeader element) should
    apply to the entire order or all items mentioned in this confirmation.
    A ConfirmationRequest which updates the status of a single line item
    should not include Hazard elements in the ConfirmationItem element.

    The Comments element list may contain additional information about the
    status of the overall order (or the portion described in this
    confirmation) such as payment terms, additional detail on shipping
    terms and clarifications of the status.  For the last type of
    information, terms such as "backordered", "shipped" and "invalid" may
    be sensible.  All such data must be intended for human use.  The text
    in this list should describe this particular confirmation and not
    repeat Comments appearing in the OrderRequest.

    Elements in the Comments list may appear in any order.  The xml:lang
    attribute may have the same value in multiple Comments elements in the
    list.  The set of Comments with a particular xml:lang value should
    contain similar content to that for any other xml:lang value present in
    the list.

    On the other hand, the Extrinsic element list may be used to insert
    additional data about the order for application consumption.  These
    elements may include pre-defined keywords and values affecting workflow
    in the receiving system.

    Elements in the Extrinsic list may appear in any order.  An extrinsic
    type (Extrinsic@name attribute value) must not appear more than once
    within a ConfirmationHeader element.  A type may not be mentioned both
    in this list and in a particular ConfirmationStatus element.  (The
    ConfirmationHeader must not contain a default extrinsic value
    overridden at the lower level.)

    confirmID
        An (optional) identifier for this particular confirmation assigned
        by the supplier.  A user-visible and secondary (to the payloadID
        attribute of the cXML element) identifier for this document.  This
        value does not vary as a particular confirmation is updated.  That
        is, operation="update" documents describing the status of the same
        items in the same order would share a confirmID with the original
        operation="new" ConfirmationRequest.

        When the confirmID does not appear in an operation="new"
        ConfirmationRequest, it must not appear in a corresponding
        operation="update" document.  Links between these documents must be
        deduced using the DocumentReference element contained in the
        update's ConfirmationHeader and the payloadID attribute of the
        original or previous update.
    operation
        The (optional) operational mode of the confirmation document.
        Defaults to "new".

        An "update" confirmation allows a supplier to correct an error in a
        confirmation or to add additional information learned later.  In
        either case, an "update" document must be complete: All data from
        the original confirmation or a previous update should be discarded
        by the recipient.  A ConfirmationRequest document does not provide
        default data for a subsequent operation="update" document.  (This
        applies in particular to Hazard and Extrinsic elements, which
        should appear at either the header or item levels but not both.)

        The "completeness" requirement allows the information contained in
        a ConfirmationRequest to expand.  No restrictions are placed on
        including additional items that have not yet been referenced in a
        ConfirmationRequest in a operation="update" ConfirmationRequest.
        However, added items must not have been mentioned in another
        ConfirmationRequest unless all items from that (other) confirmation
        are now described in the consolidated document.  This protocol
        supports neither splitting confirmations (sending an
        operation="update" ConfirmationRequest document describing a subset
        of the items in an earlier version) nor partial consolidations of
        confirmations (sending an operation="update" ConfirmationRequest
        document that contains a subset of the information from another
        confirmation).

        An operation="update" ConfirmationRequest must contain the same
        confirmID (if any) as the previous version of the confirmation.
        When included, this attribute provides an unambiguous and direct
        connection between all versions of the confirmation.

        An operation="update" ConfirmationRequest must also include a
        DocumentReference element in the ConfirmationHeader.  (See above
        for more information on this element.)  This effectively sequences
        multiple versions of a confirmation and may provide the only link
        between those versions.  (See above under confirmID for more on the
        implications of leaving out that attribute.)  Other confirmations
        discarded through consolidations as described above are not
        explicitly referenced by the new, larger ConfirmationRequest
        document.

        A confirmation may not be deleted; the protocol does not include an
        operation="delete" option for this request.  Suppliers must replace
        incorrect or invalid confirmations with correct information.  A
        type="unknown" ConfirmationStatus will reset such information to
        its original state.  This covers the case of an error in accepting
        or rejecting an item that has not been researched.
    type
        The type of confirmation:
        accept
            The entire order is accepted as described in the referenced
            OrderRequest document.

            A document of this type may contain ConfirmationItem elements.
            If ConfirmationItem elements are present in the
            ConfirmationRequest document, they must contain only
            ConfirmationStatus elements of type="accept".
        allDetail
            This confirmation updates only those line items described in
            the following ConfirmationItem elements.  Line items not
            mentioned specifically in this document retain their current
            status.  Unlike the "detail" type (below), a confirmation of
            this type includes all information known by the supplier,
            whether or not it differs from the data provided in the
            original OrderRequest document.

            This type is provided for compatibility with current EDI and
            order entry tools (which commonly send the buyer a snapshot of
            an order in the supplier's systems).  Due to the reconciliation
            issues caused by confirmations of this type, it is recommended
            that use of this type be considered a "bridge" strategy
            suitable only for the short term.

            A document of this type must contain ConfirmationItem elements.
            The contained ConfirmationStatus elements must have types
            "allDetail", "reject" or "unknown".  "accept" , "detail" 
            or "backordered". status types are not allowed because they 
            conflict with the requirements of this document type.
        detail
            This confirmation updates only those line items described in
            the following ConfirmationItem elements.  Line items not
            mentioned specifically in this document retain their current
            states.  A confirmation of this type should include only
            information which differs from that in the original
            OrderRequest document.

            Later ConfirmationRequest documents that restore information
            provided in the OrderRequest should not include the variations
            described in an earlier ConfirmationRequest.  For example, the
            Tax element may appear in a ConfirmationStatus of one
            ConfirmationRequest and not in an update to that confirmation.
            This signifies that the original OrderRequest actually
            contained the correct charge.

            A document of this type must contain ConfirmationItem elements.
            The contained ConfirmationStatus elements may have any type
            except "allDetail".

        backordered
            The entire order is backordered.

            A document of this type may contain ConfirmationItem elements.
            If ConfirmationItem elements are present in the
            ConfirmationRequest document, they must contain only
            ConfirmationStatus elements of type="backordered".

        except
            The entire order is accepted as described in the referenced
            OrderRequest document with exceptions listed in the following
            ConfirmationItem elements.  Line items not mentioned
            specifically in this document are accepted without change.

            A document of this type must contain ConfirmationItem elements.
            The contained ConfirmationStatus elements may have any type
            except "allDetail".
        reject
            The entire order is rejected.  No further (line item) detail is
            provided beyond the reason described in the Comments element.

            A document of this type must not contain ConfirmationItem
            elements.

        requestToPay
            This type of confirmation is for the supplier to request the
            initiation of payment transactions for either the whole
            order or some line items.

            If the request contains no ConfirmationItem elements, the intent
            will be to initiate payment transaction on the total amount of
            all line items in the order, except those being rejected.

            If the request contains ConfirmationItem elements, payment
            transaction will be initiated against the specified items and
            quantities.

            A ConfirmationItem in this type of request does not have to
            describe the complete line item. It should only contain
            "requestToPay" ConfirmationStatus elements for new payment
            transactions.

        replace
            The entire order is replaced.  This is used by supplier to
            perform a wholesale replacement of the order.  In the case
            that a changed order is sent from Buyer before this
            OrderConfirmation is received by Buyer, Supplier should
            accept the new changed order.  ConfirmationItems in this
            type of request must contain ConfirmationStatus elements
            only of type "detail", and each ConfirmationStatus element
            must include an ItemIn element.

    noticeDate
        The date and time this confirmation was created.
    invoiceID
        An optional supplier-generated identifier for an Invoice associated
        with the items described in this confirmation.  Identical to the
        Invoice Number which appears at the top of a physical Invoice.
    incoTerms
        Optional shipping terms as defined by the International Chamber of
        Commerce.  These terms inform the buyer which portion of the
        shipping charges are their responsibility.  Allowed values include:
            cfr - Cost and freight
            cif - Cost, insurance and freight
            cip - Carriage and insurance paid to
            cpt - Carriage paid to
            daf - Delivered at frontier
            ddp - Delivered duty paid
            ddu - Delivered duty unpaid
            deq - Delivered ex quay (duty paid)
            des - Delivered ex ship
            exw - Ex works
            fas - Free alongside ship
            fca - Free carrier
            fob - Free on board vessel
    version
        The version number for this confirmation. It should start with 1 and
        should be incremented by 1 for each subsequent version (2,3,4...).
    IdReference
        Internal Reference Number/Supplier Reference Number can be one of the following
                Internal supplier number - This is the most common scenario; it represents the document number created by the internal supplier ERP system.
                Contract - The contract number can be used to identify that a specific outbound document is related to a specific contract.
                Internal criteria - Sometimes the supplier can enter a customized value in the field Supplier Reference Number. Example: It can be the name of the person in charge of the follow-up of the transaction.
-->
<!ELEMENT ConfirmationHeader (DocumentReference?, Total?, Shipping?,
                              Tax?, Contact*, Hazard*, Comments*,
                              IdReference*, Extrinsic*)>
<!ATTLIST ConfirmationHeader
    confirmID            %string;                        #IMPLIED
    operation            (new | update)                  "new"
    type (accept | allDetail | detail | backordered | except | reject | requestToPay | replace)
                                                         #REQUIRED
    noticeDate           %datetime.tz;                   #REQUIRED
    invoiceID            %string;                        #IMPLIED
    incoTerms (cfr | cif | cip | cpt | daf | ddp | ddu | deq | des | exw |
               fas | fca | fob)                          #IMPLIED
    version              %uint;                          #IMPLIED
>

<!--
    Information about a specific line item.  Must completely describe the
    status of the referenced line item.  For example, two
    ConfirmationRequest documents may be necessary to update the status of
    an entire order.  However, a particular item must be mentioned in only
    one of these documents.

    A particular line item from an order must not be mentioned in more than
    one ConfirmationItem element.

    Any Contact elements provided at this level describe contacts specific
    to this item.  The ConfirmationHeader description mentions roles
    appropriate at this level as well.  A particular Contact role must not
    appear in both the ConfirmationItem and ConfirmationHeader elements.

    Elements in the Contact list may appear in any order.  A contact role
    (Contact@role attribute value) must not appear more than once within a
    ConfirmationItem element.

    Elements in the Hazard list may appear in any order.  The same hazard
    should not be listed more than once in a ConfirmationItem.  Each hazard
    listed at this level (in a ConfirmationItem element) must apply to the
    this specific line item.  A ConfirmationRequest which updates the
    status of a single line item should not include Hazard elements in the
    ConfirmationItem element.

    The list of ConfirmationStatus elements may appear in any order.
    However, the described quantities must sum to the quantity of the
    containing ConfirmationItem element (after any conversions required by
    use of different UnitOfMeasure scales at each level).  This ensures the
    status of a particular line item is completely described in a
    ConfirmationRequest document.

    quantity
        Number of this line item which was ordered.  Expressed in the units
        given in the UnitOfMeasure element.  Copied directly from the
        corresponding line item (ItemOut) in the document referenced in the
        OrderReference element.
    lineNumber
        Position (counting from 1) of this item in an order.  Copied
        directly from the corresponding line item (ItemOut) in the document
        referenced in the sibling OrderReference element.
    parentLineNumber
        lineNumber of the parent line item in the order confirmation request.
    itemType
        specify whether the line item contains child line items or acts as a child item
	compositeItemType
		specify type of parent line item(lot/box)
-->
<!ELEMENT ConfirmationItem
    (UnitOfMeasure, Contact*, Hazard*, ConfirmationStatus+)>
<!ATTLIST ConfirmationItem
    quantity             %r8;                  #REQUIRED
    lineNumber           %uint;                #REQUIRED
    parentLineNumber     %uint;                #IMPLIED
    itemType             %lineItemType;        #IMPLIED
	compositeItemType		%compositeItemType;		#IMPLIED
>

<!--
    Confirmation status of a specific line item or portion thereof.
    Quantities at this level must sum to that in the containing
    ConfirmationItem.  Documents should use a consistent UnitOfMeasure in
    ConfirmationItem and contained ConfirmationStatus elements.  A
    substitution (replacement item) may use a different UnitOfMeasure in
    the ItemDetail contained within the ItemIn element.

    In the normal case (for simple acceptance or rejection of this item),
    the ConfirmationStatus element would contain only a UnitOfMeasure
    element and the quantity and type attributes.  ItemIn appears in this
    element if and only if the supplier is recommending a substitution or
    the type is "allDetail".  In that case, the quantity of the ItemIn
    element must match that of the containing ConfirmationStatus unless the
    UnitOfMeasure is different.  ItemDetail must appear inside ItemIn
    whenever ItemIn appears in this context.  That is, an ItemIn element in
    a ConfirmationStatus element must contain an ItemDetail element.

    UnitPrice, Tax and Shipping amounts may be updated (included in the
    ConfirmationStatus element with new values) without a complete part
    substitution.  It is not necessary to copy this information from the
    OrderRequest document: UnitPrice, Tax and Shipping should not be
    included if they match that in the original ItemOut element.  The
    addition of tax or shipping amounts not mentioned in the original order
    may appear when the type is "accept", "allDetail" or "detail".  The
    "accept" type should be used if these additions are the only changes
    from the order.  The "detail" type implies a substitution (presence of
    the ItemIn element), price change (presence of the UnitPrice element)
    or delayed shipment (presence of the deliveryDate attribute).
    Unfortunately, the "allDetail" type requires reconciliation software to
    determine what has changed since the original order.

    The Comments element list may contain additional information about the
    status of this portion of the item such clarifications of the type
    attribute.  Terms such as "backordered", "shipped" and "invalid" may be
    sensible.  All such data must be intended for human use.

    Elements in the Comments list may appear in any order.  The xml:lang
    attribute may have the same value in multiple Comments elements in the
    list.  The set of Comments with a particular xml:lang value should
    contain similar content to that for any other xml:lang value present in
    the list.

    On the other hand, the Extrinsic element list may be used to insert
    additional data about this particular item portion for application
    consumption.  These elements may include pre-defined keywords and
    values affecting workflow in the receiving system.

    Elements in the Extrinsic list may appear in any order.  An extrinsic
    type (Extrinsic@name attribute value) must not appear more than once
    within a ConfirmationStatus element.  A type may not be mentioned both
    in this list and in the overall ConfirmationHeader element.  (The
    ConfirmationHeader must not contain a default extrinsic value
    overridden at this lower level.)

    SupplierBatchID
        SupplierBatch is the batch ID provided by the supplier at the line item quantity level
        to identify  the batch in which the item or the product was produced. The batch id is helpful in tracebility.
        Batch numbers (also call "lot number", "variant") are used in several industries to uniquely identify  items produced together.

    quantity
        Number of this line item which has this status.  Expressed in the
        units given in the UnitOfMeasure element.
    type
        The status of this particular portion of the order:
        accept
            This portion of the line item is accepted as described in the
            referenced ItemOut element.

            This type is allowed in documents with overall
            (ConfirmationHeader) types "accept", "detail" or "except".
        allDetail
            This portion of the line item is accepted as detailed in the
            contents of this ConfirmationStatus element.  These contents
            completely describe what will be shipped.  Unlike the "detail"
            type (below), a confirmation of this type includes all
            information known by the supplier, whether or not it differs
            from the data provided in the original OrderRequest document.

            This type is provided for compatibility with current EDI and
            order entry tools (which commonly send the buyer a snapshot of
            an order in the supplier's systems).  Due to the reconciliation
            issues caused by confirmations of this type, it is recommended
            that use of this type be considered a "bridge" strategy
            suitable only for the short term.

            This type is allowed only in documents with overall
            (ConfirmationHeader) type "allDetail".
        detail
            This portion of the line item is accepted with the changes
            detailed in the contents of this ConfirmationStatus element.
            At least one of the UnitPrice, Shipping, Tax or ItemIn elements
            or the deliveryDate attribute must be present.

            This type is allowed in documents with overall
            (ConfirmationHeader) types "detail", "except" or "replace".

        backordered
            This portion of the line item is backordered.

            This type is allowed in documents with overall
            (ConfirmationHeader) types "backordered", "detail" ,"except",
            and "allDetail". "shipmentDate" and "deliveryDate" attributes for 
            this type of ConfirmationStatus are optional. The rest of elements
            for this type of ConfirmationStatus are ignored.

        reject
            This portion of the line item is rejected.

            This type is allowed in documents with overall
            (ConfirmationHeader) types "allDetail", "detail" or "except".
        requestToPay
            A requestToPay is being asked about this portion of the line
            item. Request-to-pay will initiate a request to the financial
            institution to begin the settlement process of the portion of
            the line item.

            This type is allowed in documents with overall request
            (ConfirmationHeader) type "requestToPay".
        unknown
            The status of this portion of the line item is not known at
            the time of this confirmation.  This line item status may
            provide a "placeholder" while the supplier does further
            research.  Update confirmations may also reset the status of a
            line item portion to "unknown" when an earlier confirmation
            (incorrectly) accepted or rejected that portion.

            This type is allowed in documents with overall
            (ConfirmationHeader) types "allDetail", "detail" or "except".
    shipmentDate
        The date and time this shipment is expected to leave the supplier.
        A ConfirmationStatus element should include this information if the
        type is "accept", "allDetail" or "detail".
    deliveryDate
        The date and time this shipment is expected to arrive.  Should not
        be included if the value matches that of the requestedDeliveryDate
        attribute (if any) in the corresponding OrderRequest document.
        Otherwise, a ConfirmationStatus element should include this
        information if its type is "accept", "allDetail" or "detail".
-->
<!ELEMENT ConfirmationStatus (UnitOfMeasure, (ItemIn | (UnitPrice?, Tax?,
                              Shipping?)), SupplierBatchID?, Comments*, Extrinsic*)>
<!ATTLIST ConfirmationStatus
    quantity             %r8;                             #REQUIRED
    type (accept | allDetail | detail | backordered | reject | unknown | requestToPay)
                                                          #REQUIRED
    shipmentDate         %datetime.tz;                    #IMPLIED
    deliveryDate         %datetime.tz;                    #IMPLIED
>

<!-- ====
    ShipNotice* transaction forwards ship notice data in the Request.  No
    specific Response document is required for this transaction.  Servers
    must respond to a ShipNoticeRequest with a generic Response document.
==== -->

<!--
    Request to add shipment information to the data known about an order at
    the receiving server.

    Shipments with multiple responsible carriers may be described in one of
    two ways:
    1. A single carrier (or third-party logistics provider) creates a
       tracking identifier that may be used to retrieve information about
       the entire trip.  Suppliers send such information in a single
       ShipControl element.  Optionally, they may use Route elements to
       describe lower-level carriers.
    2. Separate tracking numbers are required for each segment.  Suppliers
       send such information with one ShipControl element per segment.

    ShipControl elements must appear in the order the shipment will travel.
    The first such element must not have an explicit starting date (the
    ShipControl@startDate attribute must not be present) and that carrier's
    control must begin at the shipment's origination time
    (ShipNoticeHeader@shipmentDate attribute value).  All later ShipControl
    elements must have increasing (later) starting dates
    (ShipControl@startDate attribute value).

    ShipNoticePortion elements may appear in any order.  A particular order
    (ShipNoticePortion/OrderReference/DocumentReference@payloadID attribute
    value) must not appear more than once in a ShipNoticeRequest element.

    Note: Many elements and attributes in the ShipNoticeRequest and
    ShipNoticeHeader elements are optional only for the operation="delete"
    case.  For other operations, one or more ShipControl and
    ShipNoticePortion elements must appear in a ShipNoticeRequest element.
-->
<!ELEMENT ShipNoticeRequest
    (ShipNoticeHeader, ShipControl*, ShipNoticePortion*)>

<!--
    Information about this ship notice that's common to all contained
    items.

    One or more ServiceLevel elements must appear in all ShipNoticeRequest
    documents except when operation="delete" is specified.  Each
    ServiceLevel must contain a single string corresponding to the level of
    service (such as "overnight") provided by the carrier for this
    shipment.  When multiple ServiceLevel elements appear, all must
    describe the same level of service in different languages or locales.
    (No two ServiceLevel elements may have the same xml:lang attribute.)
    Elements in such a list may appear in any order.

    The contained DocumentReference element may appear in a document only
    when the operation is "update" or "delete".  In that case, the
    DocumentReference is required and it must reference the most recent
    ShipNoticeRequest document for this particular ship notice (also
    indicated by a common shipmentID).  For example when a ship notice is
    created, updated and then updated again, the final document must
    contain a DocumentReference referring to the previous ShipNoticeRequest
    with operation="update".  That document must, in turn, refer to the
    original (operation="new") ShipNoticeRequest document.

    Contact roles may usefully include: technicalSupport, customerService,
    sales, shipFrom (starting point for this shipment), shipTo (should echo
    the ShipTo element from the OrderRequest documents), buyerCorporate
    (details the supplier has about the buying organization) and
    supplierCorporate.  It is not generally necessary to copy information
    from the various OrderRequest documents: The Contact element should be
    used primarily to add information to that known about an order.

    Elements in the Contact list may appear in any order.  A contact role
    (Contact@role attribute value) must not appear more than once within a
    ShipNoticeHeader element.

    Elements in the Hazard list may appear in any order.  The same hazard
    should not be listed more than once in a ShipNoticeHeader.  Each hazard
    listed at this level (in a ShipNoticeHeader element) should apply to
    the entire shipment or all items contained in this shipment.  A
    ShipNoticeRequest for a single line item should not include Hazard
    elements in the ShipNoticeItem element.

    The Comments element list may contain additional information about the
    shipment.  In this context (the ShipNoticeHeader), that information
    must be common to all contained items and routes.  All such data must
    be intended for human use. This information could also include a reason 
    for shipment to indicate rush orders for example. 

    The Comments element list may also contain structured comments with 
    type as "ReasonForShipment" to describe any specific reason for this shipment
    and with type as "TransitDirection" to specify transit direction.
    Reason for shipment is typically specified with replace/partial shipments to
    let the buyer know about the need of the shipment.
    
    Elements in the Comments list may appear in any order.  The xml:lang
    attribute may have the same value in multiple Comments elements in the
    list.  The set of Comments with a particular xml:lang value should
    contain similar content to that for any other xml:lang value present in
    the list.

    On the other hand, the Extrinsic element list may be used to insert
    additional data about the shipment for application consumption.  These
    elements may include pre-defined keywords and values affecting workflow
    in the receiving system.

    Elements in the Extrinsic list may appear in any order.  An extrinsic
    type (Extrinsic@name attribute value) must not appear more than once
    within a ShipNoticeHeader element.  A type may not be mentioned both in
    this list and in a particular ShipControl or ShipNoticePortion element.
    (The ShipNoticeHeader must not contain a default extrinsic value
    overridden at either lower level.)

    shipmentID
        An identifier for this particular shipment assigned by the
        supplier.  A user-visible and secondary (to the payloadID attribute
        of the cXML element) identifier for this document.  This value does
        not vary as a particular ship notice is updated.  That is,
        operation="update" or operation="delete" documents describing the
        same shipment must share a shipmentID with the original
        operation="new" ShipNoticeRequest.
    operation
        The (optional) operational mode of ship notice document.  Defaults
        to "new".

        An "update" ship notice allows a supplier to correct an error in a
        ship notice or to add additional information learned later.  In
        either case, an "update" document must be complete: All data from
        the original should be discarded by the recipient.

        A "delete" ship notice removes the changes described in the
        previous ShipNoticeRequest (either operation="new" or a previous
        update) from the state of the shipment.  This operation should be
        used only when the supplier discards a planned shipment or
        incorrectly sends a ShipNoticeRequest about a shipment that will
        not take place.

        An "update" or "delete" ship notice must have the same shipmentID
        as the previous version of the notice.  This provides an
        unambiguous and direct connection between all versions of the ship
        notice.

        If the operation is not "new" (explicitly or by default), the
        ShipNoticeRequest must also include a DocumentReference element in
        the ShipNoticeHeader.  (See above for more information on this
        element.)  This effectively sequences multiple versions of a ship
        notice.
    noticeDate
        The date and time this ship notice was created.
    shipmentDate
        The date and time this shipment left the supplier.  This attribute
        must appear in all ShipNoticeRequest documents except when
        operation="delete" is specified. This can be an actual or an estimated 
        date based on shipmentType attribute.
    deliveryDate
        The date and time this shipment is expected to arrive.  While this
        value may default to the requestedDeliveryDate of a single order,
        that attribute is optional in an OrderRequest document and the
        ShipNoticeRequest may refer to multiple OrderRequest documents.
        This attribute must appear in all ShipNoticeRequest documents
        except when operation="delete" is specified. This can be an actual 
        or an estimated date based on shipmentType attribute.
    shipmentType
        The type of this shipment. The value can be "actual" or "planned"
        depending on whether this notice is being created for actual shipment
        or an estimated one. This attribute also decides whether shipmentDate 
        and deliveryDate attributes hold actual or estimated dates.
    fulfillmentType
        The type of fulfillment, for which this shipment notice is created.
        The value of this attribute can be "partial" if all the items are
        not being shipped and "complete" if the whole order is being shipped.
    requestedDeliveryDate
        The date on which the items were requested to be delivered.
-->
<!ELEMENT ShipNoticeHeader (ServiceLevel*, DocumentReference?, Contact*,
                            Hazard*, Comments*, TermsOfDelivery?, TermsOfTransport*, Packaging?, Extrinsic*, IdReference*)>
<!ATTLIST ShipNoticeHeader
    shipmentID           %string;              #REQUIRED
    operation          (new | update | delete) "new"
    noticeDate           %datetime.tz;         #REQUIRED
    shipmentDate         %datetime.tz;         #IMPLIED
    deliveryDate         %datetime.tz;         #IMPLIED
    shipmentType       (actual | planned)      #IMPLIED
    fulfillmentType    (partial | complete)    #IMPLIED
    requestedDeliveryDate  %datetime.tz;  #IMPLIED
>

<!--
    One language-specific string for the service level code.  Each
    ServiceLevel must contain a string (in the specified language)
    corresponding to the level of service (such as "overnight") provided by
    the carrier for this shipment.

    xml:lang
        The language or locale in which the ServiceLevel content (the name
        of the service level) is written.
-->
<!ELEMENT ServiceLevel (#PCDATA)>              <!-- string -->
<!ATTLIST ServiceLevel
   xml:lang              %xmlLangCode;         #REQUIRED
>

<!--
    Carrier responsible for some portion of the shipment.  The shipment
    will be tracked using the identifiers provided at this level.  Those
    identifiers should be valid from the startDate of one ShipControl
    element or the shipment's shipmentDate until the startDate of the next.

    The CarrierIdentifier list may include multiple identifiers for the
    same carrier.  Elements in this list may appear in any order.  A
    particular identification domain (CarrierIdentifier@domain attribute
    value) must not appear more than once in a ShipControl element.  The
    identification provided by all elements of the CarrierIdentifier list
    must correspond to the same company.

    If present, Route elements must be in the order the shipment will
    travel.

    The only Contact roles likely to be sensible in this element are
    "carrierCorporate" (details the contact information the supplier has
    about the carrier organization) and "shipFrom".  A Contact element with
    role "shipFrom" must appear in all ShipControl elements after the
    first.  This role must not appear in the first ShipControl element
    since it would duplicate that role in the overall ShipNoticeHeader
    element.  Since a Contact with role "shipTo" would always duplicate
    information in the following ShipControl element or that role in the
    ShipNoticeHeader, such a Contact must not appear in this element.  In
    essence, control passes from one carrier to another at a particular
    location and (estimated) time.

    Elements in the Contact list may appear in any order.  A contact role
    (Contact@role attribute value) must not appear more than once within a
    ShipControl element.

    The Comments element list may contain additional information about the
    shipment while under the control of this carrier.  In this context (the
    ShipControl element), that information must be common to all contained
    routes or make it clear which Route is affected.  All such data must be
    intended for human use.

    Elements in the Comments list may appear in any order.  The xml:lang
    attribute may have the same value in multiple Comments elements in the
    list.  The set of Comments with a particular xml:lang value should
    contain similar content to that for any other xml:lang value present in
    the list.

    On the other hand, the Extrinsic element list may be used to insert
    additional data about this carrier or their period of responsibility
    for application consumption.  These elements may include pre-defined
    keywords and values affecting workflow in the receiving system.

    Elements in the Extrinsic list may appear in any order.  An extrinsic
    type (Extrinsic@name attribute value) must not appear more than once
    within a ShipControl element.  A type may not be mentioned both in this
    list and in the overall ShipNoticeHeader element.  (The
    ShipNoticeHeader must not contain a default extrinsic value overridden
    at this lower level.)

    startDate
        The date and time this shipment started this part of the route.
        Required for all ShipControl elements after the first.  This
        attribute must not appear in the first ShipControl element since it
        would duplicate the ShipNoticeHeader's shipmentDate attribute.
-->
<!ELEMENT ShipControl (CarrierIdentifier+, ShipmentIdentifier+,
                       PackageIdentification?, (Route|TransportInformation)*, Contact*, Comments*,
                       Extrinsic*)>
<!ATTLIST ShipControl
    startDate            %datetime.tz;         #IMPLIED
>

<!--
    Identifiers which appear on the containers, skids, boxes or packages
    that constitute the shipment.  The range of numbers described is
    inclusive at both extremes.

    rangeBegin
        Earliest number appearing on the separate elements in this
        shipment.
    rangeEnd
        Highest number appearing on the separate elements in this
        shipment.  Must be greater than or equal to rangeBegin.
-->
<!ELEMENT PackageIdentification EMPTY>
<!ATTLIST PackageIdentification
    rangeBegin           %uint;                #REQUIRED
    rangeEnd             %uint;                #REQUIRED
>

<!--
    Purchase order and item data.  Answers the question: What's coming in
    this shipment?

    A particular OrderRequest (via the OrderReference element) must not be
    mentioned in more than one ShipNoticePortion element.  While multiple
    shipments may be sent for one order, a ship notice must mention each
    order only once.

    MasterAgreementReference or MasterAgreementIDInfo can be used to identify 
    the corresponding scheduling agreement if the ship notice is generated
    from a scheduling agreement release.

    Any Contact elements provided at this level describe contacts specific
    to this order.  The ShipNoticeHeader description mentions roles
    appropriate at this level as well, though shipFrom, shipTo,
    buyerCorporate and supplierCorporate information should not vary at
    this level.  A particular Contact role must not appear in both the
    ShipNoticePortion and ShipNoticeHeader elements.  Therefore, roles such
    as technicalSupport, customerService and sales are most appropriate
    within the ShipNoticePortion.

    Elements in the Contact list may appear in any order.  A contact role
    (Contact@role attribute value) must not appear more than once within a
    ShipNoticePortion element.

    The Comments element list may contain additional information about the
    order in this shipment.  In this context (the ShipNoticePortion
    element), that information must be common to all contained items or
    make it clear which ShipNoticeItem is affected.  All such data must be
    intended for human use.

    Elements in the Comments list may appear in any order.  The xml:lang
    attribute may have the same value in multiple Comments elements in the
    list.  The set of Comments with a particular xml:lang value should
    contain similar content to that for any other xml:lang value present in
    the list.

    On the other hand, the Extrinsic element list may be used to insert
    additional data about this order for application consumption.  These
    elements may include pre-defined keywords and values affecting workflow
    in the receiving system.

    Elements in the Extrinsic list may appear in any order.  An extrinsic
    type (Extrinsic@name attribute value) must not appear more than once
    within a ShipNoticePortion element.  A type may not be mentioned both
    in this list and in the overall ShipNoticeHeader element.  (The
    ShipNoticeHeader must not contain a default extrinsic value overridden
    at this lower level.)

    If a ShipNoticePortion element contains no ShipNoticeItem elements, the
    entire referenced order is included in the shipment.  Note: This
    simplifying option prevents inclusion of hazard and packaging
    information.
-->
<!ELEMENT ShipNoticePortion
    (OrderReference, (MasterAgreementReference | MasterAgreementIDInfo)?,  Contact*, Comments*, Extrinsic*, ShipNoticeItem*)>

<!--
    Portion of a specific line item that is part of this shipment.

    A line item from an order must not be mentioned in more than one
    ShipNoticeItem element.  While additional quantities of an item may be
    shipped separately, a single ship notice must describe each item only
    once.

    Elements in the Hazard list may appear in any order.  The same hazard
    should not be listed more than once in a ShipNoticeItem.  Each hazard
    listed at this level (in a ShipNoticeItem element) must apply to this
    specific line item.  A ShipNoticeRequest for a single line item should
    not include Hazard elements in the ShipNoticeItem element.
    
    ShipNoticeItemDetail contains detailed information about an item. All the data that
    a user would want to see about an item instead of the bare essentials.
    In a ship notice the item details are inherited from the purchase order 
    that is referenced. For ship notices without order reference the item details 
    can be retrieved from this section.

    Batch
    An element carrying batch information for material or goods  produced
    in a single manufacturing run.

    SupplierBatchID
        SupplierBatch is the batch ID provided by the supplier at the line item quantity level 
        to identify  the batch in which the item or the product was produced. The batch id is helpful in tracebility.
        Batch numbers (also call "lot number", "variant") are used in several industries to uniquely identify  items produced together.

    ComponentConsumptionDetails
        Contains detailed information about consumption of components in the manufacturing of final product.

    quantity
        Number of this line item which was shipped.  Expressed in the units
        given in the UnitOfMeasure element.
    lineNumber
        Position (counting from 1) of this item in an order.  Copied
        directly from the corresponding line item (ItemOut) in the document
        referenced in the sibling OrderReference element.        
    parentLineNumber
       	lineNumber of the parent line item in the ship notice.
    shipNoticeLineNumber
       holds the ship notice line number, used in contexts where there are multiple ship notice line items for a single purchase order line items
    itemType
        specify whether the line item contains child line items or acts as a child item
	compositeItemType
		specify type of parent line item(lot/box)


-->
<!ELEMENT ShipNoticeItem (ItemID?, ShipNoticeItemDetail?,  UnitOfMeasure, Packaging*, Hazard*, (Batch | SupplierBatchID)?,
				AssetInfo*, TermsOfDelivery?, OrderedQuantity?, ShipNoticeItemIndustry?, ComponentConsumptionDetails*, Extrinsic*)>
<!ATTLIST ShipNoticeItem
    quantity             %r8;                  #REQUIRED
    lineNumber           %uint;                #REQUIRED
    parentLineNumber     %uint;                #IMPLIED
    shipNoticeLineNumber     %uint;          #IMPLIED
    itemType             %lineItemType;        #IMPLIED
	compositeItemType		%compositeItemType;		#IMPLIED
>


<!--
    ShipNoticeItemDetail contains detailed information about an item. All the data that
    a user would want to see about an item instead of the bare essentials
    that are represented in the ItemID.
  
In a ship notice the item details are inherited from the purchase order that is referenced. For ship notices without order reference the item details can be retrieved from this section.

UnitPrice
    Price per unit of item.  Optional Modifications 
    (changes due to discounts or fixed amount) may be provided.

Description
    Description is a string which describes something.

UnitOfMeasure
   Must be a UN/CEFACT (Recommendation 20) unit of measure code.

PriceBasisQuantity
    Define the quantity as quoted in the UnitPrice

Classification
    Classification is used to group items into similar categories.

ManufacturerPartID
    ID with which the item's manufacturer identifies the item.

ManufacturerName
    Name of the item's manufacturer.

Dimension
    Item dimensions.
    
ItemDetailIndustry
    Industry  specfic item detail information.
-->
<!ELEMENT ShipNoticeItemDetail (UnitPrice?, Description*, UnitOfMeasure?,     PriceBasisQuantity?, Classification*, ManufacturerPartID?,
                      ManufacturerName?, Dimension*, ItemDetailIndustry?, Extrinsic*)>


<!--
    Defines the header information of a ServiceEntryRequest.

    PartnerContact
        All parties involved in this service entry sheet, including fieldContractor,
        fieldEngineer and requester.
    
	DocumentReference        
		The DocumentReference is optional and, if it is provided, it must reference 
		the ServiceEntryRequest which is related to the current ServiceEntryRequest.
	
	DocumentInfo
        ID of a document entry known to the system. This attribute is used to reference 
		a document when DocumentReference is omitted. If both DocumentReference and 
		DocumentInfo are provided, they must refer to the same ServiceEntryRequest.

    ServiceEntryDetailLineIndicator
        Header level indicators indicating certain information is
        provided at SES line level (in ServiceEntryItem).
	
    ServiceEntryDetailShipping
        The shipping details related with SES(auto-generate invoice).  It will be ignored if
        isShippingInLine is true.
	
	ShipNoticeIDInfo
       References shipment related document identifiers.
	
	PaymentTerm
        This defines the payment terms for this invoice.
	
    Period
        The total time period during which all the services specified in this service
        entry sheet were rendered. Period at the header level does not imply anything
        about the Period at the line level.

    Comments
        Comment text for this service entry sheet.

    Extrinsic
        Additional information related to this service entry sheet.  Extrinsic should not
        duplicate any information in ServiceEntryRequestHeader or ServiceEntryRequest.

    serviceEntryDate
        The date and time when this service entry sheet was created, which should be
        earlier than the document's timestamp.

    serviceEntryID
        A supplier-generated identifier for this service entry sheet, identical to the
        SES Number which appears at the top of a physical service entry sheet.

    supplierReferenceNumber
		An internal reference to the supplier of this service entry sheet..

operation
        How this document is acting on the service entry sheet:
        new - This document creates a new service entry sheet.
        delete - This document cancels an existing service entry sheet.  That existing
        service entry sheet must be specified as DocumentReference.
        By default, it is "new".

    IdReference
        Internal Reference Number/Supplier Reference Number can be one of the following
                Internal supplier number - This is the most common scenario; it represents the document number created by the internal supplier ERP system.
                Contract - The contract number can be used to identify that a specific outbound document is related to a specific contract.
                Internal criteria - Sometimes the supplier can enter a customized value in the field Supplier Reference Number. Example: It can be the name of the person in charge of the follow-up of the transaction.

-->
<!ELEMENT ServiceEntryRequestHeader (PartnerContact*,
                                     (DocumentReference | DocumentInfo)?,
                                     ServiceEntryDetailLineIndicator?,
                                     ServiceEntryDetailShipping?,
                                     ShipNoticeIDInfo?,
                                     PaymentTerm*,
                                     Period?,
                                     Comments?,
                                     IdReference*,
                                     Extrinsic*)>
<!ATTLIST ServiceEntryRequestHeader
    serviceEntryDate   %datetime.tz;        #REQUIRED
    serviceEntryID     %string;             #REQUIRED
    supplierReferenceNumber     %string; 	#IMPLIED
    operation     (new | delete)            "new"
>


<!--
    Defines information related to a purchase order.

    The various content options for ServiceEntryOrderInfo are in order
    of preference. For example, OrderReference is strongly recommended.
    If OrderReference is not available, OrderIDInfo should be used in that order.

    OrderReference
        The reference to the purchase order for the service.

    OrderIDInfo
        The buyer system order ID for the purchase order for the service.

-->
<!ELEMENT ServiceEntryOrderInfo
    (OrderReference | OrderIDInfo)>



<!--
    Defines all references related to a line item in this service entry sheet.

    ItemID
		The service part number.

    IdReference
		Unique reference to part number.

    Classification
        The classification code for of the service.

    Description
        Textual description of the item.

    lineNumber
        The line number of the current line item referred to in OrderRequest.
        For planned item, this refers to the corresponding item in purchase order.
        For unplanned item, this refers to the parent item in purchase order.

-->
<!ELEMENT ItemReference (ItemID, IdReference*,Classification*, Description?)>
<!ATTLIST ItemReference
	lineNumber %uint; #REQUIRED
>


<!--
    Defines a line item in the ServiceEntryRequest.

    UnitRate
        The rate at which the service item is charged.
        Use of the UnitRate element is recommended over the plain (UnitOfMeasure, UnitPrice)
        pair, since the UnitRate element includes the rate code. For some services such as
        temporary labor services,  UnitRate is required.

    UnitOfMeasure
        The unit of measure.

    UnitPrice
        The unit price.
     
	PriceBasisQuantity
        The price basis quantity. 		
	 
    ItemReference
        The references related to this line item.

    MasterAgreementReference
        The reference to the corresponding contract master agreement if
        the order for the service is a release purchase order.

    MasterAgreementIDInfo
        The buyer's system ID for the corresponding contract master agreement if
        the order for the service is a release purchase order.

    Period
        The time period during which the service was rendered.

    SubtotalAmount
        The subtotal of the current item = unit price x serviced quantity.
	
	Tax
        The tax info for this line item.  It will be ignored if isTaxInLine
        is false.

	GrossAmount
        The SubtotalAmount plus taxes, shipping, and special handling
        charges.
	
	ServiceEntryDetailLineSpecialHandling
        The special handling info for this line item.  It will be ignored
        if isSpecialHandlingInLine is false.

    ServiceEntryDetailLineShipping
        The shipping info for this line item.  It will be ignored if
        isShippingInLine is false.

    ShipNoticeIDInfo
       References shipment related document identifiers.
	
	ServiceEntryDetailDiscount
        The discount info for this line item.  It will be ignored if
        isDiscountInLine is false.
	
	ServiceEntryItemModifications
        the additional Charges, Allowances and their Taxes that are 
        incurred for the total landed cost of the goods and service 
        contained in this SES item.
	
	TotalCharges
        The total sum of all the charges applied on the goods and 
        services at the line item level in an SES.

    TotalAllowances
        The total sum of all the allowances applied on the goods and
        services at the line item level in an SES.

    TotalAmountWithoutTax
        The total sum of the SubTotal, Charges (including special handling
        charges and shipping charges), Allowances (including discounts) 
        applied at the line item level in an SES. This does not include taxes.
    
    NetAmount
        The GrossAmount minus discount amount.
	
    Distribution
        Accounting distribution information, including cost center, GL#, etc.

    Comments
        Comment text for this line item.

    Extrinsic
        Additional information related to this line item.  Extrinsic should not
        duplicate anything in ServiceEntryItem or ServiceEntryOrder.

    serviceLineNumber
        The supplier-defined ID for the current service line, which should be
        unique for each service line in the same ServiceEntryRequest.

    quantity
        The quantity serviced for the current line item.

    type
        Specifies whether the current line item is material or service.
	    Valid values are material and service.
-->
<!ELEMENT ServiceEntryItem ( ItemReference,
                            (MasterAgreementReference | MasterAgreementIDInfo)?,
				            (UnitRate | (UnitOfMeasure, UnitPrice, PriceBasisQuantity?))?,
                            Period?, SubtotalAmount?,
                            Tax?, GrossAmount?,
                            ServiceEntryDetailLineSpecialHandling?,
                            ServiceEntryDetailLineShipping?, ShipNoticeIDInfo?,
                            ServiceEntryDetailDiscount?, ServiceEntryItemModifications?, 
                            TotalCharges?, TotalAllowances?, TotalAmountWithoutTax?, NetAmount?,
                            Distribution*, Comments*, Extrinsic*)>
<!ATTLIST ServiceEntryItem
    serviceLineNumber        %uint;         #REQUIRED
    quantity                 %r8;           #REQUIRED
    referenceDate            %datetime.tz;  #IMPLIED
    inspectionDate           %datetime.tz;  #IMPLIED
    type                 %serviceItemType;  #IMPLIED
>


<!--
    Defines the service information for a purchase order or contract master agreement
    with item details.

    In this case, a line in a service entry sheet is a ServiceEntryItem and its
    line number is ServiceEntryItem@serviceLineNumber.

    ServiceEntryOrderInfo
        The reference information for the purchase order or contract master agreement.

    ServiceEntryItem
        The information for an item in the purchase order.

-->
<!ELEMENT ServiceEntryOrder (ServiceEntryOrderInfo, ServiceEntryItem+)>


<!--
    Defines the summary information for a ServiceEntryRequest.

    SubtotalAmount
        The sum of amounts for all quantities.
		
	Tax
        Tax info.
	
	SpecialHandlingAmount
        Special handling charge.

    ShippingAmount
        Shipping charge.
		
	GrossAmount
        Sum of subtotal, taxes, special handling
        charges, and shipping charges, before discounts.
	
	ServiceEntryDetailDiscount
        The total discount applied in this ServiceEntryRequest.
        Its contained percentageRate attribute will be ignored
        if isDiscountInLine is true.
		
	ServiceEntryHeaderModifications
        the additional Charges, Allowances and their Taxes that are incurred
        for the total landed cost of the goods and services within SES
        header. This value specified at the header-level  is not the aggregated
        value towards the charges or allowances available for the line items.
	
	ServiceEntrySummaryLineItemModifications
		Summary of all modifications applied on the goods and services at the line item level in an service entry.
		
	TotalCharges
        The total sum of all the charges applied on the goods and services at 
        the header-level and  line item level in SES.

    TotalAllowances
        The total sum of all the allowances applied on the goods and services
        at the header-level and  line item level in SES.

    TotalAmountWithoutTax
        The total sum of the SubTotal, Charges (including special handling charges
        and shipping charges), Allowances (including discounts) applied at the 
        header-level and  line item level in SES. This does not include taxes.
	
	NetAmount
        Gross amount minus discounts.
		
	DepositAmount
        Total deposit/prepayment amount.

    DueAmount
        Total amount due and payable.  It equals NetAmount minus
        DepositAmount.  If ServiceEntryRequest@purpose is
        "creditMemo" or "lineLevelCreditMemo", this amount must be
        negative.  If ServiceEntryRequest@purpose is
        "debitMemo", this amount must be positive.

-->
<!ELEMENT ServiceEntrySummary (SubtotalAmount, Tax?, SpecialHandlingAmount?,
                               ShippingAmount?, GrossAmount?,
                               ServiceEntryDetailDiscount?, ServiceEntryHeaderModifications?, ServiceEntrySummaryLineItemModifications?,
                               TotalCharges?, TotalAllowances?, TotalAmountWithoutTax?, NetAmount?,
                               DepositAmount?, DueAmount?)>


<!--
    ServiceEntryRequest
    Transmits a service entry sheet request to a buyer, providing purchase order
    references, line item references, partners involved, etc.

    Suppliers can use a ServiceEntryRequest to send a service entry sheet for
    any or all selected line items from a purchase order.

    This document must be sent to the location specified in the buyer's
    ProfileResponse.

    ServiceEntryRequestHeader
        The header information for this service entry sheet.

    ServiceEntryOrder
        The service entry sheet information for a purchase order with item details.

    ServiceEntrySummary
        The summary information for this service entry sheet.
-->
<!ELEMENT ServiceEntryRequest (ServiceEntryRequestHeader, ServiceEntryOrder, ServiceEntrySummary)>

<!--
    Retail specific elements are now grouped under this new element structure.
    BestBeforeDate
	The best-before-date helps with in FDA-related deliveries for go/no-go criteria. This is a common element and hence can be found in the common proposal.
    ExpiryDate
	ExpiryDate is used mainly in retail industries for FDA-related deliveries for go/no-go criteria.
     FreeGoodsQuantity
	Quantities delivered but not charged for; those can be samples or promotions or just "fill up" articles; has financial impact because those will not be on the commercial invoice (or marked with value 0.00)  
      PromotionDealID
	Number assigned by a supplier to a special promotion activity. Promotions affect the forward planning/ordering process (and the related pricing). The definition can be found in the common proposal.
    
    PromotionVariantID
    Promotional variance info associated with the ship notice item.
-->
<!ELEMENT ShipNoticeItemRetail (BestBeforeDate?, ExpiryDate?, FreeGoodsQuantity?,  PromotionDealID?, PromotionVariantID?)>

<!--
    Industry specific elements are now grouped under this new element structure.
-->
<!ELEMENT ShipNoticeItemIndustry (ShipNoticeItemRetail?)>

<!--
    Defines discount applied.

    Money
        The total discount in dollar (or other currency) amount.

    percentageRate
        The discount rate in percentage.
-->
<!ELEMENT ServiceEntryDetailDiscount (Money)>
<!ATTLIST ServiceEntryDetailDiscount
    percentageRate          %r8;           #IMPLIED
>

<!--
    ServiceEntryItemModifications represents the additional Charges and Allowances
    that are incurred for the total landed cost of the goods and service 
    contained in this SES item.
 
    Modification
        provides the details of a Charge or an Allowance.
-->
<!ELEMENT ServiceEntryItemModifications (Modification+)>

<!--
    Defines the shipping information related to SES (auto-generated invoice).

    Contact
        The ship from and ship to addresses. Both ship from and ship to
        must be specified.  Allowed contact roles are shipFrom, shipTo and
        carrierCorporate.

    CarrierIdentifier
        This list may include multiple identifiers for the same carrier.
        Elements in this list may appear in any order.  A particular
        identification domain (CarrierIdentifier@domain attribute
        value) must not appear more than once in an ServiceEntryDetailShipping
        element.  The identification provided by all elements of the
        CarrierIdentifier list must correspond to the same company.

    ShipmentIdentifier
        The tracking number of this shipment or a bill of lading number,
        depending on the domain attribute.

    DocumentReference
        The reference to an earlier ShipNoticeRequest.

    shippingDate
        The date and time this shipment leaves the supplier.
-->
<!ELEMENT ServiceEntryDetailShipping (Contact, Contact+,
                                 (CarrierIdentifier+, ShipmentIdentifier+)?,
                                 DocumentReference?)>

<!--
    ServiceEntryHeaderModifications represents the additional Charges, Allowances 
    that are incurred for the total landed cost of the goods and services within 
    the SES header. This value specified at the header-level is not the aggregated 
    value towards the charges or allowances available for the line items.

    Modification
        provides the details of a Charge or an Allowance.
-->
<!ELEMENT ServiceEntryHeaderModifications (Modification+)>

<!--
    Defines SES line level indicators indicating certain
    information is provided at SES line level (in ServiceEntryDetailItem).
     By default, all indicators are false.

    If an indicator indicates certain information (e.g. tax, shipping, etc.)
    will be provided at SES line level, for SES lines which do
    not provide such information, they will be assumed to have values of
    zero, or "not available", whichever is appropriate, for that information.

    isTaxInLine
        True if tax info (Tax) is provided at SES line level.

    isSpecialHandlingInLine
        True if special handling info is provided at SES line level.

    isShippingInLine
        True if shipping info is provided at SES line level.

    isDiscountInLine
        True if discount info (ServiceEntryDetailDiscount) is provided
        at SES line level.

    isAccountingInLine
        True if accounting distribution info (Distribution) is provided at
        SES line level.
-->
<!ELEMENT ServiceEntryDetailLineIndicator EMPTY>
<!ATTLIST ServiceEntryDetailLineIndicator
    isTaxInLine                            (yes)      #IMPLIED
    isSpecialHandlingInLine                (yes)      #IMPLIED
    isShippingInLine                       (yes)      #IMPLIED
    isDiscountInLine                       (yes)      #IMPLIED
    isAccountingInLine                     (yes)      #IMPLIED
>

<!--
    Defines special handling information of the current SES line.

    Description
        Textual description of the special handling.

    Money
        The special handling amount.
-->
<!ELEMENT ServiceEntryDetailLineSpecialHandling (Description?, Money)>

<!--
    Defines shipping information of the current SES line.

    ServiceEntryDetailShipping
        The shipping details.

    Money
        The shipping amount.
-->
<!ELEMENT ServiceEntryDetailLineShipping (ServiceEntryDetailShipping, Money)>

<!--
    Defines information related to a summary of line modifications(allowances/charges) in Service Entry Sheet.

    Modification
        Summary of one modification.
-->	
<!ELEMENT ServiceEntrySummaryLineItemModifications (Modification+)><!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id: //ariba/cxml/release/schema/1.2.29.1+/Modules/Transport.mod#3 $
-->

<!--
    For better definitions of these Elements/Entities, refer to the cXML
    Protocol Specification documents.
-->

<!--
    Defines the set of known valid cXML digital signature versions
-->
<!ENTITY % cxml.signatureVersions "(1.0)">

<!--
    cXML envelope

    version
        Version of this cXML transmission.  Should be less than or equal
    to the version portion of the SYSTEM identifier for this document.

    payloadID
        A unique identifier for this document.

    timestamp
        The date and time at which this document was originally created.

    signatureVersion
        If present, specifies the cXML digital signature version to
        which this document conforms.  This implies that the
        ds:Signature element must be present.  It is an error if this
        attribute is present and the document does not conform to the
        specified signature version.  If absent, the document is not
        signed.

    xml:lang
        The default locale for all strings (not formatted items such as
    dates, times and numbers) in this document.  This attribute will be
    required in a future version of cXML.  (Leaving it out is
    deprecated.)
-->
<!ELEMENT cXML (((Header, (Message | Request)) | Response), ds:Signature*)>
<!ATTLIST cXML
    version    %string;       "&cxml.version;"
    payloadID  %string;       #REQUIRED
    timestamp  %datetime.tz;  #REQUIRED
    signatureVersion %cxml.signatureVersions; #IMPLIED
    xml:lang   %xmlLangCode;  #IMPLIED
>

<!-- header -->
<!ELEMENT Header (From, To, Sender, (Path, OriginalDocument)?)>

<!ELEMENT From (Credential+, Correspondent?)>
<!ELEMENT To (Credential+, Correspondent?)>
<!ELEMENT Sender (Credential+, UserAgent)>

<!--
    Path. A list of nodes that records the path taken by a user through 
    a punchout chaining scenario.

    If no route node is included then punchout chaining scenario is not executed and only copies are processed. 
-->
<!ELEMENT Path (Node+)>

<!--
    A Node is any entity connected to a Network.
    
    type
        A node can define itself as a router node or a copy node.  Routers
    assume responsibility for the transaction.  Copy Nodes request to only
    be aware of the transaction.
    
    itemDetailsRequired
        Intermediary Nodes may want to support special operations without
    having to store specific information required to fulfill that operation.
    This attribute tells the previous node to send ItemDetail information
    when performing a PunchOutSetupRequest edit/inspect operation.
-->
<!ELEMENT Node (Credential+)>
<!ATTLIST Node
    type (copy | route) #REQUIRED
    itemDetailsRequired (yes) #IMPLIED
>


<!--
    Identifies the previous document in the situation that a router node
    forwards a message or request on to a more distant node.
    
    payloadID
        The payloadId of the original document.
-->
<!ELEMENT OriginalDocument EMPTY>
<!ATTLIST OriginalDocument
    payloadID %string; #REQUIRED
>

<!--
    A textual string representing who the UserAgent is conducting the cXML
    conversation. Analogous to UserAgent for HTTP conversations.
-->
<!ELEMENT UserAgent (#PCDATA)>

<!--
    DEPRECATED 
    Do not use this element.
-->
<!ELEMENT DigitalSignature ANY>
<!ATTLIST DigitalSignature
    type      %string;  "PK7 self-contained"
    encoding  %string;  "Base64"
>

<!--
    A shared secret. Typically, this is a username/password type of secret
    exchanged through a secure transport before communication takes place.
-->
<!ELEMENT SharedSecret ANY>

<!--
    Represents an identity for a credential.

    lastChangedTimestamp
       When the underlying object last changed in the originating system.
       This is used in cases where the same object (e.g. a buyer
       organization) is replicated, and kept synchronized, across two
       systems.
-->
<!ELEMENT Identity ANY>
<!ATTLIST Identity
    lastChangedTimestamp  %datetime.tz;  #IMPLIED
>

<!--
    A Credential Message Authentication Code (MAC).  This is used in
    situations where one party (the sender) must prove to another (the
    receiver) that it is authenticated by a shared secret with a third
    party trusted by both.

    The MAC should be computed by the trusted third party and
    transferred to the sender.  The MAC should be opaque to the sender
    (i.e., it should be secure and non-reversible).  The MAC should
    use as its inputs enough information to accomplish the following
    goals:

    (1) The MAC must prove to the receiver that it really originated
    with the trusted third party.  E.g., the MAC could use a shared
    secret between the receiver and the trusted third party as its
    secret key.

    (2) The MAC should be usable only by a certain sender.  E.g., the
    MAC could authenticate an identifier for the sending organization.

    (3) The MAC should prove that the sender is authorized to send on
    behalf of the From organization.  E.g., the MAC could authenticate
    an identifier for the From organization.

    (4) The MAC should limit the risk of the MAC being compromised and
    used to impersonate the sender by another party communicating with
    the receiver.  E.g., the MAC could authenticate an expiration date
    or sequence number.

    type
        An implementation-dependent identifier for the exact data
        being authenticated and the method in which it is formatted
        for authentication.  Currently the only supported value is
        "FromSenderCredentials".

    algorithm
        An implementation-dependent identifier for the exact MAC
        algorithm used on the data.  Currently the only supported
        value is "HMAC-SHA1-96".

    creationDate
        The time at which this MAC was issued.  The receiver must not
        accept the MAC before this time.

    expirationDate
        The time at which this MAC expires.  The receiver must not
        accept the MAC after this time.
-->
<!ELEMENT CredentialMac (#PCDATA)>
<!ATTLIST CredentialMac
    type           %string;      #REQUIRED
    algorithm      %string;      #REQUIRED
    creationDate   %datetime.tz; #REQUIRED
    expirationDate %datetime.tz; #REQUIRED
>

<!--
    A combination of an Identity and authentication element. If the
    authentication element is present, it strongly authenticates who/what
    someone is.  The authentication element should not be sent within Message
    documents transported via an end user's browser.  One-way communication
    must be authenticated in the transport layer.

    domain
        In what domain is this Credential represented?
    type
        Does this Credential identify a marketplace or one of its member
        companies?  A Credential without this attribute describes a member
        company or unaffiliated buying organization.
-->
<!ENTITY % cxml.authentication  "SharedSecret |
                                 DigitalSignature |
                                 CredentialMac"
>
<!ELEMENT Credential (Identity, (%cxml.authentication;)?)>
<!ATTLIST Credential
    domain  %string;      #REQUIRED
    type    (marketplace) #IMPLIED
>

<!--
    Status of a Response or Message.  If present, the element content
    describes specifics of a problem.

    code
        HTTP or cXML-specific status code.

    text
        Textual version of the status code (not specific issue).

    xml:lang
        The language in which the text attribute and element content are
    written.  This attribute will be required in a future version of
    cXML.  (Leaving it out is deprecated.)
-->
<!ELEMENT Status (#PCDATA)>
<!ATTLIST Status
    code     %uint;        #REQUIRED
    text     %string;      #REQUIRED
    xml:lang %xmlLangCode; #IMPLIED
>

<!--
    Message

    When Status not present, '<Status code="200" text="OK" />' is implied.
-->
<!ELEMENT Message (Status? %cxml.messages;)>
<!ATTLIST Message
    deploymentMode  (production | test)  "production"
    inReplyTo       %string;  #IMPLIED
    Id              ID        #IMPLIED
>

<!-- request -->
<!ELEMENT Request (%cxml.requests;)>
<!ATTLIST Request
    deploymentMode  (production | test)  "production"
    Id              ID        #IMPLIED
>

<!-- response -->
<!ELEMENT Response (Status %cxml.responses;)>
<!ATTLIST Response
    Id              ID        #IMPLIED
>

<!--
    This element includes signed cXML-specific details about the
    document being signed.  When a cXML document is signed, this
    element must appear inside the first ds:Object element in the
    ds:Signature element.

    signatureVersion
        This specifies the cXML signature version to which this
        document conforms.  It is an error if this attribute value
        does not exactly match the value of the signatureVersion
        attribute from the top-level cXML element.  It is an error if
        the document does not conform to the specified cXML signature
        version.

    payloadID
        Specifies the payloadID of the document.  It is an error if
        the value of this attribute does not exactly match the value
        of the payloadID attribute from the top-level cXML element.

    Id
        This identifies this cXMLSignedInfo element for purposes of
        the signature.  This attribute must always be present and
        should always have the value "cXMLSignedInfo"

-->
<!ELEMENT cXMLSignedInfo EMPTY>
<!ATTLIST cXMLSignedInfo
    signatureVersion    %cxml.signatureVersions;        #REQUIRED
    payloadID           %string;                        #REQUIRED
    Id                  ID                              #REQUIRED
>

<!--
    This element includes the contact information of the organisation
    to/from whom the document is sent/received.

    preferredLanguage
        optional language which the organisation, identified by this 
        element, would prefer to use. Refer to the definition of 
        xmlLangCode entity.
-->
<!ELEMENT Correspondent (Contact+, Extrinsic*)>
<!ATTLIST Correspondent
    preferredLanguage     %xmlLangCode;        #IMPLIED
><!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id: $
-->

<!-- ====
    Allow this module to be built separately from any other DTD file.
==== -->

<!--
    TimeCardRequest describes a time card document that is sent from a supplier/staffing agency to a buyer.
-->
<!ELEMENT TimeCardRequest (TimeCard)>

<!--
    TimeCardInfoRequest describes a time card document that is sent from a buyer to a supplier/staffing agency.
-->
<!ELEMENT TimeCardInfoRequest (TimeCard)>

<!--
    	Definition of a Time card that is used to capture time and expense 
	entered by a contractor/temp labor. Document reference is for update 
	to timecards. Approval info is only when suppliers send in timecards 
	that are approved in their system. There can be multiple approval 
	infos since many people could have approved it. The OrderInfo element 
	is used to reference an order. One timecard can reference only one 
	order. Also the document reference is used on an update operation to 
	refer to a previous TimeCardRequest/TimeCardInfoRequest. 

    	type
        	the type of the timecard defaults to "new". To update the 
		status of the timecard, one needs to do an update to the 
		original timecard with the new status in it.

    	status
        	the status of the timecard. Defaults to submitted.

    	timeCardID
        	the buyer system/supplier system unique identifier for this 
		timecard
-->    
<!ELEMENT TimeCard (OrderInfo, Contractor, ReportedTime, SubmitterInfo, ApprovalInfo*, Comments?, DocumentReference?)>

<!ATTLIST TimeCard
        type      	(new | update | delete)  "new"
  	status		(submitted| approved| denied)  "submitted"
        timeCardID      NMTOKEN #REQUIRED
>

<!--
        Definition of ReportedTime. This captures the line items for
        the time card.  Though the dtd allows it, the expectation is
        that at least one of TimeCardTimeInterval or Expense will be
        present.
-->
<!ELEMENT ReportedTime (Period, TimeCardTimeInterval*, Expense*)>


<!--
    	Definition of a time interval that is being reported on a timecard. 
	Extrinsic are used to pass other things not captured. For the 
	TimeRange the start date is mandatory. The difference in time between 
	the endDate and startDate attributes in TimeRange need not agree with 
	the duration. Hence the endDate attribute is for informational purpose 
	only.    
    
	duration
        	the duration of time that is being claimed for this line item
		in ISO 8601 format. In the event that duration and timerange 
		don't agree, duration takes precedence. 
		(http://www.w3.org/TR/xmlschema-2/#duration)
    
	paycode
        	the paycode to be used. Some recommended ones are Regular,
		Overtime,Doubletime,Mealbreak,Tripletime,WeeklyRestDay,
		HolidayWorked,RegularNightShift,OvertimeNightShift,
		DoubletimeNightShift,TripletimeNightShift,
		WeeklyRestDayNightShift,RegularMixedShift,OvertimeMixedShift,
		DoubletimeMixedShift,TripletimeMixedShift,
		WeeklyRestDayMixedShift

    	isNonBillable
        	whether the time is not Billable. Default behavior is the 
		time is billable. 
-->
<!ELEMENT TimeCardTimeInterval (TimeRange, Comments?, Extrinsic*)>
<!ATTLIST TimeCardTimeInterval
        duration     	%duration; #REQUIRED 
        payCode     	%string; #REQUIRED 
        isNonBillable   (yes)  #IMPLIED
>

<!--
        Definition of an expense item.  The type of expense, date and
        amount are required pieces of information

        expenseDate
                date of the expense
        expenseType 
                type of expense.  Some recommended examples are
                mileage, airfare, taxi, perDiem, hotel
        isNonBillable
                whether the time is not billable. Default behavior is
                the expense is billable.
-->
<!ELEMENT Expense (ExpenseAmount, Comments*, Extrinsic*)>
<!ATTLIST Expense
        expenseDate	%date;  #REQUIRED
        expenseType    	%string; #REQUIRED 
        isNonBillable   (yes)  #IMPLIED
>

<!--
        Amount of the expense item
-->
<!ELEMENT ExpenseAmount (Money)>

<!--
   	Information about someone submitting a timecard. If the contact 
	is absent, then it is assumed that the contractor is the submitter 
	of the timecard.     
    
	submittedDate
        	the time when the timecard was submitted
-->
<!ELEMENT SubmitterInfo (Contact?)>
<!ATTLIST SubmitterInfo
        submittedDate     	%datetime.tz; #REQUIRED
>

<!--
    	Information about the approver for a timecard. This is sent by the 
	supplier for informational purposes only. The buyer system does 
	not send it. This can includes all the approvers in the chain.
    
	approvedDate
        	time when the timecard was approved
-->
<!ELEMENT ApprovalInfo (Contact?)>
<!ATTLIST ApprovalInfo
        approvedDate     	%datetime.tz; #REQUIRED
>

<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id$
-->

<!--
    Please note that all amounts at receipt line level should add up
    to the Total specified in ReceiptRequest.
-->

<!--
    Request representing details about a receipt against Purchase Order or Master Agreement
    sent from a buyer to supplier. Provides purchase order references, line item references, 
    quantities and amounts received and, optionally, reference to related ship notices from supplier.

    This request can be used to send receipt information for any portion of all or 
    selected line items from single or multiple purchase orders.

    ReceiptRequestHeader
         The header information of this receipt.

    ReceiptOrder
         Details about purchase order or master agreement against which this receipt is generated.

    Total 
        Summary total amount of all receipt line item amounts.        
-->
<!ELEMENT ReceiptRequest (ReceiptRequestHeader,ReceiptOrder+,Total)>

<!-- 
    Defines header information of an ReceiptRequest

    Comments
        Textual comments for this receipt

    Extrinsic
        Additional information related to this receipt. Should not duplicate
        anything in ReceiptRequestHeader or ReceiptRequest.

    receiptID
        A buyer-generated identitfier for this receipt. A unique identifier for 
        this receipt document.

    receiptDate
        Date and time this receipt was deemed fully received in the Buying Organization. 
	  Should be earlier than the document's timestamp.
	
    operation
        Type of operation described by this receipt document. Currently only supported operation 
        is "new". This can be furthur enhanced to support "update" or "delete" operations.
-->
<!ELEMENT ReceiptRequestHeader (Comments?,Extrinsic*)>
<!ATTLIST ReceiptRequestHeader
	receiptID %string; #REQUIRED
	receiptDate %datetime.tz; #REQUIRED
      operation (new) #REQUIRED
>

<!-- 
    Defines the receipt information of a purchase order or master agreement with item details.
    In this case, an receipt line is an ReceiptItem and its receipt line number is 
    ReceiptItem@receiptLineNumber.

    ReceiptOrderInfo
        The reference information of the purchase order or master agreement.

    ReceiptItem
        The information of an item in the purchase order or master agreement.

    closeForReceiving
        Flag indicating if the underlying order or master agreement needs to be 
        closed for furthur receiving on approval of this receipt. 
        It is false(no), by default.

        If this receipt is against a purchase order or release order against a
        master agreement, this flag indicates corresponding order being closed for
        receiving. If this receipt is against a no release master agreement, this 
	  flag indicates closing the master agreement for receiving.
-->
<!ELEMENT ReceiptOrder (ReceiptOrderInfo, ReceiptItem+)>
<!ATTLIST ReceiptOrder
	closeForReceiving (yes) #IMPLIED
>

<!-- 
    Defines information related to a purchase order, including purchase order
    reference and related master agreement reference, if any.

    The various content options of ReceiptOrderInfo are in order
    of preference, i.e., OrderReference is strongly recommended.  If
    that is not possible, MasterAgreementReference, MasterAgreementIDInfo,
    OrderIDInfo should be used, in that order.

    If this receipt is against a release order, reference to both order as well
    as the master agreement should be specified. If the receipt is against a 
    no-release master agreement, only the master agreement reference is required.
    If the receipt is against a puschase order, reference to the purchase order
    should be specified.

    OrderReference
        The reference to the purchase order being received.

    MasterAgreementReference
        The reference to the master agreement being received.

    OrderIDInfo
        The buyer system order ID of the order.

    MasterAgreementIDInfo
        The buyer system ID of the corresponding master agreement if receiving
	  against master agreement.
-->
<!ELEMENT ReceiptOrderInfo
    ( (OrderReference, (MasterAgreementReference | MasterAgreementIDInfo)?) |
      (MasterAgreementReference, OrderIDInfo?) |
      (MasterAgreementIDInfo, OrderIDInfo?) |
      (OrderIDInfo))>

<!-- 
    Defines line item in the ReceiptRequest

    ReceiptItemReference
        The references related to this line item.

    UnitRate
        The amount(s) to be paid per unit (of specified measure).

    ReceivedAmount
        Amount of received goods or services for this line item. The total received amount for the rate.  
        The total received amount must equal to quantity x UnitRate.

    AssetInfo
        Optional asset information for this line item. Specified for each quantity of the line item.
        
    DeliveryAddress
             Address where goods are received.

    Comments
        Textual comments for this line item.

    receiptLineNumber
        Buyer defined ID for the current line item. It should be unique across
        all receipt line items of the same ReceiptRequest.

    quantity
        The quantity being actually received or returned for the current line.
        A negative quantity indicates reversal of the previous receipt quantity for this line.
    
    type 
	Indicates whether the items are "received" or "returned".

    parentReceiptLineNumber
        lineNumber of the parent line item in the receipt request.

    itemType
        specify whether the line item contains child line items or acts as a child item

	compositeItemType
		specify type of parent line item(lot/box)

    completedIndicator
        An attribute specifying whether a component ship notice item is considered closed. This would mean that no more component receipts are expected for this item.
-->
<!ELEMENT ReceiptItem (ReceiptItemReference, UnitRate, ReceivedAmount, AssetInfo*, DeliveryAddress?, Comments?, Extrinsic*)>
<!ATTLIST ReceiptItem
	receiptLineNumber             %uint;                #REQUIRED
	quantity                      %r8;                  #REQUIRED
	type                      (received|returned)       #IMPLIED
    parentReceiptLineNumber       %uint;                #IMPLIED
    itemType                      %lineItemType;        #IMPLIED
    compositeItemType			  %compositeItemType;	#IMPLIED
    completedIndicator        (yes)                     #IMPLIED
>

<!-- 
    Defines all references related to a line item in this receipt.

    ItemID
        The supplier part number of current line item, copied from
        OrderRequest.

    Description
        The line item description, copied from OrderRequest.

    ManufacturerPartID
        The manufacturer part number.

    ManufacturerName
        The name of the manufacturer.

    ShipNoticeReference
        Reference to the ShipNoticeRequest document sent from the supplier 
        when this item was shipped.

    ShipNoticeIDInfo
       ID of the ShipNoticeRequest known to the Buyer system. This ID is used when ShipNoticeReference is omitted.

    lineNumber
        The line number of current line item, copied from OrderRequest.In the scenario where the OrderRequest is blank, the line number will refer to that of the Component Ship Notice i.e. the ASN referenced in the ShipNoticeReference .
-->
<!ELEMENT ReceiptItemReference (ItemID?, Description?, (ManufacturerPartID, ManufacturerName)?, (ShipNoticeReference | ShipNoticeIDInfo)?)>
<!ATTLIST ReceiptItemReference
	lineNumber %uint; #REQUIRED
>


<!-- 
    Amount of goods or services received by the buying organization.
-->
<!ELEMENT ReceivedAmount (Money)>

<!--
    The delivered address for an item.
-->
<!ELEMENT DeliveryAddress (Address)>

<!ELEMENT ComponentConsumptionRequest (ComponentConsumptionHeader, ComponentConsumptionPortion*)>

<!--
ComponentConsumptionHeader. Information about this component consumption that is common to all contained portions.

Comments
The Comments element list may contain additional information about this consumption document. All such data must be intended for human use.
Elements in the Comments list may appear in any order. The xml:lang attribute may have the same value in multiple Comments elements in the list. The set of Comments with a particular xml:lang value should contain similar content to that for any other xml:lang value present in the list.

consumptionID
An identifier for this particular component consumption document

operation
The (optional) operational mode of component consumption document.  Defaults
to "new". Update and delete operations are not supported for this document.

referenceDocumentID
The identifier of reference Work Order for which the consumption is reported.

creationDate
The date and time this component consumption document was created.

lastChangeDate
The date and time this component consumption document was last modified.

Extrinsic
This element list may be used to insert additional data about this component consumption header.
-->

<!ELEMENT ComponentConsumptionHeader (Comments*, Extrinsic*)>

<!ATTLIST ComponentConsumptionHeader
consumptionID           %string;              #REQUIRED
operation 		(new)                       #REQUIRED
referenceDocumentID   %string;              #IMPLIED
creationDate           %datetime.tz;         #IMPLIED
lastChangeDate         %datetime.tz;         #IMPLIED
>

<!--
ComponentConsumptionPortion: This element captures details of all component consumptions for a particular OrderRequest (via the OrderReference or  MasterAgreementReference element)

OrderReference
This element can be used to identify the corresponding purchase order for which component consumption is reported.

MasterAgreementReference or MasterAgreementIDInfo
This element can be used to identify the corresponding scheduling agreement if the component consumption is generated from a scheduling agreement release.

ComponentConsumptionItem
This element captures details of all consumption items for given order reference.

Extrinsic
This element list may be used to insert additional data about this component consumption portion.
-->

<!ELEMENT ComponentConsumptionPortion
(OrderReference, (MasterAgreementReference | MasterAgreementIDInfo)?, ComponentConsumptionItem*, Extrinsic*)>

<!--
ComponentConsumptionItem: This element captures details of all consumption for a given order reference item.

ItemID
This element can be used to identify the part ID of sub-contracted purchase order item for which component consumption is reported.

BuyerBatchID
BuyerBatchID is the batch ID provided by the buyer at the line item level to identify the buyer batch for which the item or the product was produced. The batch id is helpful in traceability.

SupplierBatchID
SupplierBatchID is the batch ID provided by the supplier at the line item level
to identify  the batch in which the item or the product was produced. The batch id is helpful in traceability. Batch numbers (also call "lot number", "variant") are used in several industries to uniquely identify items produced together.

Contact
In this context, roles that are usually included are : BuyerParty, ProductReceipentParty, ShipFromLocation & ShipToLocation

ComponentConsumptionDetails
This element captures details of component consumption for a given PO line item

poLineNumber
This attribute identifies referring PO item number

completedIndicator
This Boolean flag attribute indicates whether consumption reporting is completed for a PO item or not

Extrinsic
This element list may be used to insert additional data about this component consumption portion.
-->

<!ELEMENT ComponentConsumptionItem (ItemID, BuyerBatchID?, SupplierBatchID?, Contact*, Comments*, ComponentConsumptionDetails*, Extrinsic*)>
<!ATTLIST ComponentConsumptionItem
poLineNumber           %uint;                #REQUIRED
completedIndicator   (yes)                   #IMPLIED
>

<!--
ComponentConsumptionDetails: This element captures consumption details.

Product
The supplier & buyer part ID of component that is consumed .

BuyerBatchID
BuyerBatchID is the batch ID provided by the buyer for the component that is consumed

SupplierBatchID
SupplierBatchID is the batch ID provided by the supplier for the component that is consumed.

lineNumber
The position of a component in the current consumption details

quantity
The quantity of component that is consumed

Extrinsic
The Extrinsic element list may be used to insert additional data at schedule line level of component consumption.

type
Used to refer to the type of inventory movement which could cause the suppliers to not consume the material.  Following are the possible values.
blocked
This inventory is not valuated and cannot be consumed.
qualityRestricted
This inventory is not qualified for unrestricted use and cannot be consumed in production.
scrapped
This inventory is out of date or material has been destroyed during logistics operation etc.

ReferenceDocumentInfo
Details of referenced production order 
-->

<!ELEMENT ComponentConsumptionDetails (Product, UnitOfMeasure, BuyerBatchID?, SupplierBatchID?, ReferenceDocumentInfo*, Extrinsic*)>
<!ATTLIST ComponentConsumptionDetails
lineNumber           %uint;                #IMPLIED
quantity             %r8;                  #REQUIRED
type        (blocked | qualityRestricted | scrapped)  #IMPLIED
>
<!-- Inventory that is in the possession of the customer, and is owned and managed by the customer.-->
<!ELEMENT Inventory (SubcontractingStockInTransferQuantity?, UnrestrictedUseQuantity?, 
BlockedQuantity?, QualityInspectionQuantity?, PromotionQuantity?,
StockInTransferQuantity?, IncrementQuantity?, RequiredMinimumQuantity?,
RequiredMaximumQuantity?,
StockOnHandQuantity?, WorkInProcessQuantity?, IntransitQuantity?, ScrapQuantity?,
OrderQuantity?, DaysOfSupply?)>

<!-- Consignment Inventory  is inventory that is in the possession of the customer, but is still owned by the supplier.-->
<!ELEMENT ConsignmentInventory (SubcontractingStockInTransferQuantity?,
UnrestrictedUseQuantity?, BlockedQuantity?, 
QualityInspectionQuantity?, PromotionQuantity?, StockInTransferQuantity?, 
IncrementQuantity?, RequiredMinimumQuantity?, RequiredMaximumQuantity?)>

<!--SubcontractingStockInTransfer is the transfer of stock to a vendor of type subcontracting using a special movement type. -->
<!ELEMENT SubcontractingStockInTransferQuantity (UnitOfMeasure?)  >
<!ATTLIST SubcontractingStockInTransferQuantity
    quantity        %r8;       #IMPLIED>

<!-- Unrestricted Stock is the physical stock that is always available at a plant/storage location that can be consumed for stock movements and available for Material requirements planning.-->
<!ELEMENT UnrestrictedUseQuantity (UnitOfMeasure?)  >
<!ATTLIST UnrestrictedUseQuantity
    quantity        %r8;       #IMPLIED>

<!--Blocked stock is not counted as unrestricted stock .You can have Plant level configuration to consider the stock for MRP.-->
<!ELEMENT BlockedQuantity (UnitOfMeasure?)  >
<!ATTLIST BlockedQuantity
    quantity        %r8;       #IMPLIED>

<!-- QualityInspectionQuantity is the stock type where the received  stock is under quality inspection.-->
<!ELEMENT QualityInspectionQuantity (UnitOfMeasure?)  >
<!ATTLIST QualityInspectionQuantity
    quantity        %r8;       #IMPLIED>

<!--PromotionQuanity is the stock quantity that is reserved  for promotions.-->
<!ELEMENT PromotionQuantity (UnitOfMeasure?)  >
<!ATTLIST PromotionQuantity
    quantity        %r8;       #IMPLIED>
<!--StockInTransferQuantity 
When there is a movement of stock between plant to plant, company code to company code then such movement of stock is called as Stock transfer.
-->
<!ELEMENT StockInTransferQuantity (UnitOfMeasure?)  >
<!ATTLIST StockInTransferQuantity
    quantity        %r8;       #IMPLIED>

<!-- -->
<!ELEMENT IncrementQuantity (UnitOfMeasure?)  >
<!ATTLIST IncrementQuantity
    quantity        %r8;       #IMPLIED>

<!--Required Minimum Quantity is a minimum stock level above which the stock has to be maintained.-->
<!ELEMENT RequiredMinimumQuantity (UnitOfMeasure?)  >
<!ATTLIST RequiredMinimumQuantity
    quantity        %r8;       #IMPLIED>

<!--Required Maximum Quantity is a maximum stock level above which the stock has to be maintained.-->
<!ELEMENT RequiredMaximumQuantity (UnitOfMeasure?)  >
<!ATTLIST RequiredMaximumQuantity
    quantity        %r8;       #IMPLIED>

<!--Forecast, represents the forecast quantity of a product for a specific time period.-->
<!ELEMENT Forecast (Period, ForecastQuantity, Extrinsic*)  >

<!--The Forecast quantity.-->
<!ELEMENT ForecastQuantity (UnitOfMeasure?)  >
<!ATTLIST ForecastQuantity
    quantity        %r8;       #IMPLIED>

<!--The quantity withdrawn in a consignment movement.-->
<!ELEMENT MovementQuantity (UnitOfMeasure?)  >
<!ATTLIST MovementQuantity
    quantity        %r8;       #IMPLIED>
    
<!--The minimum/maximum order quantity refers to the minimum/maximum quantity the customer must order. The trading partners are alerted if the order quantity is not within the required quantity range during order entry.-->
<!ELEMENT OrderQuantity (UnitOfMeasure?)>
<!ATTLIST OrderQuantity
    minimum        %r8;    #IMPLIED
    maximum        %r8;    #IMPLIED>

<!--DaysOfSupply is used to determine for how long stocks and receipts will cover the requirements, to avoid product shortages or stock levels that are too high.
    Minimum and Maximum Days of Supply in days can be specified. The system then issues replenishment proposals when the days’ supply falls above or Below the threshold.-->
<!ELEMENT DaysOfSupply EMPTY>
<!ATTLIST DaysOfSupply
    minimum        %r8;    #IMPLIED
    maximum        %r8;    #IMPLIED >

<!--StockOnHand represents the calculated value of different Stock types dependent on the customer, location and material.-->
<!ELEMENT StockOnHandQuantity (UnitOfMeasure?)>
<!ATTLIST StockOnHandQuantity
    quantity        %r8;       #REQUIRED >

<!--Work in progress (WIP), also called work in process, is inventory that has begun the manufacturing process and is no longer included in raw materials inventory, but is not yet a completed product. On a balance sheet, work in progress is considered to be an asset because money has been spent towards a completed product.-->
<!ELEMENT WorkInProcessQuantity (UnitOfMeasure?)>
<!ATTLIST WorkInProcessQuantity
    quantity        %r8;       #REQUIRED >
    
<!--The stock in transit is the quantity of a material that was withdrawn from the stock of the issuing plant but has not yet arrived at the receiving plant.-->
<!ELEMENT IntransitQuantity (UnitOfMeasure?)>
<!ATTLIST IntransitQuantity
    quantity        %r8;       #REQUIRED >
    
<!--The quantity represents the Scrap of a material that is expected to occur during production if the material is a component.-->
<!ELEMENT ScrapQuantity (UnitOfMeasure?)>
<!ATTLIST ScrapQuantity
    quantity        %r8;       #REQUIRED ><!--
    This document is intended for Suppliers to communicate the following three types of messages to Buyers:
1.	For Suppliers to Communicate the Manufacturing and Planning related information to Buyers .The processes for Outsourced Manufacturing processes where Contract Manufacturer is the considered to the extension of internal manufacturing.
2.	For Suppliers to Communicate the Inventory details to Buyers .The processes for Outsourced Manufacturing and Supplier Managed Inventory requires Suppliers provide customers with Inventory updates to support Planning.
3.	For Supplier to provide Forecast confirmation to the Buyers in Collaborative Planning processes. The goal of sending a Forecast confirmation is to enable an automated process that provides the receiver critical information about the supplier’s constraints. Forecast Confirmation should help automate existing processes for both senders and receivers.
-->
<!ELEMENT ProductReplenishmentMessage (ProductReplenishmentHeader, ProductReplenishmentDetails+, Extrinsic*)>

<!--
    ProductReplenishmentHeader.
    messageID
        An identifier for this particular product replenishment message
    creationDate
        The date and time this product replenishment message was created.
-->
<!ELEMENT ProductReplenishmentHeader EMPTY>
<!ATTLIST ProductReplenishmentHeader
     messageID           %string;              #REQUIRED
    creationDate           %datetime.tz;         #IMPLIED>

<!--
    The representation of product replenishment for the given product. 
    ItemID
        A unique identification of a component item in supplier backend system or buyer backend system.
    Description
        Textual description of the component
    Contact
        When the type of message is forecast confirmation:
            Contact represents the location to which the product forecast confirmation is taking place.
            The only Contact role (Contact@role attribute value) likely to be sensible in this element are
            "locationTo".
            To provide a plant location description, the domain attribute of the element IdReference should be set to "buyerLocationID" and the identifier to the plantID.
        When the type of message is NOT forecast confirmation:
            Contact with role “locationTo” represents the destination of the product replenishment
            Contact with role “locationFrom” represents the source of the product replenishment
            Contact with role “inventoryOwner” (if specified), represents the owner of the inventory, in this case,
                Inventory or ConsignmentInventory should be specified in the message.
    Comments
        These are comments provided for the part whose quantity is being committed
    ReplenishmentTimeSeries
        It represents the product replenishment quantity of a product for a specific time period.
-->
<!ELEMENT ProductReplenishmentDetails (ItemID,  Description?, LeadTime?, Batch?, Contact*, Inventory?, ConsignmentInventory?, ReplenishmentTimeSeries*, Comments?, Extrinsic*)>

<!--
    ReplenishmentTimeSeries is used to enclose information about the following replenishment timeseries types:
    Manufacturing Order is an order that initiates the manufacturing process to tracks the status of manufacturing from Raw mataerial to Finished Goods status.
    SupplierForecast :is the Forecast created by the Supplier based on the Demand Supply situation in the ERP systems. Typically the Supplier  Creates the forecast for components based on the FinishedGoods Demand.
    ProjectedStock :This is the stock that is expected to be available in the location at the end of this day. Based on this value, the system calculates the projected stock for the following day by adding the demands and receipts from the next day. Based on this value, the system calculates the projected stock for the day after next and so on.
    Planned Receipts represents the total quantity that the supplier wants to deliver to the customer in a period so that the raw net demands of the Buyer are covered.It is a planned quanitity which is subject to changes.
    Firmed Receipts represents the total quantity that the supplier wants to deliver to the customer in period so that the total demand from the customer is covered.
    Shipment represents the Supplier shipment Quantity from suppliers location and customers location to ship the quantities requested.
-->
<!ELEMENT ReplenishmentTimeSeries (TimeSeriesDetails+)>
<!ATTLIST ReplenishmentTimeSeries
type                 (manufacturingOrder | purchaseOrder | supplierForecast | shipment | projectedStock | firmReceipt | plannedReceipt | forecastConfirmation)  #REQUIRED >

<!--
    TimeSeriesDetails carries product replenishment information regarding the quantity of a product for a specific time period.
    Period
        The start date and end date for the forecast response.
    TimeSeriesQuantity
        The generic quantity associated with the given type of replenishment timeseries.
    UpsideQuantity
        The quantity of inventory that the supplier can provide above and beyond the request demand. This quantity should only be specified when the type of ReplenishmentTimeSeries is forecastConrimation.
-->
<!ELEMENT TimeSeriesDetails (Period, TimeSeriesQuantity?, UpsideQuantity?, IdReference*, Extrinsic*)>

<!--
    The generic quantity associated with the given type of replenishment timeseries.
-->
<!ELEMENT TimeSeriesQuantity (UnitOfMeasure?)>
<!ATTLIST TimeSeriesQuantity
    quantity        %r8;    #REQUIRED>

<!--
    The Forecast Upside quantity. The quantity of inventory that the supplier can provide above and beyond the request demand.
-->
<!ELEMENT UpsideQuantity (UnitOfMeasure?)  >
<!ATTLIST UpsideQuantity
    quantity        %r8;       #REQUIRED >
<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id: //ariba/cxml/Modules/Profile.mod#6 $
-->

<!--
    For more information about W3C XML signatures, refer to the
    following URL.  Portions of this DTD are derived from information
    contained therein.
    http://www.w3.org/TR/xmldsig-core/
-->

<!-- DTD for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    Joseph Reagle $last changed 20001215$

    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD
-->

<!--

The following entity declarations enable external/flexible content in
the Signature content model.

#PCDATA emulates schema string; when combined with element types it
emulates schema's mixed content type.

%foo.ANY permits the user to include their own element types from
other namespaces, for example:
 <!ENTITY % KeyValue.ANY '| ecds:ECDSAKeyValue'>
 ...
 <!ELEMENT ecds:ECDSAKeyValue (#PCDATA)  >

-->

<!ENTITY % Object.ANY '|xades:QualifyingProperties|cXMLSignedInfo|Extrinsic'>
<!ENTITY % Method.ANY ''>
<!ENTITY % Transform.ANY ''>
<!ENTITY % SignatureProperty.ANY ''>
<!ENTITY % KeyInfo.ANY ''>
<!ENTITY % KeyValue.ANY ''>
<!ENTITY % PGPData.ANY ''>
<!ENTITY % X509Data.ANY ''>
<!ENTITY % SPKIData.ANY ''>



<!-- Start Core Signature declarations, these should NOT be altered -->

<!ELEMENT ds:Signature (ds:SignedInfo, ds:SignatureValue, ds:KeyInfo?, ds:Object*)  >
<!ATTLIST ds:Signature  
	xmlns:ds	CDATA	#FIXED 'http://www.w3.org/2000/09/xmldsig#'
	xmlns:xades	CDATA	#FIXED 'http://uri.etsi.org/01903/v1.3.2#'
	Id  		ID	#IMPLIED >

<!ELEMENT ds:SignatureValue (#PCDATA) >
<!ATTLIST ds:SignatureValue  
         Id  ID      #IMPLIED>

<!ELEMENT ds:SignedInfo (ds:CanonicalizationMethod, 
	ds:SignatureMethod,  ds:Reference+)  >
<!ATTLIST ds:SignedInfo  
	Id	 ID 	 #IMPLIED 
>

<!ELEMENT ds:CanonicalizationMethod (#PCDATA %Method.ANY;)* > 
<!ATTLIST ds:CanonicalizationMethod 
	Algorithm CDATA #REQUIRED > 

<!ELEMENT ds:SignatureMethod (#PCDATA|ds:HMACOutputLength %Method.ANY;)* >
<!ATTLIST ds:SignatureMethod 
	Algorithm CDATA #REQUIRED > 

<!ELEMENT ds:Reference (ds:Transforms?, ds:DigestMethod, ds:DigestValue)  >
<!ATTLIST ds:Reference
	Id	ID	#IMPLIED
	URI	CDATA	#IMPLIED
	Type	CDATA	#IMPLIED>


<!ELEMENT ds:Transforms (ds:Transform+)>

<!ELEMENT ds:Transform (#PCDATA|ds:XPath %Transform.ANY;)* >
<!ATTLIST ds:Transform 
	Algorithm    CDATA    #REQUIRED >

<!ELEMENT ds:XPath (#PCDATA) >

<!ELEMENT ds:DigestMethod (#PCDATA %Method.ANY;)* >
<!ATTLIST ds:DigestMethod  
	Algorithm		CDATA	#REQUIRED >

<!ELEMENT ds:DigestValue  (#PCDATA)  >

<!ELEMENT ds:KeyInfo	(#PCDATA|ds:KeyName|ds:KeyValue|ds:RetrievalMethod|
           ds:X509Data|ds:PGPData|ds:SPKIData|ds:MgmtData %KeyInfo.ANY;)* >
<!ATTLIST ds:KeyInfo
	Id	ID	 #IMPLIED >

<!-- Key Information -->

<!ELEMENT ds:KeyName (#PCDATA) >
<!ELEMENT ds:KeyValue (#PCDATA|ds:DSAKeyValue|ds:RSAKeyValue %KeyValue.ANY;)* >
<!ELEMENT ds:MgmtData (#PCDATA) >

<!ELEMENT ds:RetrievalMethod (ds:Transforms?) >
<!ATTLIST ds:RetrievalMethod
  URI	CDATA #REQUIRED 
  Type	CDATA #IMPLIED > 

<!-- X.509 Data -->

<!ELEMENT ds:X509Data ((ds:X509IssuerSerial | ds:X509SKI | ds:X509SubjectName |
                    ds:X509Certificate | ds:X509CRL )+ %X509Data.ANY;)>
<!ELEMENT ds:X509IssuerSerial (ds:X509IssuerName, ds:X509SerialNumber) >
<!ELEMENT ds:X509IssuerName (#PCDATA) >
<!ELEMENT ds:X509SubjectName (#PCDATA) >
<!ELEMENT ds:X509SerialNumber (#PCDATA) >
<!ELEMENT ds:X509SKI (#PCDATA) >
<!ELEMENT ds:X509Certificate (#PCDATA) >
<!ELEMENT ds:X509CRL (#PCDATA) >

<!-- PGPData -->

<!ELEMENT ds:PGPData ((ds:PGPKeyID, ds:PGPKeyPacket?) | (ds:PGPKeyPacket) %PGPData.ANY;) >
<!ELEMENT ds:PGPKeyPacket  (#PCDATA)  >
<!ELEMENT ds:PGPKeyID  (#PCDATA)  >

<!-- SPKI Data -->

<!ELEMENT ds:SPKIData (ds:SPKISexp %SPKIData.ANY;)  >
<!ELEMENT ds:SPKISexp  (#PCDATA)  >

<!-- Extensible Content -->

<!ELEMENT ds:Object (#PCDATA|ds:Signature|ds:SignatureProperties|ds:Manifest %Object.ANY;)* >
<!ATTLIST ds:Object  
	Id	ID	#IMPLIED
	MimeType	CDATA	#IMPLIED
	Encoding	CDATA	#IMPLIED >

<!ELEMENT ds:Manifest (ds:Reference+)  >
<!ATTLIST ds:Manifest  
	Id	ID	#IMPLIED >

<!ELEMENT ds:SignatureProperties (ds:SignatureProperty+)  >
<!ATTLIST ds:SignatureProperties  
	Id	ID	 #IMPLIED  >

<!ELEMENT ds:SignatureProperty (#PCDATA %SignatureProperty.ANY;)* >
<!ATTLIST ds:SignatureProperty  
	Target 	CDATA	 #REQUIRED
	Id	ID	 #IMPLIED  >

<!-- Algorithm Parameters -->

<!ELEMENT ds:HMACOutputLength (#PCDATA) >

<!ELEMENT ds:DSAKeyValue ((ds:P, ds:Q)?, ds:G?, ds:Y, ds:J?, (ds:Seed, ds:PgenCounter)?) >
<!ELEMENT ds:P (#PCDATA) >
<!ELEMENT ds:Q (#PCDATA) >
<!ELEMENT ds:G (#PCDATA) >
<!ELEMENT ds:Y (#PCDATA) >
<!ELEMENT ds:J (#PCDATA) >
<!ELEMENT ds:Seed (#PCDATA) >
<!ELEMENT ds:PgenCounter (#PCDATA) >

<!ELEMENT ds:RSAKeyValue (ds:Modulus, ds:Exponent) > 
<!ELEMENT ds:Modulus (#PCDATA) >
<!ELEMENT ds:Exponent (#PCDATA) >
<!--
    For cXML license agreement information, please see
    http://www.cxml.org/home/license.asp

    $Id: //ariba/cxml/Modules/Profile.mod#6 $
-->

<!--
    For more information about XAdES, refer to the following URL.
    Portions of this DTD are derived from information contained therein.
    http://uri.etsi.org/01903/v1.3.2#
-->

<!ENTITY % Any.ANY ''>
<!ENTITY % XMLTimeStamp.ANY ''>

<!-- Start Any -->

<!ELEMENT xades:Any (#PCDATA   %Any.ANY;)*>

<!-- End Any -->

<!-- Start ObjectIdentifier -->

<!ELEMENT xades:ObjectIdentifier (xades:Identifier, xades:Description?, 
xades:DocumentationReferences?)>
<!ELEMENT xades:Identifier (#PCDATA)>
<!ATTLIST xades:Identifier
	Qualifier (OIDAsURI | OIDAsURN) #IMPLIED
>
<!ELEMENT xades:Description (#PCDATA)>
<!ELEMENT xades:DocumentationReferences (xades:DocumentationReference)+>
<!ELEMENT xades:DocumentationReference (#PCDATA)>

<!-- End ObjectIdentifier -->

<!-- Start EncapsulatedPKIData -->

<!ELEMENT xades:EncapsulatedPKIData (#PCDATA)>
<!ATTLIST xades:EncapsulatedPKIData
	Id ID #IMPLIED
	Encoding CDATA #IMPLIED
>

<!-- End EncapsulatedPKIData -->

<!-- Start time-stamp container types -->

<!ELEMENT xades:Include EMPTY>
<!ATTLIST xades:Include
	URI CDATA #REQUIRED
	referencedData CDATA #IMPLIED
>

<!ELEMENT xades:ReferenceInfo (ds:DigestMethod, ds:DigestValue)>
<!ATTLIST xades:ReferenceInfo
	Id ID #IMPLIED
	URI CDATA #IMPLIED
>
<!ELEMENT xades:XAdESTimeStamp (xades:Include*, ds:CanonicalizationMethod?, 
(xades:EncapsulatedTimeStamp | xades:XMLTimeStamp)+)>
<!ATTLIST xades:XAdESTimeStamp
	Id ID #IMPLIED
>

<!ELEMENT xades:OtherTimeStamp (xades:ReferenceInfo+, ds:CanonicalizationMethod?, 
(xades:EncapsulatedTimeStamp | xades:XMLTimeStamp))>
<!ATTLIST xades:OtherTimeStamp
	Id ID #IMPLIED
>

<!ELEMENT xades:EncapsulatedTimeStamp (#PCDATA)>
<!ATTLIST xades:EncapsulatedTimeStamp
	Id ID #IMPLIED
>

<!ELEMENT xades:XMLTimeStamp (#PCDATA  %XMLTimeStamp.ANY; )*>

<!-- End time-stamp tokens container  -->

<!-- Start container types -->

<!-- Start QualifyingProperties -->

<!ELEMENT xades:QualifyingProperties (xades:SignedProperties?, xades:UnsignedProperties?)>
<!ATTLIST xades:QualifyingProperties
	Target CDATA #REQUIRED
	Id ID #IMPLIED
	xmlns:xades	CDATA	#FIXED 'http://uri.etsi.org/01903/v1.3.2#'
>

<!ELEMENT xades:SignedProperties (xades:SignedSignatureProperties, 
xades:SignedDataObjectProperties?)>
<!ATTLIST xades:SignedProperties
	Id ID #IMPLIED
>

<!ELEMENT xades:UnsignedProperties (xades:UnsignedSignatureProperties?, 
xades:UnsignedDataObjectProperties?)>
<!ATTLIST xades:UnsignedProperties
	Id ID #IMPLIED
>

<!-- End QualifyingProperties -->

<!-- Start SignedSignatureProperties, SignedDataObjectProperties, 
UnsignedSignatureProperties, UnsignedDataObjectProperties -->

<!ELEMENT xades:SignedSignatureProperties (xades:SigningTime?, xades:SigningCertificate?, 
xades:SignaturePolicyIdentifier?, xades:SignatureProductionPlace?, xades:SignerRole?)>
<!ATTLIST xades:SignedSignatureProperties
	Id ID #IMPLIED
>

<!ELEMENT xades:SignedDataObjectProperties (xades:DataObjectFormat*, 
xades:CommitmentTypeIndication*, xades:AllDataObjectsTimeStamp*, 
xades:IndividualDataObjectsTimeStamp*)>
<!ATTLIST xades:SignedDataObjectProperties
	Id ID #IMPLIED
>

<!ELEMENT xades:UnsignedSignatureProperties (xades:CounterSignature | xades:SignatureTimeStamp 
| xades:CompleteCertificateRefs | xades:CompleteRevocationRefs | xades:AttributeCertificateRefs
 | xades:AttributeRevocationRefs | (xades:SigAndRefsTimeStamp | xades:RefsOnlyTimeStamp) | 
xades:CertificateValues | xades:RevocationValues | xades:AttrAuthoritiesCertValues 
| xades:AttributeRevocationValues | xades:ArchiveTimeStamp)+>
<!ATTLIST xades:UnsignedSignatureProperties
	Id ID #IMPLIED
>

<!ELEMENT xades:UnsignedDataObjectProperties (xades:UnsignedDataObjectProperty*)>
<!ATTLIST xades:UnsignedDataObjectProperties
	Id ID #IMPLIED
>

<!ELEMENT xades:UnsignedDataObjectProperty (#PCDATA   %Any.ANY;)*>

<!-- End SignedSignatureProperties, SignedDataObjectProperties, 
UnsignedSignatureProperties, UnsignedDataObjectProperties -->

<!-- Start QualifyingPropertiesReference -->

<!ELEMENT xades:QualifyingPropertiesReference EMPTY>
<!ATTLIST xades:QualifyingPropertiesReference
	URI CDATA #REQUIRED
	Id ID #IMPLIED
>

<!-- End QualifyingPropertiesReference -->

<!-- End container types -->

<!-- Start SigningTime -->

<!ELEMENT xades:SigningTime (#PCDATA)>

<!-- End SigningTime -->

<!-- Start SigningCertificate -->

<!ELEMENT xades:SigningCertificate (xades:Cert+)>
<!ELEMENT xades:Cert (xades:CertDigest, xades:IssuerSerial)>
<!ATTLIST xades:Cert
	URI CDATA #IMPLIED
>
<!ELEMENT xades:CertDigest (ds:DigestMethod, ds:DigestValue)>
<!ELEMENT xades:IssuerSerial (ds:X509IssuerName, ds:X509SerialNumber)>
<!ELEMENT xades:X509IssuerName (#PCDATA)>
<!ELEMENT xades:X509SerialNumber (#PCDATA)>

<!-- End SigningCertificate -->

<!-- Start SignaturePolicyIdentifier -->

<!ELEMENT xades:SignaturePolicyIdentifier (xades:SignaturePolicyId | 
xades:SignaturePolicyImplied)>
<!ELEMENT xades:SignaturePolicyImplied ANY>
<!ELEMENT xades:SignaturePolicyId (xades:SigPolicyId, ds:Transforms?, xades:SigPolicyHash, 
xades:SigPolicyQualifiers?)>
<!ELEMENT xades:SigPolicyId (xades:Identifier, xades:Description?, xades:DocumentationReferences?)>
<!ELEMENT xades:SigPolicyHash (ds:DigestMethod, ds:DigestValue)>
<!ELEMENT xades:SigPolicyQualifiers (xades:SigPolicyQualifier+)>
<!ELEMENT xades:SigPolicyQualifier (#PCDATA|xades:SPURI %Any.ANY; )*>

<!-- End SignaturePolicyIdentifier -->

<!-- Start SPURI and SPUserNotice -->

<!ELEMENT xades:SPURI (#PCDATA)>
<!ELEMENT xades:SPUserNotice (xades:NoticeRef?, xades:ExplicitText?)>
<!ELEMENT xades:NoticeRef (xades:Organization, xades:NoticeNumbers)>
<!ELEMENT xades:ExplicitText (#PCDATA)>
<!ELEMENT xades:Organization (#PCDATA)>
<!ELEMENT xades:NoticeNumbers (xades:int*)>
<!ELEMENT xades:int (#PCDATA)>

<!-- End SPURI and SPUserNotice -->

<!-- Start CounterSignature -->

<!ELEMENT xades:CounterSignature (ds:Signature)>

<!-- End CounterSignature -->

<!-- Start DataObjectFormat -->

<!ELEMENT xades:DataObjectFormat (xades:Description?, xades:ObjectIdentifier?, xades:MimeType?, 
xades:Encoding?)>
<!ATTLIST xades:DataObjectFormat
	ObjectReference CDATA #REQUIRED
>
<!ELEMENT xades:MimeType (#PCDATA)>
<!ELEMENT xades:Encoding (#PCDATA)>

<!-- End DataObjectFormat -->

<!-- Start CommitmentTypeIndication -->

<!ELEMENT xades:CommitmentTypeIndication (xades:CommitmentTypeId, (xades:ObjectReference+ | 
xades:AllSignedDataObjects), xades:CommitmentTypeQualifiers?)>
<!ELEMENT xades:CommitmentTypeId (xades:Identifier, xades:Description?, 
xades:DocumentationReferences?)>
<!ELEMENT xades:ObjectReference (#PCDATA)>
<!ELEMENT xades:AllSignedDataObjects ANY>
<!ELEMENT xades:CommitmentTypeQualifiers (xades:CommitmentTypeQualifier*)>
<!ELEMENT xades:CommitmentTypeQualifier (#PCDATA %Any.ANY; )*>

<!-- End CommitmentTypeIndication -->

<!-- Start SignatureProductionPlace -->

<!ELEMENT xades:SignatureProductionPlace (xades:City?, xades:StateOrProvince?, xades:PostalCode?, 
xades:CountryName?)>
<!ELEMENT xades:City (#PCDATA)>
<!ELEMENT xades:StateOrProvince (#PCDATA)>
<!ELEMENT xades:PostalCode (#PCDATA)>
<!ELEMENT xades:CountryName (#PCDATA)>

<!-- End SignatureProductionPlace -->

<!-- Start SignerRole -->

<!ELEMENT xades:SignerRole (xades:ClaimedRoles?, xades:CertifiedRoles?)>
<!ELEMENT xades:ClaimedRoles (xades:ClaimedRole+)>
<!ELEMENT xades:CertifiedRoles (xades:CertifiedRole+)>
<!ELEMENT xades:ClaimedRole (#PCDATA %Any.ANY; )*>
<!ELEMENT xades:CertifiedRole (#PCDATA)>
<!ATTLIST xades:CertifiedRole
	Id ID #IMPLIED
	Encoding CDATA #IMPLIED
>

<!-- End SignerRole -->

<!-- Start AllDataObjectsTimeStamp, IndividualDataObjectsTimeStamp, 
SignatureTimeStamp -->

<!ELEMENT xades:AllDataObjectsTimeStamp (ds:CanonicalizationMethod?, 
(xades:EncapsulatedTimeStamp | xades:XMLTimeStamp)+)>
<!ATTLIST xades:AllDataObjectsTimeStamp
	Id ID #IMPLIED
>

<!ELEMENT xades:IndividualDataObjectsTimeStamp (xades:Include+, ds:CanonicalizationMethod?, 
(xades:EncapsulatedTimeStamp | xades:XMLTimeStamp)+)>
<!ATTLIST xades:IndividualDataObjectsTimeStamp
	Id ID #IMPLIED
>

<!ELEMENT xades:SignatureTimeStamp (ds:CanonicalizationMethod?, (xades:EncapsulatedTimeStamp 
| xades:XMLTimeStamp)+)>
<!ATTLIST xades:SignatureTimeStamp
	Id ID #IMPLIED
>

<!-- End AllDataObjectsTimeStamp, IndividualDataObjectsTimeStamp, 
SignatureTimeStamp -->

<!-- Start CompleteCertificateRefs -->

<!ELEMENT xades:CompleteCertificateRefs (xades:CertRefs)>
<!ATTLIST xades:CompleteCertificateRefs
	Id ID #IMPLIED
>
<!ELEMENT xades:CertRefs (xades:Cert+)>

<!-- End CompleteCertificateRefs -->

<!-- Start AttributeCertificateRefs -->

<!ELEMENT xades:AttributeCertificateRefs (xades:CertRefs)>
<!ATTLIST xades:AttributeCertificateRefs
	Id ID #IMPLIED
>

<!-- End AttributeCertificateRefs -->

<!-- Start CompleteRevocationRefs -->

<!ELEMENT xades:CompleteRevocationRefs (xades:CRLRefs?, xades:OCSPRefs?, xades:OtherRefs?)>
<!ATTLIST xades:CompleteRevocationRefs
	Id ID #IMPLIED
>
<!ELEMENT xades:CRLRefs (xades:CRLRef+)>
<!ELEMENT xades:OCSPRefs (xades:OCSPRef+)>
<!ELEMENT xades:OtherRefs (xades:OtherRef+)>

<!ELEMENT xades:CRLRef (xades:DigestAlgAndValue, xades:CRLIdentifier?)>
<!ELEMENT xades:OCSPRef (xades:OCSPIdentifier, xades:DigestAlgAndValue?)>
<!ELEMENT xades:OtherRef (#PCDATA %Any.ANY; )*>

<!ELEMENT xades:DigestAlgAndValue (ds:DigestMethod, ds:DigestValue)>
<!ELEMENT xades:CRLIdentifier (xades:Issuer, xades:IssueTime, xades:Number?)>
<!ATTLIST xades:CRLIdentifier
	URI CDATA #IMPLIED
>
<!ELEMENT xades:OCSPIdentifier (xades:ResponderID, xades:ProducedAt)>
<!ATTLIST xades:OCSPIdentifier
	URI CDATA #IMPLIED
>

<!ELEMENT xades:Issuer (#PCDATA)>
<!ELEMENT xades:IssueTime (#PCDATA)>
<!ELEMENT xades:Number (#PCDATA)>

<!ELEMENT xades:ResponderID (xades:ByName | xades:ByKey)>
<!ELEMENT xades:ByName  (#PCDATA)>
<!ELEMENT xades:ByKey  (#PCDATA)>
<!ELEMENT xades:ProducedAt (#PCDATA)>

<!-- End CompleteRevocationRefs -->

<!-- Start AttributeRevocationRefs -->

<!ELEMENT xades:AttributeRevocationRefs (xades:CRLRefs?, xades:OCSPRefs?, xades:OtherRefs?)>
<!ATTLIST xades:AttributeRevocationRefs
	Id ID #IMPLIED
>

<!-- End AttributeRevocationRefs -->

<!-- Start SigAndRefsTimeStamp, RefsOnlyTimeStamp  -->

<!ELEMENT xades:SigAndRefsTimeStamp (xades:Include*, ds:CanonicalizationMethod?, 
(xades:EncapsulatedTimeStamp | xades:XMLTimeStamp)+)>
<!ATTLIST xades:SigAndRefsTimeStamp
	Id ID #IMPLIED
>

<!ELEMENT xades:RefsOnlyTimeStamp (xades:Include*, ds:CanonicalizationMethod?, 
(xades:EncapsulatedTimeStamp | xades:XMLTimeStamp)+)>
<!ATTLIST xades:RefsOnlyTimeStamp
	Id ID #IMPLIED
>

<!-- End SigAndRefsTimeStamp, RefsOnlyTimeStamp  -->

<!-- Start CertificateValues -->

<!ELEMENT xades:CertificateValues (xades:EncapsulatedX509Certificate | 
xades:OtherCertificate)*>
<!ATTLIST xades:CertificateValues
	Id ID #IMPLIED
>

<!ELEMENT xades:EncapsulatedX509Certificate (#PCDATA)>
<!ATTLIST xades:EncapsulatedX509Certificate
	Id ID #IMPLIED
	Encoding CDATA #IMPLIED
>
<!ELEMENT xades:OtherCertificate (#PCDATA %Any.ANY;)*>

<!ELEMENT xades:AttrAuthoritiesCertValues (xades:EncapsulatedX509Certificate | 
xades:OtherCertificate)*>
<!ATTLIST xades:AttrAuthoritiesCertValues
	Id ID #IMPLIED
>

<!-- Start RevocationValues -->

<!ELEMENT xades:RevocationValues (xades:CRLValues?, xades:OCSPValues?, xades:OtherValues?)>
<!ATTLIST xades:RevocationValues
	Id ID #IMPLIED
>

<!ELEMENT xades:CRLValues (xades:EncapsulatedCRLValue+)>
<!ELEMENT xades:OCSPValues (xades:EncapsulatedOCSPValue+)>
<!ELEMENT xades:OtherValues (xades:OtherValue+)>

<!ELEMENT xades:EncapsulatedCRLValue (#PCDATA)>
<!ATTLIST xades:EncapsulatedCRLValue
	Id ID #IMPLIED
	Encoding CDATA #IMPLIED
>
<!ELEMENT xades:EncapsulatedOCSPValue (#PCDATA)>
<!ATTLIST xades:EncapsulatedOCSPValue
	Id ID #IMPLIED
	Encoding CDATA #IMPLIED
>
<!ELEMENT xades:OtherValue (#PCDATA %Any.ANY;  )*>

<!-- End RevocationValues -->

<!ELEMENT xades:AttributeRevocationValues (xades:CRLValues?, xades:OCSPValues?, xades:OtherValues?)>
<!ATTLIST xades:AttributeRevocationValues
	Id ID #IMPLIED
>
<!-- Start ArchiveTimeStamp -->

<!ELEMENT xades:ArchiveTimeStamp (xades:Include*, ds:CanonicalizationMethod?, 
(xades:EncapsulatedTimeStamp | xades:XMLTimeStamp)+)>
<!ATTLIST xades:ArchiveTimeStamp
	Id ID #IMPLIED
>


<!-- End ArchiveTimeStamp -->
